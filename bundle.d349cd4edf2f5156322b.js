/*! For license information please see bundle.d349cd4edf2f5156322b.js.LICENSE.txt */
(()=>{var e={87737:(e,t,n)=>{const r=n(84419).L,i=n(84419)._u,s=n(32896),{colors:o,geometries:a,modifiers:l}=n(80715),{flatten:c,toArray:h}=n(10047),u=(e,t)=>{let n=["basematerials",{id:"0"}];const r=[];return e.forEach(((e,n)=>{let i=o.rgbToHex(t.defaultcolor).toUpperCase();e.color&&(i=o.rgbToHex(e.color).toUpperCase()),r.push(["base",{name:`mat${n}`,displaycolor:i}])})),n=n.concat(r),n},d=(e,t)=>{const n=[];return e.forEach(((e,r)=>{a.geom3.isA(e)&&a.geom3.toPolygons(e).length>0&&(t.id=r,n.push(p(e,t)))})),n},p=(e,t)=>{const n=e.name?e.name:`Part ${t.id}`;return["object",{id:`${t.id+1}`,type:"model",pid:"0",pindex:`${t.id}`,name:n},f(e,t)]},f=(e,t)=>["mesh",{},m(e,t),v(e,t)],m=(e,t)=>{const n=[];return a.geom3.toPolygons(e).forEach((e=>{for(let r=0;r<e.vertices.length;r++)n.push(g(e.vertices[r],t))})),["vertices",{}].concat(n)},g=(e,t)=>["vertex",{x:e[0],y:e[1],z:e[2]}],v=(e,t)=>{let n=0;const r=a.geom3.toPolygons(e);let i=["triangles",{}];return r.forEach((e=>{if(e.vertices.length<3)return;const t=x(e,n);i=i.concat(t),n+=e.vertices.length})),i},x=(e,t)=>{const n=[];for(let r=0;r<e.vertices.length-2;r++){const e=["triangle",{v1:t,v2:t+r+1,v3:t+r+2}];n.push(e)}return n};e.exports={serialize:(e,...t)=>{e=Object.assign({},{unit:"millimeter",metadata:!0,defaultcolor:[1,160/255,0,1],compress:!0},e);const n=(t=c(t)).filter((e=>a.geom3.isA(e)));if(0===n.length)throw new Error("only 3D geometries can be serialized to 3MF");t.length!==n.length&&console.warn("some objects could not be serialized to 3MF"),t=h(l.generalize({snap:!0,triangulate:!0},n));const o=["model",{unit:e.unit,"xml:lang":"und"},["metadata",{name:"Application"},"JSCAD"]];e.metadata&&o.push(["metadata",{name:"CreationDate"},(new Date).toISOString()]),o.push(((e,t)=>{let n=["resources",{},u(e,t)];return n=n.concat(d(e,t)),n})(t,e)),o.push((e=>{let t=["build",{}];const n=[];return e.forEach(((e,t)=>{n.push(["item",{objectid:`${t+1}`}])})),t=t.concat(n),t})(t));const p=`<?xml version="1.0" encoding="UTF-8"?>\n${s(o,2)}`;if(e.compress){const e={"3D":{"3dmodel.model":i(p)},_rels:{".rels":i('<?xml version="1.0" encoding="UTF-8" ?>\n<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">\n  <Relationship Target="/3D/3dmodel.model" Id="rel0" Type="http://schemas.microsoft.com/3dmanufacturing/2013/01/3dmodel">\n  </Relationship>\n</Relationships>')},"[Content_Types].xml":i('<?xml version="1.0" encoding="UTF-8" ?>\n<Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types">\n  <Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml">\n  </Default>\n  <Default Extension="model" ContentType="application/vnd.ms-package.3dmanufacturing-3dmodel+xml">\n  </Default>\n</Types>')};return[r(e,{comment:"created by JSCAD"}).buffer]}return[p]},mimeType:"model/3mf",fileExtension:"3mf"}},34801:e=>{e.exports={inchMM:1/.03937}},23147:(e,t,n)=>{const r=n(22594),i=n(52447);e.exports=(e,t)=>{const s={pxPmm:n(34801).pxPmm};e=Object.assign({},s,e);const{pxPmm:o}=e,{amfObj:a,amfMaterials:l,amfTextures:c,amfConstels:h}=i(t,o);if(!a)throw new Error("AMF parsing failed, no valid AMF data retrieved");return d={amfMaterials:l,amfTextures:c,amfConstels:h},(u=a).objects.filter((e=>"object"===e.type)).map(((e,t)=>r(e,t,d,{amf:u,instantiate:!0})));var u,d}},8617:e=>{e.exports={amfMesh:e=>({type:"mesh",objects:[]}),amfVertices:e=>({type:"vertices",objects:[]}),amfCoordinates:e=>({type:"coordinates",objects:[]}),amfX:e=>({type:"x",value:"0"}),amfY:e=>({type:"y",value:"0"}),amfZ:e=>({type:"z",value:"0"}),amfNormal:e=>({type:"normal",objects:[]}),amfVolume:e=>{const t={type:"volume"};return e.materialid&&(t.materialid=e.materialid),t.objects=[],t},amfTriangle:e=>({type:"triangle",objects:[]}),amfV1:e=>({type:"v1",value:"0"}),amfV2:e=>({type:"v2",value:"0"}),amfV3:e=>({type:"v3",value:"0"}),amfVertex:e=>({type:"vertex",objects:[]}),amfEdge:e=>({type:"edge",objects:[]}),amfMetadata:e=>{const t={type:"metadata"};return e.type&&(t.mtype=e.type),e.id&&(t.id=e.id),t},amfMaterial:e=>{const t={type:"material"};return e.id&&(t.id=e.id),t.objects=[],t},amfColor:e=>({type:"color",objects:[]}),amfR:e=>({type:"r",value:"1"}),amfG:e=>({type:"g",value:"1"}),amfB:e=>({type:"b",value:"1"}),amfA:e=>({type:"a",value:"1"}),amfMap:e=>{const t={type:"map"};return e.gtexid&&(t.gtexid=e.gtexid),e.btexid&&(t.btexid=e.btexid),e.rtexid&&(t.rtexid=e.rtexid),t.objects=[],t},amfU1:e=>({type:"u1",value:"0"}),amfU2:e=>({type:"u2",value:"0"}),amfU3:e=>({type:"u3",value:"0"})}},36684:(e,t,n)=>{const{ensureString:r}=n(39569),i=n(70682).rE,s=n(2690),o=n(23147);e.exports={deserialize:(e,t)=>{const n={filename:"amf",output:"script",version:i,addMetaData:!0};return e=Object.assign({},n,e),t=r(t),"script"===e.output?s(e,t):o(e,t)},extension:"amf"}},22594:(e,t,n)=>{const{maths:r,geometries:i}=n(80715);let s;const o=(e,t)=>{for(let n=0;n<e.length;n++)if(e[n].type===t)return e[n].value;return null},a=e=>{for(let t=0;t<e.length;t++){const n=e[t];if("color"===n.type){let e=parseFloat(o(n.objects,"r")),t=parseFloat(o(n.objects,"g")),r=parseFloat(o(n.objects,"b")),i=parseFloat(o(n.objects,"a"));return Number.isNaN(e)&&(e=1),Number.isNaN(t)&&(t=1),Number.isNaN(r)&&(r=1),Number.isNaN(i)&&(i=1),[e,t,r,i]}}return null};e.exports=(e,t,n,l)=>{const c=[],h=[],u=[],d=n.amfMaterials,p=(e,t)=>{if("coordinates"===e.type){const t=parseFloat(o(e.objects,"x")),n=parseFloat(o(e.objects,"y")),r=parseFloat(o(e.objects,"z"));c.push([t,n,r])}},f=(e,t)=>{"vertex"===e.type&&e.objects.forEach(p)},m=(e,t)=>{if("triangle"===e.type){const t=parseInt(o(e.objects,"v1")),n=parseInt(o(e.objects,"v2")),r=parseInt(o(e.objects,"v3"));h.push([t,n,r]);const i=a(e.objects);i?u.push(i):u.push(g)}};let g=null;const v=(e,t)=>{switch(e.type){case"vertices":e.objects.forEach(f);break;case"volume":g=a(e.objects),e.materialid&&(g=((e,t)=>{const n=((e,t)=>{if(s&&s.id===t)return s;for(let n=0;n<e.length;n++)if(e[n].id&&e[n].id===t)return s=e[n],s;return null})(e,t);return n?a(n.objects):null})(d,e.materialid)),e.objects.forEach(m)}},x=(e,t)=>{"mesh"===e.type&&e.objects.forEach(v)};if(!0===l.instantiate){const t=l.amf.scale,n=1!==t?([e,n,i])=>r.vec3.fromValues(e*t,n*t,i*t):e=>r.vec3.clone(e);e.objects.forEach(x);const s=a(e.objects),o=h.length,d=c.length,p=[];for(let e=0;e<o;e++){const t=[];for(let r=0;r<h[e].length;r++)h[e][r]<0||h[e][r]>=d||t.push(n(c[h[e][r]]));const r=i.poly3.fromPoints(t),s=u[e]?u[e]:void 0;s&&(r.color=s),p.push(r)}let f=i.geom3.create(p);return s&&(f=f.color=s),f}let _="";if(e.objects.length>0){e.objects.forEach(x);const t=a(e.objects),n=h.length,r=c.length;_+=`\n// Object ${e.id}\n//  faces   : ${n}\n//  vertices: ${r}\nconst createObject${e.id} = () => {\n  let polygons = []\n  let polygon\n`;for(let e=0;e<n;e++){_+="  polygon = geometries.poly3.fromPoints([\n";for(let t=0;t<h[e].length;t++)h[e][t]<0||h[e][t]>=r||(_+=`      [${c[h[e][t]]}],\n`);_+="  ])\n";const t=u[e];t&&(_+=`  polygon.color = [${t}]\n`),_+="  polygons.push(polygon)\n"}_+="  let shape = geometries.geom3.create(polygons)\n";const i=l.scale?l.scale:1;1!==i&&(_+=`  shape = transforms.scale([${i},${i},${i}], shape)\n`),t&&(_+=`  shape = colors.colorize([${t}], shape)\n`),_+="  return shape\n}\n"}return _}},52447:(e,t,n)=>{const r=n(38223),{amfMesh:i,amfVertices:s,amfCoordinates:o,amfX:a,amfY:l,amfZ:c,amfNormal:h,amfVolume:u,amfTriangle:d,amfV1:p,amfV2:f,amfV3:m,amfVertex:g,amfEdge:v,amfMetadata:x,amfMaterial:_,amfColor:b,amfR:y,amfG:E,amfB:S,amfA:M,amfMap:A,amfU1:T,amfU2:w,amfU3:C}=n(8617),{inchMM:R}=n(34801);let P=null,D=0;const L=[],I=[],N=[],O=[];let U=null;const F=e=>{const t={type:"amf",unit:"mm",scale:1};switch(e.unit&&(t.unit=e.unit.toLowerCase()),t.unit.toLowerCase()){case"inch":t.scale=R;break;case"foot":t.scale=12*R;break;case"meter":t.scale=1e3;break;case"micron":t.scale=.001}return t.objects=[],t};e.exports=(e,t)=>((e=>{const t=new r.SaxesParser;t.on("error",(e=>{console.log(`ERROR: AMF file line ${e.line}, column ${e.column}, bad character [${e.c}]`)})),t.on("opentag",(e=>{const t={AMF:F,OBJECT:e=>{const t=(e=>{const t={type:"object",id:`JSCAD${L.length}`};return e.id&&(t.id=e.id),t.objects=[],t})(e);return 0===D&&(D=1),t},MESH:i,VERTICES:s,VERTEX:g,EDGE:v,VOLUME:u,MATERIAL:e=>{const t=_(e);return 0===D&&(D=2),t},TEXTURE:e=>{0===D&&(D=3)},CONSTELLATION:e=>{0===D&&(D=4)},METADATA:e=>{const t=x(e);return 0===D&&(D=5),t},COORDINATES:o,NORMAL:h,NX:a,X:a,NY:l,Y:l,NZ:c,Z:c,TRIANGLE:d,V1:p,VTEX1:p,V2:f,VTEX2:f,V3:m,VTEX3:m,COLOR:b,R:y,G:E,B:S,A:M,MAP:A,TEXMAP:A,U1:T,UTEX1:T,WTEX1:T,U2:w,UTEX2:w,WTEX2:w,U3:C,UTEX3:C,WTEX3:C,COMPOSITE:()=>{},undefined:()=>console.log(`WARNING: unsupported AMF element: ${e.name}`)},n=e.name.toUpperCase(),r=t[n]?t[n](e.attributes,{amfObjects:L}):null;if(r){switch(D){case 0:"objects"in r&&L.push(r);break;case 1:if(L.length>0){const e=L.pop();"objects"in e&&e.objects.push(r),L.push(e),"objects"in r&&L.push(r)}break;case 2:if("material"===r.type)I.push(r);else if(I.length>0){const e=I.pop();"objects"in e&&e.objects.push(r),I.push(e),"objects"in r&&I.push(r)}break;case 3:case 4:case 5:break;default:console.log("WARNING: invalid AMF definition")}P=r}})),t.on("closetag",(e=>{switch(e.name.toUpperCase()){case"AMF":case"OBJECT":case"MESH":case"VERTICES":case"VERTEX":case"EDGE":case"COORDINATES":case"NORMAL":case"VOLUME":case"TRIANGLE":case"MATERIAL":case"COLOR":case"MAP":case"TEXMAP":break;case"TEXTURE":return void(3===D&&(D=0));case"CONSTELLATION":return void(4===D&&(D=0));case"METADATA":return void(5===D&&(D=0));default:return}let t=null;switch(D){case 0:case 1:L.length>0&&(t=L.pop(),"object"===t.type&&(D=0)),0===L.length&&(U=t);break;case 2:I.length>0&&(t=I.pop(),"material"===t.type&&(I.push(t),D=0));break;case 3:case 4:case 5:D=0}})),t.on("text",(e=>{null!==e&&(e=e.trim()).length>0&&P&&0!==D&&(P.value=e,P=null)})),t.on("end",(()=>{})),t.write(e).close()})(e),{amfObj:U,amfMaterials:I,amfTextures:N,amfConstels:O})},2690:(e,t,n)=>{const r=n(22594),i=n(52447);e.exports=(e,t)=>{const s={pxPmm:n(34801).pxPmm};e=Object.assign({},s,e);const{version:o,pxPmm:a,addMetaData:l,filename:c}=e;e&&e.statusCallback&&e.statusCallback({progress:0});const{amfObj:h,amfMaterials:u,amfTextures:d,amfConstels:p}=i(t,a);let f=l?`//\n// Produced by JSCAD IO Library : AMF Deserializer (${o})\n// date: ${new Date}\n// source: ${c}\n//\n`:"";if(!h)throw new Error("AMF parsing failed, no valid AMF data retrieved");return e&&e.statusCallback&&e.statusCallback({progress:50}),f+=((e,t)=>{if("amf"!==e.type||!e.objects)throw new Error("AMF parsing failed, malformed");let n="";const i=e.objects,s=t.amfMaterials;n=`// Objects  : ${i.length}\n// Materials: ${s.length}\n// Scale    : ${e.scale} from Units (${e.unit})\n\nconst {colors, geometries, transforms} = require('@jscad/modeling')\n\nconst main = () => {\n  let objects = []\n`;for(let e=0;e<i.length;e++){const t=i[e];"object"===t.type&&(n+=`  objects.push(createObject${t.id}())\n`)}return n+="  return objects\n}\n",i.forEach(((i,s)=>{switch(i.type){case"object":n+=r(i,s,t,{instantiate:!1,scale:e.scale});break;case"metadata":case"material":break;default:console.log("WARNING: unknown object type: "+i.type)}})),n+="module.exports = {main}\n",n})(h,{amfMaterials:u,amfTextures:d,amfConstels:p}),e&&e.statusCallback&&e.statusCallback({progress:100}),f}},14974:(e,t,n)=>{const r=n(62383),{geometries:i,modifiers:s}=n(80715),{flatten:o,toArray:a}=n(10047),l=(e,t)=>["object",{id:t.id},c(e,t)],c=(e,t)=>{let n=["mesh",{},h(e,t)];return n=n.concat(p(e,t)),n},h=(e,t)=>{const n=[];return i.geom3.toPolygons(e).forEach((e=>{for(let r=0;r<e.vertices.length;r++)n.push(u(e.vertices[r],t))})),["vertices",{}].concat(n)},u=(e,t)=>["vertex",{},d(e,t)],d=(e,t)=>["coordinates",{},["x",{},e[0]],["y",{},e[1]],["z",{},e[2]]],p=(e,t)=>{const n=f(e.color),r=i.geom3.toPolygons(e),s=[];let o=["volume",{}];n&&o.push(n);let a=0;return r.forEach((e=>{if(e.vertices.length<3)return;const n=m(e,a,t);o=o.concat(n),a+=e.vertices.length})),s.push(o),s},f=e=>e?(e.length<4&&e.push(1),["color",{},["r",{},e[0]],["g",{},e[1]],["b",{},e[2]],["a",{},e[3]]]):null,m=(e,t,n)=>{const r=(e=>{const t=e.color;return f(t)})(e),i=[];for(let n=0;n<e.vertices.length-2;n++)r?i.push(["triangle",{},r,["v1",{},t],["v2",{},t+n+1],["v3",{},t+n+2]]):i.push(["triangle",{},["v1",{},t],["v2",{},t+n+1],["v3",{},t+n+2]]);return i};e.exports={serialize:(e,...t)=>{e=Object.assign({},{statusCallback:null,unit:"millimeter"},e);let n=(t=o(t)).filter((e=>i.geom3.isA(e)));if(0===n.length)throw new Error("only 3D geometries can be serialized to AMF");t.length!==n.length&&console.warn("some objects could not be serialized to AMF"),n=a(s.generalize({snap:!0,triangulate:!0},n)),e.statusCallback&&e.statusCallback({progress:0});let c=["amf",{unit:e.unit,version:"1.1"},["metadata",{type:"author"},"Created by JSCAD"]];c=c.concat(((e,t)=>{const n=[];return e.forEach(((e,r)=>{i.geom3.toPolygons(e).length>0&&(t.id=r,n.push(l(e,t)))})),n})(n,e));const h=`<?xml version="1.0" encoding="UTF-8"?>\n${r(c,2)}`;return e&&e.statusCallback&&e.statusCallback({progress:100}),[h]},mimeType:"application/amf+xml"}},62383:e=>{"use strict";e.exports=function(e,t){const n=t>0?"\n":"",r=function(e){if(!(e>0))return e=>e;var t=" ".repeat(e);return e=>{if("string"!=typeof e)return e;const n=e.split("\n");return 1===n.length?t+e:n.map((e=>""===e.trim()?e:t+e)).join("\n")}}(t);return function e(t){let i,s="",o=!0;return t.some(((t,r,a)=>{if(0===r)return i="<"+t,1===a.length;if(1===r){if((l=t)&&"[object Object]"===Object.prototype.toString.call(l))return Object.keys(t).map((e=>{let n=t[e];Array.isArray(n)&&(n=n.join(" ")),i+=" "+e+'="'+n+'"'})),2===a.length||void(i+=">");i+=">"}var l;switch(typeof t){case"string":case"number":case"boolean":case"undefined":return void(s+=t+n)}o=!1,s+=e(t)}))?i+"/>"+n:o?i+s.split("\n").filter((e=>""!==e.trim())).join("\n")+"</"+t[0]+">"+n:i+n+r(s)+"</"+t[0]+">"+n}(e)}},17645:e=>{const t=e=>e.reduce(((e,n)=>Array.isArray(n)?e.concat(t(n)):e.concat(n)),[]);e.exports=t},89254:e=>{e.exports=(e,t)=>e-t},61089:e=>{e.exports=e=>{if(Array.isArray(e)&&0!==e.length)return e[0]}},10047:(e,t,n)=>{e.exports={flatten:n(17645),fnNumberSort:n(89254),head:n(61089),insertSorted:n(3475),nth:n(58717),padToLength:n(94643),toArray:n(75857)}},3475:e=>{e.exports=(e,t,n)=>{let r=0,i=e.length;for(;i>r;){const s=Math.floor((r+i)/2);n(t,e[s])>0?r=s+1:i=s}return e.splice(r,0,t),e}},58717:e=>{e.exports=(e,t)=>{if(Array.isArray(e)&&!(e.length<t))return e[t]}},94643:e=>{e.exports=(e,t,n)=>{for(e=e.slice();e.length<n;)e.push(t);return e}},75857:e=>{e.exports=e=>Array.isArray(e)?e:null==e?[]:[e]},37138:(e,t)=>{!function(e){function t(e){const t=this;t.options=e||{},t.trackPosition=!1!==t.options.track,t.trackPosition&&(t.line=t.column=t.c=0)}e.reader=function(e){return new t(e)},e.STATES=["start","end","error"],t.prototype={on:function(e,t){this["on"+e]=t},absorb:function(e,t){void 0===this.absorbers&&(this.absorbers=new Map),this.absorbers.set(e,t)},write:function(e){return s(this,e),this},close:function(){return this.isclosed=!0,this}};const n=(e,t)=>(e.trackPosition&&(t+=`\nLine: ${e.line}\nColumn: ${e.column}\nChar: ${e.c}`),t=new Error(t),e.error=t,i(e,"onerror",t)),r=e=>i(e,"onend",e.data),i=(e,t,n)=>{const r=t.toString();return e[r]&&e[r](e,n),e},s=(e,t)=>{if(e.error)throw e.error;if(e.isclosed)return n(e,"Cannot write after close");if((e=>{i(e,"onstart",e.data)})(e),null===t)return r(e);e.group=null,e.value=null,e.error=null,e.position=0,e.line=0,e.column=0;let s=0,a="",l="";for(;null===e.error&&(a=c(t,s++),a);)e.trackPosition&&(e.position++,"\n"===a?(e.line++,e.column=0):e.column++),"\n"===a?(o(e,l),l=""):l+=a;return r(e),e},o=(e,t)=>{t=t.trim(),null===e.group?(a(e,t),e.value=null):l(e,t),null!==e.group&&null!==e.value&&(((e,t,n)=>{if(void 0!==e.absorbers){const r=e.absorbers.get(t);void 0!==r&&r(e,t,n)}})(e,e.group,e.value),e.group=null,e.value=null)},a=(e,t)=>{const r=parseInt(t);isNaN(r)?(n(e,"Invalid group (int)"),e.group=null):e.group=r},l=(e,t)=>{e.options.strict,e.value=t},c=(e,t)=>e&&e.length>t?e.charAt(t):""}(t)},92194:e=>{const t=new Map([[0,"etyp"],[1,"text"],[2,"name"],[3,"nam1"],[5,"hdle"],[6,"ltyp"],[7,"lsty"],[8,"lnam"],[9,"vari"],[10,"pptx"],[11,"sptx"],[12,"tptx"],[13,"fptx"],[20,"ppty"],[21,"spty"],[22,"tpty"],[23,"fpty"],[30,"pptz"],[31,"sptz"],[32,"tptz"],[33,"fptz"],[38,"elev"],[39,"lthk"],[40,"swid"],[41,"ewid"],[42,"bulg"],[43,"cwid"],[48,"lscl"],[50,"ang0"],[51,"ang1"],[60,"visb"],[62,"cnmb"],[67,"spac"],[70,"lflg"],[71,"fvia"],[72,"fvib"],[73,"fvic"],[74,"fvid"],[75,"cflg"],[90,"vlen"],[91,"slen"],[92,"plen"],[93,"flen"],[94,"elen"],[95,"clen"],[100,"sbnm"],[210,"etrx"],[220,"etry"],[230,"etrz"]]);e.exports={drawingUnits:[[0,"none"],[1,"inches"],[2,"feet"],[3,"miles"],[4,"millimeters"],[5,"centimeters"],[6,"meters"],[7,"kilometers"],[8,"microinches"],[9,"mils"],[10,"yards"],[11,"angstroms"],[12,"nanometers"],[13,"microns"],[14,"decimeters"],[15,"dekameters"],[16,"hectometers"],[17,"gigameters"],[18,"astrounits"],[19,"lightyears"],[20,"parsecs"]],BYBLOCK:0,BYLAYER:256,getTLA:e=>t.get(e)}},42444:e=>{e.exports=[[0,0,0,255],[255,0,0,255],[255,255,0,255],[0,255,0,255],[0,255,255,255],[0,0,255,255],[255,0,255,255],[255,255,255,255],[128,128,128,255],[192,192,192,255],[255,0,0,255],[255,127,127,255],[165,0,0,255],[165,82,82,255],[127,0,0,255],[127,63,63,255],[76,0,0,255],[76,38,38,255],[38,0,0,255],[38,19,19,255],[255,63,0,255],[255,159,127,255],[165,41,0,255],[165,103,82,255],[127,31,0,255],[127,79,63,255],[76,19,0,255],[76,47,38,255],[38,9,0,255],[38,28,19,255],[255,127,0,255],[255,191,127,255],[165,82,0,255],[165,124,82,255],[127,63,0,255],[127,95,63,255],[76,38,0,255],[76,57,38,255],[38,19,0,255],[38,28,19,255],[255,191,0,255],[255,223,127,255],[165,124,0,255],[165,145,82,255],[127,95,0,255],[127,111,63,255],[76,57,0,255],[76,66,38,255],[38,28,0,255],[38,33,19,255],[255,255,0,255],[255,255,127,255],[165,165,0,255],[165,165,82,255],[127,127,0,255],[127,127,63,255],[76,76,0,255],[76,76,38,255],[38,38,0,255],[38,38,19,255],[191,255,0,255],[223,255,127,255],[124,165,0,255],[145,165,82,255],[95,127,0,255],[111,127,63,255],[57,76,0,255],[66,76,38,255],[28,38,0,255],[33,38,19,255],[127,255,0,255],[191,255,127,255],[82,165,0,255],[124,165,82,255],[63,127,0,255],[95,127,63,255],[38,76,0,255],[57,76,38,255],[19,38,0,255],[28,38,19,255],[63,255,0,255],[159,255,127,255],[41,165,0,255],[103,165,82,255],[31,127,0,255],[79,127,63,255],[19,76,0,255],[47,76,38,255],[9,38,0,255],[23,38,19,255],[0,255,0,255],[125,255,127,255],[0,165,0,255],[82,165,82,255],[0,127,0,255],[63,127,63,255],[0,76,0,255],[38,76,38,255],[0,38,0,255],[19,38,19,255],[0,255,63,255],[127,255,159,255],[0,165,41,255],[82,165,103,255],[0,127,31,255],[63,127,79,255],[0,76,19,255],[38,76,47,255],[0,38,9,255],[19,88,23,255],[0,255,127,255],[127,255,191,255],[0,165,82,255],[82,165,124,255],[0,127,63,255],[63,127,95,255],[0,76,38,255],[38,76,57,255],[0,38,19,255],[19,88,28,255],[0,255,191,255],[127,255,223,255],[0,165,124,255],[82,165,145,255],[0,127,95,255],[63,127,111,255],[0,76,57,255],[38,76,66,255],[0,38,28,255],[19,88,88,255],[0,255,255,255],[127,255,255,255],[0,165,165,255],[82,165,165,255],[0,127,127,255],[63,127,127,255],[0,76,76,255],[38,76,76,255],[0,38,38,255],[19,88,88,255],[0,191,255,255],[127,223,255,255],[0,124,165,255],[82,145,165,255],[0,95,127,255],[63,111,217,255],[0,57,76,255],[38,66,126,255],[0,28,38,255],[19,88,88,255],[0,127,255,255],[127,191,255,255],[0,82,165,255],[82,124,165,255],[0,63,127,255],[63,95,127,255],[0,38,76,255],[38,57,126,255],[0,19,38,255],[19,28,88,255],[0,63,255,255],[127,159,255,255],[0,41,165,255],[82,103,165,255],[0,31,127,255],[63,79,127,255],[0,19,76,255],[38,47,126,255],[0,9,38,255],[19,23,88,255],[0,0,255,255],[127,127,255,255],[0,0,165,255],[82,82,165,255],[0,0,127,255],[63,63,127,255],[0,0,76,255],[38,38,126,255],[0,0,38,255],[19,19,88,255],[63,0,255,255],[159,127,255,255],[41,0,165,255],[103,82,165,255],[31,0,127,255],[79,63,127,255],[19,0,76,255],[47,38,126,255],[9,0,38,255],[23,19,88,255],[127,0,255,255],[191,127,255,255],[165,0,82,255],[124,82,165,255],[63,0,127,255],[95,63,127,255],[38,0,76,255],[57,38,126,255],[19,0,38,255],[28,19,88,255],[191,0,255,255],[223,127,255,255],[124,0,165,255],[142,82,165,255],[95,0,127,255],[111,63,127,255],[57,0,76,255],[66,38,76,255],[28,0,38,255],[88,19,88,255],[255,0,255,255],[255,127,255,255],[165,0,165,255],[165,82,165,255],[127,0,127,255],[127,63,127,255],[76,0,76,255],[76,38,76,255],[38,0,38,255],[88,19,88,255],[255,0,191,255],[255,127,223,255],[165,0,124,255],[165,82,145,255],[127,0,95,255],[127,63,111,255],[76,0,57,255],[76,38,66,255],[38,0,28,255],[88,19,88,255],[255,0,127,255],[255,127,191,255],[165,0,82,255],[165,82,124,255],[127,0,63,255],[127,63,95,255],[76,0,38,255],[76,38,57,255],[38,0,19,255],[88,19,28,255],[255,0,63,255],[255,127,159,255],[165,0,41,255],[165,82,103,255],[127,0,31,255],[127,63,79,255],[76,0,19,255],[76,38,47,255],[38,0,9,255],[88,19,23,255],[0,0,0,255],[101,101,101,255],[102,102,102,255],[153,153,153,255],[204,204,204,255],[255,255,255,255]]},38058:(e,t,n)=>{const{BYBLOCK:r,BYLAYER:i}=n(92194),s=(e,t)=>{const n=e.lnam||"0";for(const e of t)if(e.name===n)return e;return null};e.exports={findLayer:s,getColor:(e,t)=>{if(e<1)return null;const n=t[e=((e,t)=>{const n=e%t;return Math.floor(n>=0?n:n+t)})(e,t.length)];return[n[0]/255,n[1]/255,n[2]/255,n[3]/255]},getColorNumber:(e,t)=>{let n=e.cnmb||-1;if(n===i){n=-1;const r=s(e,t);null!==r&&(n=r.cnmb||-1)}return n}}},20731:(e,t,n)=>{const{ensureString:r}=n(39569),i=n(74136).rE,{BYLAYER:s,getTLA:o}=n(92194),a=n(42444),l=n(37138),{instantiateAsciiDxf:c}=n(13695),h=n(41417),u=(e,t)=>{if(!0===e.options.strict)throw t;console.log(`error: line ${t.line}, column ${t.column}, bad character [${t.c}]`)},d=(e,t)=>{},p=(e,t)=>{},f=(e,t,n)=>{let r=null;switch(n){case"LAYER":r={type:"layer"},r[o(48)]=1,r[o(60)]=0,r[o(67)]=0,e.objstack.push(r);break;case"LINE":r={type:"line"},r[o(48)]=1,r[o(60)]=0,r[o(62)]=s,r[o(67)]=0,r[o(210)]=0,r[o(220)]=0,r[o(230)]=0,e.objstack.push(r);break;case"LWPOLYLINE":r={type:"lwpolyline"},r[o(48)]=1,r[o(60)]=0,r[o(62)]=s,r[o(67)]=0,r[o(38)]=0,r[o(39)]=0,r[o(43)]=0,r[o(70)]=0,r[o(90)]=0,r[o(210)]=0,r[o(220)]=0,r[o(230)]=1,e.objstack.push(r);break;case"MESH":r={type:"mesh"},r[o(48)]=1,r[o(60)]=0,r[o(62)]=s,r[o(67)]=0,r[o(91)]=0,r[o(92)]=0,r[o(93)]=0,r[o(94)]=0,r[o(95)]=0,r.state=0,e.objstack.push(r);break;case"POLYLINE":r={type:"polyline"},r[o(48)]=1,r[o(60)]=0,r[o(62)]=s,r[o(67)]=0,r[o(10)]=0,r[o(20)]=0,r[o(30)]=0,r[o(39)]=0,r[o(40)]=0,r[o(41)]=0,r[o(70)]=0,r[o(71)]=0,r[o(72)]=0,r[o(73)]=0,r[o(74)]=0,r[o(75)]=0,r[o(210)]=0,r[o(220)]=0,r[o(230)]=1,e.objstack.push(r);break;case"ARC":r={type:"arc"},r[o(48)]=1,r[o(60)]=0,r[o(62)]=s,r[o(67)]=0,r[o(39)]=0,r[o(210)]=0,r[o(220)]=0,r[o(230)]=1,e.objstack.push(r);break;case"CIRCLE":r={type:"circle"},r[o(48)]=1,r[o(60)]=0,r[o(62)]=s,r[o(67)]=0,r[o(39)]=0,r[o(210)]=0,r[o(220)]=0,r[o(230)]=1,e.objstack.push(r);break;case"ELLIPSE":r={type:"ellipse"},r[o(48)]=1,r[o(60)]=0,r[o(62)]=s,r[o(67)]=0,r[o(210)]=0,r[o(220)]=0,r[o(230)]=1,e.objstack.push(r);break;case"VERTEX":r={type:"vertex"},r[o(48)]=1,r[o(60)]=0,r[o(62)]=s,r[o(67)]=0,r[o(10)]=0,r[o(20)]=0,r[o(30)]=0,r[o(40)]=0,r[o(41)]=0,r[o(42)]=0,r[o(70)]=0,r[o(71)]=0,r[o(72)]=0,r[o(73)]=0,r[o(74)]=0,e.objstack.push(r);break;case"3DFACE":r={type:"3dface"},r[o(48)]=1,r[o(60)]=0,r[o(62)]=s,r[o(67)]=0,r[o(70)]=0,e.objstack.push(r);break;case"SEQEND":r={type:"seqend"},e.objstack.push(r);break;default:r={},e.objstack.push(r)}},m=(e,t,n)=>{const r={type:"variable",name:n};e.objstack.push(r)},g=(e,t,n)=>{const r=e.objstack.pop();"type"in r&&(r[o(t)]=parseFloat(n)),e.objstack.push(r)},v=(e,t,n)=>{const r=e.objstack.pop();"type"in r&&(r[o(t)]=parseFloat(n)),e.objstack.push(r)},x=(e,t,n)=>{const r=e.objstack.pop();"type"in r&&("lwpolyline"===r.type?(void 0===r.pptxs&&(r.pptxs=[],r.bulgs=[]),r.pptxs.push(parseFloat(n)),r.bulgs.push(0)):"mesh"===r.type?(void 0===r.pptxs&&(r.pptxs=[]),r.pptxs.push(parseFloat(n))):r[o(t)]=parseFloat(n)),e.objstack.push(r)},_=(e,t,n)=>{const r=e.objstack.pop();"type"in r&&("lwpolyline"===r.type||"mesh"===r.type?(void 0===r.pptys&&(r.pptys=[]),r.pptys.push(parseFloat(n))):r[o(t)]=parseFloat(n)),e.objstack.push(r)},b=(e,t,n)=>{const r=e.objstack.pop();"type"in r&&("mesh"===r.type?(void 0===r.pptzs&&(r.pptzs=[]),r.pptzs.push(parseFloat(n))):r[o(t)]=parseFloat(n)),e.objstack.push(r)},y=(e,t,n)=>{const r=e.objstack.pop();if("type"in r)if("lwpolyline"===r.type){const e=r.bulgs;void 0!==e&&r.pptxs.length===e.length&&(e[e.length-1]=parseFloat(n))}else r[o(t)]=parseFloat(n);e.objstack.push(r)},E=(e,t,n)=>{const r=e.objstack.pop();if("type"in r)if("mesh"===r.type){const e=r.state;switch(t){case 91:r[o(t)]=parseFloat(n),r.state=1;break;case 92:1===e?(r.vlen=parseFloat(n),r.state=2):(r.plen=parseFloat(n),r.state=6);break;case 93:r[o(t)]=parseFloat(n),r.state=3;break;case 94:r[o(t)]=parseFloat(n),r.state=4;break;case 95:r[o(t)]=parseFloat(n),r.state=5;break;default:r.state=7}}else r[o(t)]=parseFloat(n);e.objstack.push(r)},S=(e,t,n)=>{const r=e.objstack.pop();if("type"in r)if("mesh"===r.type)switch(r.state){case 3:void 0===r.fvals&&(r.fvals=[]),r.fvals.push(parseFloat(n));break;case 4:void 0===r.evals&&(r.evals=[]),r.evals.push(parseFloat(n))}else r[o(t)]=parseFloat(n);e.objstack.push(r)},M=(e,t,n)=>{const r=e.objstack.pop();"type"in r&&(r[o(t)]=n),e.objstack.push(r)},A=(e,t,n)=>{const r=e.objstack.pop();"type"in r&&void 0===r[o(t)]&&(r[o(t)]=n),e.objstack.push(r)},T=(e,t)=>{const n=l.reader(t);return n.on("error",u),n.on("start",d),n.on("end",p),n.absorb(0,f),n.absorb(1,M),n.absorb(2,A),n.absorb(3,A),n.absorb(6,M),n.absorb(7,M),n.absorb(8,M),n.absorb(9,m),n.absorb(10,x),n.absorb(11,v),n.absorb(12,v),n.absorb(13,v),n.absorb(20,_),n.absorb(21,v),n.absorb(22,v),n.absorb(23,v),n.absorb(30,b),n.absorb(31,v),n.absorb(32,v),n.absorb(33,v),n.absorb(39,v),n.absorb(40,v),n.absorb(41,v),n.absorb(42,y),n.absorb(50,v),n.absorb(51,v),n.absorb(62,g),n.absorb(70,g),n.absorb(71,g),n.absorb(72,g),n.absorb(73,g),n.absorb(74,g),n.absorb(75,g),n.absorb(90,S),n.absorb(91,E),n.absorb(92,E),n.absorb(93,E),n.absorb(94,E),n.absorb(95,E),n.absorb(210,g),n.absorb(220,g),n.absorb(230,g),n.objstack=[],n.objstack.push({type:"dxf"}),n.write(e).close(),n};e.exports={deserialize:(e,t)=>{const n={filename:"dxf",version:i,output:"script",strict:!0,colorindex:a,dxf:{angdir:0,insunits:4,pfacevmax:4}};return e=Object.assign({},n,e),t=r(t),"script"===e.output?((e,t)=>{const n=T(e,t);let r=`// Produced by JSCAD IO Library : DXF Deserializer (${t.version})\n\n`;return r+=h(n,t),r})(t,e):((e,t)=>{const n=T(e,t);return c(n,t)})(t,e)},extension:"dxf"}},13695:(e,t,n)=>{const{geometries:r,maths:i,primitives:s}=n(80715),{getColor:o,getColorNumber:a}=n(38058),l=(e,t,n)=>{const s=[];if(s.push(i.vec3.fromValues(e.pptx,e.ppty,e.pptz)),s.push(i.vec3.fromValues(e.sptx,e.spty,e.sptz)),s.push(i.vec3.fromValues(e.tptx,e.tpty,e.tptz)),e.fptx){let t=!1;e.tptx!==e.fptx&&(t=!0),e.tpty!==e.fpty&&(t=!0),e.tptz!==e.fptz&&(t=!0),t&&s.push(i.vec3.fromValues(e.fptx,e.fpty,e.fptz))}const l=a(e,t),c=o(l,n.colorindex),h=r.poly3.create(s);return c&&(h.color=c),h},c=(e,t,n)=>{if(e.pptz===e.sptz&&0===e.pptz){const t=i.vec2.fromValues(e.pptx,e.ppty),n=i.vec2.fromValues(e.sptx,e.spty);return s.line([t,n])}const r=i.vec3.fromValues(e.pptx,e.ppty,e.pptz),o=i.vec3.fromValues(e.sptx,e.spty,e.sptz);return s.line([r,o])},h=e=>{const t=parseInt("00000000000100000",2),n=parseInt("00000000001000000",2),r=parseInt("00000000010000000",2),s=e.lflg,o={};return(s&t)===t||(s&n)===n?o.vec=i.vec3.fromValues(e.pptx,e.ppty,e.pptz):(s&r)===r?(o.vec=i.vec3.fromValues(e.pptx,e.ppty,e.pptz),o.fvia=e.fvia,o.fvib=e.fvib,o.fvic=e.fvic,o.fvid=e.fvid):(o.vec=i.vec2.fromValues(e.pptx,e.ppty),o.bulg=e.bulg),o},u=(e,t,n,s)=>{if(0===s)e=r.path2.appendPoints([[t,n]],e);else{const o=r.path2.toPoints(e),a=o[o.length-1],l=i.vec2.fromValues(t,n),c=i.vec2.distance(a,l)*((1+Math.pow(s,2))/(4*s)),h=s<0,u=!1,d=4*Math.atan(s),p=16;e=r.path2.appendArc({endpoint:[t,n],radius:[c,c],xaxisrotation:d,clockwise:h,large:u,segments:p},e)}return e},d=(e,t,n)=>{const i=parseInt("00000000000000001",2),s=e.vlen,o=e.pptxs,a=e.pptys,l=e.bulgs,c=e.lflg;let h=r.path2.create();const d=(c&i)===i;return s!==o.length||s!==a.length||s!==l.length||(o.forEach(((e,t,n)=>{let r=0;t>0&&(r=l[t-1]),h=u(h,o[t],a[t],r)})),d&&!h.isClosed&&(h=u(h,o[0],a[0],l[s-1]),h=r.path2.close(h))),h},p=(e,t,n)=>{e.lthk;const r=e.pptx,i=e.ppty,o=e.swid;let a=e.ang0;a*=.017453292519943295;let l=e.ang1;return l*=.017453292519943295,s.arc({center:[r,i],radius:o,startAngle:a,endAngle:l,segments:16})},f=(e,t,n)=>{const r=e.lthk,i=e.pptx,l=e.ppty,c=e.swid,h=a(e,t),u=o(h,n.colorindex);if(0===r){const e=s.circle({center:[i,l],radius:c,segments:16});return u&&(e.color=u),e}const d=s.circle({center:[i,l],radius:c,segments:16}).extrude({offset:[0,0,r]});return u&&(d.color=u),d},m=(e,t,n)=>{const o=e.pptx,a=e.ppty,l=e.pptz,c=e.sptx,h=e.spty,u=e.sptz,d=e.swid;if(0===l&&0===u){const e=i.vec2.fromValues(0,0),t=i.vec2.fromValues(c,h),n=i.vec2.distance(e,t),l=n*d;let u=180*Math.atan2(h,c)/Math.PI;u<1e-5&&(u=0),u*=.017453292519943295;const p=s.ellipse({center:[0,0],radius:[n,l],segments:16}),f=i.mat4.fromZRotation(i.mat4.create(),u);return i.mat4.multiply(f,f,i.mat4.fromTranslation(i.mat4.create(),[o,a,0])),r.geom2.transform(f,p)}},g=(e,t,n)=>{const s=e.vlen,l=e.pptxs,c=e.pptys,h=e.pptzs,u=e.flen,d=e.fvals,p=a(e,t),f=o(p,n.colorindex),m=[];if(s===l.length&&s===c.length&&s===h.length&&u===d.length){const e=(e=>{const t=[];let n=0;for(;n<e.length;){let r=e[n++];const i=[];for(;r>0;)i.push(e[n++]),r--;t.push(i)}return t})(d),t=((e,t,n)=>{const r=[];let i=0;for(;i<e.length;){const s=e[i],o=t[i],a=n[i];r.push([s,o,a]),i++}return r})(l,c,h);let s=0;for(;s<e.length;){const o=e[s];let a=[],l=0;for(;l<o.length;){const e=o[l],n=i.vec3.clone(t[e]);a.push(n),l++}1===n.dxf.angdir&&(a=a.reverse());const c=r.poly3.create(a);f&&(c.color=f),m.push(c),s++}}return r.geom3.create(m)},v=e=>{const t=parseInt("00000000000000001",2),n=parseInt("00000000000001000",2),i=parseInt("00000000000010000",2),s=parseInt("00000000000100000",2),o=parseInt("00000000001000000",2),a=e.lflg;let l=null;return(a&n)===n?l=null:(a&i)===i||(a&o)===o?(l=r.geom3.create(),l.closedM=(a&t)===t,l.closedN=(a&s)===s):(l=r.path2.create(),l.closedM=(a&t)===t),"cnmb"in e&&(l.cnmb=e.cnmb),l},x=(e,t,n,i,s)=>{if(r.path2.isA(t)){const n=i.map((e=>e.vec));e.push(r.path2.fromPoints({closed:t.closed},n))}return r.geom3.isA(t)&&e.push(r.geom3.create(n)),null};e.exports={instantiatePolygon:l,instantiateVector:h,instantiateAsciiDxf:(e,t)=>{const n=[];let i=null;const s=[],o=[],a=[];let u=null;for(const _ of e.objstack)if(u=null,"type"in _){switch(_.type){case"dxf":default:break;case"layer":i=x(o,i,s,a),n.push(_);break;case"variable":case"seqend":i=x(o,i,s,a);break;case"3dface":u=l(_,n,t),null===i&&(i=r.geom3.create());break;case"mesh":i=x(o,i,s,a),o.push(g(_,n,t));break;case"arc":i=x(o,i,s,a),o.push(p(_));break;case"circle":i=x(o,i,s,a),o.push(f(_,n,t));break;case"ellipse":i=x(o,i,s,a),o.push(m(_));break;case"line":i=x(o,i,s,a),o.push(c(_));break;case"polyline":i=x(o,i,s,a),null===i&&(i=v(_));break;case"vertex":u=h(_);break;case"lwpolyline":i=x(o,i,s,a),o.push(d(_))}r.poly3.isA(u)&&s.push(u),u&&"vec"in u&&3===u.vec.length&&a.push(u),u&&"vec"in u&&2===u.vec.length&&a.push(u)}return i=x(o,i,s,a),o}}},41417:(e,t,n)=>{const{maths:r,geometries:i}=n(80715),{instantiatePolygon:s,instantiateVector:o}=n(13695),{findLayer:a,getColor:l,getColorNumber:c}=n(38058),h=e=>`${e[0]},${e[1]}`,u=e=>`${e[0]},${e[1]},${e[2]}`,d=e=>{const t=i.poly3.toPoints(e);let n="createPolygon([";return t.forEach((e=>{n+=`[${u(e)}],`})),n+=`],${p(e)})`,n},p=e=>{let t="null";if("color"in e){const n=e.color;t=`[${n[0]},${n[1]},${n[2]},${n[3]}]`}return t},f=(e,t,n)=>{const i=e.name,s=c(e,t),o=l(s,n.colorindex);let a="";if(!e.pptz||e.pptz===e.sptz&&0===e.pptz){const t=r.vec2.fromValues(e.pptx,e.ppty),n=r.vec2.fromValues(e.sptx,e.spty);a=`  let ${i} = primitives.line([[${h(t)}],[${h(n)}]])\n`}else{const t=r.vec3.fromValues(e.pptx,e.ppty,e.pptz),n=r.vec3.fromValues(e.sptx,e.spty,e.sptz);a=`  let ${i} = primitives.line([[${u(t)}],[${u(n)}]])\n`}o&&(a+=`  ${i} = colors.colorize([${o[0]}, ${o[1]}, ${o[2]}, 1], ${i})\n`),e.script=a,y(e,t)},m=(e,t,n,i,s,o)=>{if(0===i)return`geometries.path2.appendPoints([[${t},${n}]], ${e})\n`;const a=r.vec2.fromValues(s,o),l=r.vec2.fromValues(t,n),c=r.vec2.distance(a,l)*((1+Math.pow(i,2))/(4*i)),h=i<0;return`geometries.path2.appendArc({endpoint: [${t},${n}],radius: [${c},${c}],xaxisrotation: ${4*Math.atan(i)},clockwise: ${h},large: false,segments: 16}, ${e})\n`},g=(e,t,n)=>{const r=parseInt("00000000000000001",2),i=e.vlen,s=e.pptxs,o=e.pptys,a=e.bulgs,h=e.lflg,u=e.name,d=c(e,t),p=l(d,n.colorindex);let f=`  let ${u} = geometries.path2.create()\n`;const g=(h&r)===r;if(i===s.length&&i===o.length&&i===a.length){f+=`  ${u} = geometries.path2.appendPoints([[${s[0]}, ${o[0]}]], ${u})\n`;for(let e=0;e<s.length;e++){const t=(e+1)%s.length,n=s[t],r=o[t],i=s[e],l=o[e],c=a[e];(0!==t||0!==c)&&(f+=`  ${u} = ${m(u,n,r,c,i,l)}`)}f+=g?`  ${u} = geometries.path2.close(${u})\n`:"\n",p&&(f+=`  ${u} = colors.colorize([${p[0]}, ${p[1]}, ${p[2]}, 1], ${u})\n`),e.script=f,y(e,t)}},v=(e,t,n)=>{const r=e.lthk,i=e.pptx,s=e.ppty,o=e.swid;let a=e.ang0,h=e.ang1;const u=e.name,d=c(e,t),p=l(d,n.colorindex);if(a*=.017453292519943295,h*=.017453292519943295,0===r){let n=`  let ${u} = primitives.arc({center: [${i}, ${s}], radius: ${o}, startAngle: ${a}, endAngle: ${h}, segements: 16})\n`;return p&&(n+=`  ${u} = colors.colorize([${p[0]}, ${p[1]}, ${p[2]}, 1], ${u})\n`),e.script=n,void y(e,t)}let f=`  let ${u} = primitives.arc({center: [${i}, ${s}], radius: ${o}, startAngle: ${a}, endAngle: ${h}, segements: 16})\n`;p&&(f+=`  ${u} = colors.colorize([${p[0]}, ${p[1]}, ${p[2]}, 1], ${u})\n`),e.script=f,y(e,t)},x=(e,t,n)=>{const r=e.lthk,i=e.pptx,s=e.ppty,o=e.swid,a=e.name,h=c(e,t),u=l(h,n.colorindex);if(0===r){let n=`  let ${a} = primitives.circle({center: [${i}, ${s}], radius: ${o}, segments: 16})\n`;return u&&(n+=`  ${a} = colors.colorize([${u[0]}, ${u[1]}, ${u[2]}, 1], ${a})\n`),e.script=n,void y(e,t)}let d=`  let ${a} = primitives.circle({center: [${i}, ${s}], radius: ${o}, segments: 16}).extrude({offset: [0,0,${r}]}))\n`;u&&(d+=`  ${a} = colors.colorize([${u[0]}, ${u[1]}, ${u[2]}, 1], ${a})\n`),e.script=d,y(e,t)},_=(e,t,n)=>{const i=e.pptx,s=e.ppty,o=e.pptz,a=e.sptx,h=e.spty,u=e.sptz,d=e.swid,p=e.name,f=c(e,t),m=l(f,n.colorindex);if(0===o&&0===u){const n=r.vec2.fromValues(0,0),o=r.vec2.fromValues(a,h),l=r.vec2.distance(n,o);let c=`  let ${p} = primitives.ellipse({center: [0, 0, 0], radius: [${l}, ${l*d}], segments: 16})\n  let ${p}matrix = maths.mat4.multiply(maths.mat4.create(), maths.mat4.fromTranslation(maths.mat4.create(), [${i}, ${s}, 0]), maths.mat4.fromZRotation(maths.mat4.create(), ${Math.atan2(h,a)}))\n  ${p} = geometries.geom2.transform(${p}matrix, ${p})\n`;m&&(c+=`  ${p} = colors.colorize([${m[0]}, ${m[1]}, ${m[2]}, 1], ${p})\n`),e.script=c,y(e,t)}},b=(e,t,n)=>{const s=e.vlen,o=e.pptxs,a=e.pptys,h=e.pptzs,u=e.flen,p=e.fvals,f=c(e,t),m=l(f,n.colorindex),g=[];if(s===o.length&&s===a.length&&s===h.length)if(u===p.length){const e=(e=>{const t=[];let n=0;for(;n<e.length;){let r=e[n++];const i=[];for(;r>0;)i.push(e[n++]),r--;t.push(i)}return t})(p),t=((e,t,n)=>{const r=[];let i=0;for(;i<e.length;){const s=e[i],o=t[i],a=n[i];r.push([s,o,a]),i++}return r})(o,a,h);let s=0;for(;s<e.length;){const o=e[s];let a=[],l=0;for(;l<o.length;){const e=o[l],n=r.vec3.clone(t[e]);a.push(n),l++}1===n.dxf.angdir&&(a=a.reverse());const c=i.poly3.create(a);m&&(c.color=m),g.push(c),s++}}else console.warn("invalid mesh: faces");else console.warn("invalid mesh: vertices");const v=e.name;let x=`  const ${v}_polygons = [\n`;for(const e of g)x+="    "+d(e)+",\n";return x+=`  ]\n  let ${v} = geometries.geom3.create(${v}_polygons)\n`,e.script=x,y(e,t),null},y=(e,t)=>{let n=a(e,t);null===n&&(n=(e=>{for(const t of e)if("0"===t.name)return t;const t={type:"layer",lnam:"layer0",name:"0",lscl:1,visb:0,spac:0,objects:[]};return e.push(t),t})(t)),"objects"in n||(n.objects=[]),n.objects.push(e)},E=e=>{const t=parseInt("00000000000000001",2),n=parseInt("00000000000001000",2),r=parseInt("00000000000010000",2),i=parseInt("00000000000100000",2),s=parseInt("00000000001000000",2),o=e.lflg;let a=null;return(o&n)===n?a={type:"3dline",isclosed:(o&t)===t}:(o&r)===r?(a={type:"3dpolymesh"},a.fvia=e.fvia,a.fvib=e.fvib,a.closedM=(o&t)===t,a.closedN=(o&i)===i):(o&s)===s?(a={type:"3dpolyfaces"},a.fvia=e.fvia,a.fvib=e.fvib):a={type:"2dline",isclosed:(o&t)===t},"cnmb"in e&&(a.cnmb=e.cnmb),"lnam"in e&&(a.lnam=e.lnam),a},S=(e,t,n,r)=>{if(null===e)return null;const s=e.type,o=c(e,t),a=l(o,r.colorindex);if("2dline"===s)return((e,t,n,r)=>{e.vlen=n.length,e.pptxs=[],e.pptys=[],e.bulgs=[];for(const t of n)e.pptxs.push(t.vec[0]),e.pptys.push(t.vec[1]),e.bulgs.push(t.bulg);return e.isclosed?e.lflg=parseInt("00000000000000001",2):e.lflg=0,g(e,t,r),null})(e,t,n,r);if("3dline"===s)return null;if("3dpolymesh"===s){const t=((e,t,n,r,s)=>{const o=(e,r)=>n[(e-1)*t+(r-1)].vec,a=[];if(e*t!==n.length)return a;if(e<2|t<2)return a;let l=1;for(;l<e;){let e=1;for(;e<t;){let t=[o(l,e),o(l+1,e),o(l+1,e+1),o(l,e+1)];1===s.dxf.angdir&&(t=t.reverse());const n=i.poly3.create(t),c=i.poly3.plane(n);Number.isFinite(c[3])&&(r&&(n.color=r),a.push(n)),e++}l++}return a})(e.fvia,e.fvib,n,a,r);n=t}if("3dpolyfaces"===s&&"fvia"in e){const t=((e,t,n,r,s)=>{const o=[];if(e+t!==n.length)return o;let a=e;for(;a<n.length;){let e=n[a];const t=[Math.abs(e.fvia),Math.abs(e.fvib),Math.abs(e.fvic),Math.abs(e.fvid)];let r=[];if(t[0]>0&&(e=n[t[0]-1],r.push(e.vec),t[1]>0&&(e=n[t[1]-1],r.push(e.vec),t[2]>0&&(e=n[t[2]-1],r.push(e.vec),t[3]>0&&(e=n[t[3]-1],r.push(e.vec))))),r.length>2){1===s.dxf.angdir&&(r=r.reverse());const e=i.poly3.create(r);o.push(e)}a++}return o})(e.fvia,e.fvib,n,0,r);n=t}const h=e.name;let u=`  const ${h}_polygons = [\n`;for(const e of n)u+="    "+d(e)+",\n";return u+=`  ]\n  let ${h} = geometries.geom3.create(${h}_polygons)\n`,a&&(u+=`  ${h}.color = [${a}]\n`),e.script=u,y(e,t),null},M=(e,t)=>{"$ANGDIR"===(e.name||"Unknown")&&"lflg"in e&&(t.dxf.angdir=e.lflg)};e.exports=(e,t)=>{const n=[];let r=null,a=[],l=0,c=null;for(const h of e.objstack)if(c=null,"type"in h){if("name"in h){let e=h.name;e=e.replace(/ /g,"_"),e=e.replace(/-/g,"_"),e=e.replace(/\./g,"_"),h.name=e}else h.name="jscad"+l,l+=1;switch(h.type){case"dxf":default:break;case"layer":r=S(r,n,a,t),a=[],h.objects=[],h.lnam="layer"+n.length,n.push(h);break;case"variable":r=S(r,n,a,t),a=[],M(h,t);break;case"3dface":c=s(h,n,t),null===r&&(r={type:"3dfaces"},r.name="jscad"+l,l+=1);break;case"mesh":r=S(r,n,a,t),a=[],b(h,n,t);break;case"arc":r=S(r,n,a,t),a=[],v(h,n,t);break;case"circle":r=S(r,n,a,t),a=[],x(h,n,t);break;case"ellipse":r=S(r,n,a,t),a=[],_(h,n,t);break;case"line":r=S(r,n,a,t),a=[],f(h,n,t);break;case"polyline":r=S(r,n,a,t),a=[],null===r&&(r=E(h),r.name="jscad"+l,l+=1);break;case"vertex":c=o(h);break;case"seqend":r=S(r,n,a,t),a=[];break;case"lwpolyline":r=S(r,n,a,t),a=[],g(h,n,t)}i.poly3.isA(c)&&a.push(c),c&&"vec"in c&&3===c.vec.length&&a.push(c),c&&"vec"in c&&2===c.vec.length&&a.push(c)}r=S(r,n,a,t);let h="const {colors, geometries, maths, primitives, transforms} = require('@jscad/modeling')\n\nconst main = () => {\n  let layers = []\n  return layers.concat(";return n.forEach((e=>{const t=e.lnam||"Unknown";h+=`${t}(),`})),h+="[])\n}\n",h+="\nfunction createPolygon(listofpoints, color) {\n  let polygon = geometries.poly3.fromPoints(listofpoints)\n  if (color) polygon.color = color\n  return polygon\n}\n",n.forEach((e=>{h+=(e=>{let t=`function ${e.lnam||"Unknown"}() {\n`;for(const n of e.objects)t+=n.script;t+="  return [";for(const n of e.objects)t+=n.name+",";return t+="]\n}\n",t})(e)})),h+="module.exports = {main}\n",h}},60234:e=>{e.exports={dxfHeaders:function(){return"  0\nSECTION\n  2\nHEADER\n  9\n$ACADVER\n  1\nAC1027\n  9\n$ACADMAINTVER\n 70\n8\n  9\n$DWGCODEPAGE\n  3\nANSI_1252\n  9\n$LASTSAVEDBY\n  1\nunknown\n  9\n$REQUIREDVERSIONS\n160\n0\n  9\n$INSBASE\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$EXTMIN\n 10\n1e+20\n 20\n1e+20\n 30\n1e+20\n  9\n$EXTMAX\n 10\n-1e+20\n 20\n-1e+20\n 30\n-1e+20\n  9\n$LIMMIN\n 10\n0.0\n 20\n0.0\n  9\n$LIMMAX\n 10\n12.0\n 20\n9.0\n  9\n$ORTHOMODE\n 70\n0\n  9\n$REGENMODE\n 70\n1\n  9\n$FILLMODE\n 70\n1\n  9\n$QTEXTMODE\n 70\n0\n  9\n$MIRRTEXT\n 70\n0\n  9\n$LTSCALE\n 40\n1.0\n  9\n$ATTMODE\n 70\n1\n  9\n$TEXTSIZE\n 40\n0.2\n  9\n$TRACEWID\n 40\n0.05\n  9\n$TEXTSTYLE\n  7\nNotes\n  9\n$CLAYER\n  8\n0\n  9\n$CELTYPE\n  6\nByLayer\n  9\n$CECOLOR\n 62\n256\n  9\n$CELTSCALE\n 40\n1.0\n  9\n$DISPSILH\n 70\n0\n  9\n$DIMSCALE\n 40\n1.0\n  9\n$DIMASZ\n 40\n3.0\n  9\n$DIMEXO\n 40\n1.5\n  9\n$DIMDLI\n 40\n6.0\n  9\n$DIMRND\n 40\n0.0\n  9\n$DIMDLE\n 40\n0.0\n  9\n$DIMEXE\n 40\n3.0\n  9\n$DIMTP\n 40\n0.0\n  9\n$DIMTM\n 40\n0.0\n  9\n$DIMTXT\n 40\n3.0\n  9\n$DIMCEN\n 40\n3.0\n  9\n$DIMTSZ\n 40\n0.0\n  9\n$DIMTOL\n 70\n0\n  9\n$DIMLIM\n 70\n0\n  9\n$DIMTIH\n 70\n0\n  9\n$DIMTOH\n 70\n0\n  9\n$DIMSE1\n 70\n0\n  9\n$DIMSE2\n 70\n0\n  9\n$DIMTAD\n 70\n1\n  9\n$DIMZIN\n 70\n3\n  9\n$DIMBLK\n  1\n\n  9\n$DIMASO\n 70\n1\n  9\n$DIMSHO\n 70\n1\n  9\n$DIMPOST\n  1\n\n  9\n$DIMAPOST\n  1\n\n  9\n$DIMALT\n 70\n0\n  9\n$DIMALTD\n 70\n2\n  9\n$DIMALTF\n 40\n25.4\n  9\n$DIMLFAC\n 40\n1.0\n  9\n$DIMTOFL\n 70\n0\n  9\n$DIMTVP\n 40\n0.0\n  9\n$DIMTIX\n 70\n0\n  9\n$DIMSOXD\n 70\n0\n  9\n$DIMSAH\n 70\n0\n  9\n$DIMBLK1\n  1\n\n  9\n$DIMBLK2\n  1\n\n  9\n$DIMSTYLE\n  2\nCivil-Metric\n  9\n$DIMCLRD\n 70\n0\n  9\n$DIMCLRE\n 70\n0\n  9\n$DIMCLRT\n 70\n0\n  9\n$DIMTFAC\n 40\n1.0\n  9\n$DIMGAP\n 40\n2.0\n  9\n$DIMJUST\n 70\n0\n  9\n$DIMSD1\n 70\n0\n  9\n$DIMSD2\n 70\n0\n  9\n$DIMTOLJ\n 70\n1\n  9\n$DIMTZIN\n 70\n0\n  9\n$DIMALTZ\n 70\n0\n  9\n$DIMALTTZ\n 70\n0\n  9\n$DIMUPT\n 70\n0\n  9\n$DIMDEC\n 70\n2\n  9\n$DIMTDEC\n 70\n2\n  9\n$DIMALTU\n 70\n2\n  9\n$DIMALTTD\n 70\n2\n  9\n$DIMTXSTY\n  7\nStandard\n  9\n$DIMAUNIT\n 70\n0\n  9\n$DIMADEC\n 70\n2\n  9\n$DIMALTRND\n 40\n0.0\n  9\n$DIMAZIN\n 70\n2\n  9\n$DIMDSEP\n 70\n46\n  9\n$DIMATFIT\n 70\n3\n  9\n$DIMFRAC\n 70\n1\n  9\n$DIMLDRBLK\n  1\n\n  9\n$DIMLUNIT\n 70\n2\n  9\n$DIMLWD\n 70\n-2\n  9\n$DIMLWE\n 70\n-2\n  9\n$DIMTMOVE\n 70\n0\n  9\n$DIMFXL\n 40\n1.0\n  9\n$DIMFXLON\n 70\n0\n  9\n$DIMJOGANG\n 40\n0.785398163397\n  9\n$DIMTFILL\n 70\n0\n  9\n$DIMTFILLCLR\n 70\n0\n  9\n$DIMARCSYM\n 70\n0\n  9\n$DIMLTYPE\n  6\n\n  9\n$DIMLTEX1\n  6\n\n  9\n$DIMLTEX2\n  6\n\n  9\n$DIMTXTDIRECTION\n 70\n0\n  9\n$LUNITS\n 70\n2\n  9\n$LUPREC\n 70\n4\n  9\n$SKETCHINC\n 40\n0.1\n  9\n$FILLETRAD\n 40\n0.0\n  9\n$AUNITS\n 70\n4\n  9\n$AUPREC\n 70\n5\n  9\n$MENU\n  1\n.\n  9\n$ELEVATION\n 40\n0.0\n  9\n$PELEVATION\n 40\n0.0\n  9\n$THICKNESS\n 40\n0.0\n  9\n$LIMCHECK\n 70\n0\n  9\n$CHAMFERA\n 40\n0.0\n  9\n$CHAMFERB\n 40\n0.0\n  9\n$CHAMFERC\n 40\n0.0\n  9\n$CHAMFERD\n 40\n0.0\n  9\n$SKPOLY\n 70\n0\n  9\n$TDCREATE\n 40\n2457986.69756\n  9\n$TDUCREATE\n 40\n2455631.2632\n  9\n$TDUPDATE\n 40\n2457986.69756\n  9\n$TDUUPDATE\n 40\n2456436.43179\n  9\n$TDINDWG\n 40\n0.0003490741\n  9\n$TDUSRTIMER\n 40\n0.0003487153\n  9\n$USRTIMER\n 70\n1\n  9\n$ANGBASE\n 50\n0.0\n  9\n$ANGDIR\n 70\n0\n  9\n$PDMODE\n 70\n0\n  9\n$PDSIZE\n 40\n0.0\n  9\n$PLINEWID\n 40\n0.0\n  9\n$SPLFRAME\n 70\n0\n  9\n$SPLINETYPE\n 70\n6\n  9\n$SPLINESEGS\n 70\n8\n  9\n$HANDSEED\n  5\n5C7\n  9\n$SURFTAB1\n 70\n6\n  9\n$SURFTAB2\n 70\n6\n  9\n$SURFTYPE\n 70\n6\n  9\n$SURFU\n 70\n6\n  9\n$SURFV\n 70\n6\n  9\n$UCSBASE\n  2\n\n  9\n$UCSNAME\n  2\n\n  9\n$UCSORG\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSXDIR\n 10\n1.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSYDIR\n 10\n0.0\n 20\n1.0\n 30\n0.0\n  9\n$UCSORTHOREF\n  2\n\n  9\n$UCSORTHOVIEW\n 70\n0\n  9\n$UCSORGTOP\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSORGBOTTOM\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSORGLEFT\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSORGRIGHT\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSORGFRONT\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSORGBACK\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSBASE\n  2\n\n  9\n$PUCSNAME\n  2\n\n  9\n$PUCSORG\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSXDIR\n 10\n1.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSYDIR\n 10\n0.0\n 20\n1.0\n 30\n0.0\n  9\n$PUCSORTHOREF\n  2\n\n  9\n$PUCSORTHOVIEW\n 70\n0\n  9\n$PUCSORGTOP\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSORGBOTTOM\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSORGLEFT\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSORGRIGHT\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSORGFRONT\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSORGBACK\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$USERI1\n 70\n0\n  9\n$USERI2\n 70\n0\n  9\n$USERI3\n 70\n0\n  9\n$USERI4\n 70\n0\n  9\n$USERI5\n 70\n0\n  9\n$USERR1\n 40\n0.0\n  9\n$USERR2\n 40\n0.0\n  9\n$USERR3\n 40\n0.0\n  9\n$USERR4\n 40\n0.0\n  9\n$USERR5\n 40\n0.0\n  9\n$WORLDVIEW\n 70\n1\n  9\n$SHADEDGE\n 70\n3\n  9\n$SHADEDIF\n 70\n70\n  9\n$TILEMODE\n 70\n1\n  9\n$MAXACTVP\n 70\n64\n  9\n$PINSBASE\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PLIMCHECK\n 70\n0\n  9\n$PEXTMIN\n 10\n0.628866766397\n 20\n0.799999952316\n 30\n0.0\n  9\n$PEXTMAX\n 10\n9.02886638493\n 20\n7.19999957085\n 30\n0.0\n  9\n$PLIMMIN\n 10\n-0.700541819174\n 20\n-0.228100386192\n  9\n$PLIMMAX\n 10\n10.2994579405\n 20\n8.27189937351\n  9\n$UNITMODE\n 70\n0\n  9\n$VISRETAIN\n 70\n1\n  9\n$PLINEGEN\n 70\n0\n  9\n$PSLTSCALE\n 70\n1\n  9\n$TREEDEPTH\n 70\n3020\n  9\n$CMLSTYLE\n  2\nStandard\n  9\n$CMLJUST\n 70\n0\n  9\n$CMLSCALE\n 40\n1.0\n  9\n$PROXYGRAPHICS\n 70\n1\n  9\n$MEASUREMENT\n 70\n1\n  9\n$CELWEIGHT\n370\n-1\n  9\n$ENDCAPS\n280\n0\n  9\n$JOINSTYLE\n280\n0\n  9\n$LWDISPLAY\n290\n0\n  9\n$INSUNITS\n 70\n4\n  9\n$HYPERLINKBASE\n  1\n\n  9\n$STYLESHEET\n  1\n\n  9\n$XEDIT\n290\n1\n  9\n$CEPSNTYPE\n380\n0\n  9\n$PSTYLEMODE\n290\n1\n  9\n$FINGERPRINTGUID\n  2\n{39DB1BDD-BC6C-46D3-A333-DFCC0DC4782D}\n  9\n$VERSIONGUID\n  2\n{69EEBB2D-7039-498F-9366-3F994E4A07E7}\n  9\n$EXTNAMES\n290\n1\n  9\n$PSVPSCALE\n 40\n0.0\n  9\n$OLESTARTUP\n290\n0\n  9\n$SORTENTS\n280\n127\n  9\n$INDEXCTL\n280\n0\n  9\n$HIDETEXT\n280\n1\n  9\n$XCLIPFRAME\n280\n0\n  9\n$HALOGAP\n280\n0\n  9\n$OBSCOLOR\n 70\n257\n  9\n$OBSLTYPE\n280\n0\n  9\n$INTERSECTIONDISPLAY\n280\n0\n  9\n$INTERSECTIONCOLOR\n 70\n257\n  9\n$DIMASSOC\n280\n2\n  9\n$PROJECTNAME\n  1\n\n  9\n$CAMERADISPLAY\n290\n0\n  9\n$LENSLENGTH\n 40\n50.0\n  9\n$CAMERAHEIGHT\n 40\n0.0\n  9\n$STEPSPERSEC\n 40\n2.0\n  9\n$STEPSIZE\n 40\n6.0\n  9\n$3DDWFPREC\n 40\n2.0\n  9\n$PSOLWIDTH\n 40\n0.25\n  9\n$PSOLHEIGHT\n 40\n4.0\n  9\n$LOFTANG1\n 40\n1.57079632679\n  9\n$LOFTANG2\n 40\n1.57079632679\n  9\n$LOFTMAG1\n 40\n0.0\n  9\n$LOFTMAG2\n 40\n0.0\n  9\n$LOFTPARAM\n 70\n7\n  9\n$LOFTNORMALS\n280\n1\n  9\n$LATITUDE\n 40\n37.795\n  9\n$LONGITUDE\n 40\n-122.394\n  9\n$NORTHDIRECTION\n 40\n0.0\n  9\n$TIMEZONE\n 70\n-8000\n  9\n$LIGHTGLYPHDISPLAY\n280\n1\n  9\n$TILEMODELIGHTSYNCH\n280\n1\n  9\n$CMATERIAL\n347\n96\n  9\n$SOLIDHIST\n280\n1\n  9\n$SHOWHIST\n280\n1\n  9\n$DWFFRAME\n280\n2\n  9\n$DGNFRAME\n280\n0\n  9\n$REALWORLDSCALE\n290\n1\n  9\n$INTERFERECOLOR\n 62\n1\n  9\n$INTERFEREOBJVS\n345\nA3\n  9\n$INTERFEREVPVS\n346\nA0\n  9\n$CSHADOW\n280\n0\n  9\n$SHADOWPLANELOCATION\n 40\n0.0\n  0\nENDSEC"},dxfClasses:function(){return'  0\nSECTION\n  2\nCLASSES\n  0\nCLASS\n  1\nACDBDICTIONARYWDFLT\n  2\nAcDbDictionaryWithDefault\n  3\nObjectDBX Classes\n 90\n0\n 91\n1\n280\n0\n281\n0\n  0\nCLASS\n  1\nDICTIONARYVAR\n  2\nAcDbDictionaryVar\n  3\nObjectDBX Classes\n 90\n0\n 91\n15\n280\n0\n281\n0\n  0\nCLASS\n  1\nTABLESTYLE\n  2\nAcDbTableStyle\n  3\nObjectDBX Classes\n 90\n4095\n 91\n1\n280\n0\n281\n0\n  0\nCLASS\n  1\nMATERIAL\n  2\nAcDbMaterial\n  3\nObjectDBX Classes\n 90\n1153\n 91\n3\n280\n0\n281\n0\n  0\nCLASS\n  1\nVISUALSTYLE\n  2\nAcDbVisualStyle\n  3\nObjectDBX Classes\n 90\n4095\n 91\n26\n280\n0\n281\n0\n  0\nCLASS\n  1\nSCALE\n  2\nAcDbScale\n  3\nObjectDBX Classes\n 90\n1153\n 91\n17\n280\n0\n281\n0\n  0\nCLASS\n  1\nMLEADERSTYLE\n  2\nAcDbMLeaderStyle\n  3\nACDB_MLEADERSTYLE_CLASS\n 90\n4095\n 91\n3\n280\n0\n281\n0\n  0\nCLASS\n  1\nCELLSTYLEMAP\n  2\nAcDbCellStyleMap\n  3\nObjectDBX Classes\n 90\n1152\n 91\n2\n280\n0\n281\n0\n  0\nCLASS\n  1\nEXACXREFPANELOBJECT\n  2\nExAcXREFPanelObject\n  3\nEXAC_ESW\n 90\n1025\n 91\n0\n280\n0\n281\n0\n  0\nCLASS\n  1\nNPOCOLLECTION\n  2\nAcDbImpNonPersistentObjectsCollection\n  3\nObjectDBX Classes\n 90\n1153\n 91\n0\n280\n0\n281\n0\n  0\nCLASS\n  1\nLAYER_INDEX\n  2\nAcDbLayerIndex\n  3\nObjectDBX Classes\n 90\n0\n 91\n0\n280\n0\n281\n0\n  0\nCLASS\n  1\nSPATIAL_INDEX\n  2\nAcDbSpatialIndex\n  3\nObjectDBX Classes\n 90\n0\n 91\n0\n280\n0\n281\n0\n  0\nCLASS\n  1\nIDBUFFER\n  2\nAcDbIdBuffer\n  3\nObjectDBX Classes\n 90\n0\n 91\n0\n280\n0\n281\n0\n  0\nCLASS\n  1\nDIMASSOC\n  2\nAcDbDimAssoc\n  3\n"AcDbDimAssoc|Product Desc:     AcDim ARX App For Dimension|Company:          Autodesk, Inc.|WEB Address:      www.autodesk.com"\n 90\n0\n 91\n0\n280\n0\n281\n0\n  0\nCLASS\n  1\nACDBSECTIONVIEWSTYLE\n  2\nAcDbSectionViewStyle\n  3\nObjectDBX Classes\n 90\n1025\n 91\n1\n280\n0\n281\n0\n  0\nCLASS\n  1\nACDBDETAILVIEWSTYLE\n  2\nAcDbDetailViewStyle\n  3\nObjectDBX Classes\n 90\n1025\n 91\n1\n280\n0\n281\n0\n  0\nCLASS\n  1\nIMAGEDEF\n  2\nAcDbRasterImageDef\n  3\nISM\n 90\n0\n 91\n1\n280\n0\n281\n0\n  0\nCLASS\n  1\nRASTERVARIABLES\n  2\nAcDbRasterVariables\n  3\nISM\n 90\n0\n 91\n1\n280\n0\n281\n0\n  0\nCLASS\n  1\nIMAGEDEF_REACTOR\n  2\nAcDbRasterImageDefReactor\n  3\nISM\n 90\n1\n 91\n1\n280\n0\n281\n0\n  0\nCLASS\n  1\nIMAGE\n  2\nAcDbRasterImage\n  3\nISM\n 90\n2175\n 91\n1\n280\n0\n281\n1\n  0\nCLASS\n  1\nPDFDEFINITION\n  2\nAcDbPdfDefinition\n  3\nObjectDBX Classes\n 90\n1153\n 91\n1\n280\n0\n281\n0\n  0\nCLASS\n  1\nPDFUNDERLAY\n  2\nAcDbPdfReference\n  3\nObjectDBX Classes\n 90\n4095\n 91\n1\n280\n0\n281\n1\n  0\nCLASS\n  1\nDWFDEFINITION\n  2\nAcDbDwfDefinition\n  3\nObjectDBX Classes\n 90\n1153\n 91\n2\n280\n0\n281\n0\n  0\nCLASS\n  1\nDWFUNDERLAY\n  2\nAcDbDwfReference\n  3\nObjectDBX Classes\n 90\n1153\n 91\n1\n280\n0\n281\n1\n  0\nCLASS\n  1\nDGNDEFINITION\n  2\nAcDbDgnDefinition\n  3\nObjectDBX Classes\n 90\n1153\n 91\n2\n280\n0\n281\n0\n  0\nCLASS\n  1\nDGNUNDERLAY\n  2\nAcDbDgnReference\n  3\nObjectDBX Classes\n 90\n1153\n 91\n1\n280\n0\n281\n1\n  0\nENDSEC'},dxfTables:function(){return"  0\nSECTION\n  2\nTABLES\n  0\nTABLE\n  2\nVPORT\n  5\n8\n330\n0\n100\nAcDbSymbolTable\n 70\n0\n  0\nENDTAB\n  0\nTABLE\n  2\nLTYPE\n  5\n5F\n330\n0\n100\nAcDbSymbolTable\n 70\n7\n  0\nLTYPE\n  5\n14\n330\n5F\n100\nAcDbSymbolTableRecord\n100\nAcDbLinetypeTableRecord\n  2\nByBlock\n 70\n0\n  3\n\n 72\n65\n 73\n0\n 40\n0.0\n  0\nLTYPE\n  5\n15\n330\n5F\n100\nAcDbSymbolTableRecord\n100\nAcDbLinetypeTableRecord\n  2\nByLayer\n 70\n0\n  3\n\n 72\n65\n 73\n0\n 40\n0.0\n  0\nLTYPE\n  5\n16\n330\n5F\n100\nAcDbSymbolTableRecord\n100\nAcDbLinetypeTableRecord\n  2\nContinuous\n 70\n0\n  3\nSolid line\n 72\n65\n 73\n0\n 40\n0.0\n  0\nLTYPE\n  5\n1B1\n330\n5F\n100\nAcDbSymbolTableRecord\n100\nAcDbLinetypeTableRecord\n  2\nCENTER\n 70\n0\n  3\nCenter ____ _ ____ _ ____ _ ____ _ ____ _ ____\n 72\n65\n 73\n4\n 40\n2.0\n 49\n1.25\n 74\n0\n 49\n-0.25\n 74\n0\n 49\n0.25\n 74\n0\n 49\n-0.25\n 74\n0\n  0\nLTYPE\n  5\n1B2\n330\n5F\n100\nAcDbSymbolTableRecord\n100\nAcDbLinetypeTableRecord\n  2\nDASHED\n 70\n0\n  3\nDashed __ __ __ __ __ __ __ __ __ __ __ __ __ _\n 72\n65\n 73\n2\n 40\n0.75\n 49\n0.5\n 74\n0\n 49\n-0.25\n 74\n0\n  0\nLTYPE\n  5\n1B3\n330\n5F\n100\nAcDbSymbolTableRecord\n100\nAcDbLinetypeTableRecord\n  2\nPHANTOM\n 70\n0\n  3\nPhantom ______  __  __  ______  __  __  ______\n 72\n65\n 73\n6\n 40\n2.5\n 49\n1.25\n 74\n0\n 49\n-0.25\n 74\n0\n 49\n0.25\n 74\n0\n 49\n-0.25\n 74\n0\n 49\n0.25\n 74\n0\n 49\n-0.25\n 74\n0\n  0\nLTYPE\n  5\n39E\n330\n5F\n100\nAcDbSymbolTableRecord\n100\nAcDbLinetypeTableRecord\n  2\nHIDDEN\n 70\n0\n  3\nHidden __ __ __ __ __ __ __ __ __ __ __ __ __ __\n 72\n65\n 73\n2\n 40\n9.525\n 49\n6.35\n 74\n0\n 49\n-3.175\n 74\n0\n  0\nENDTAB\n  0\nTABLE\n  2\nLAYER\n  5\n2\n330\n0\n100\nAcDbSymbolTable\n 70\n3\n  0\nLAYER\n  5\n10\n330\n2\n100\nAcDbSymbolTableRecord\n100\nAcDbLayerTableRecord\n  2\n0\n 70\n0\n  6\nContinuous\n370\n-3\n390\nF\n347\n98\n348\n0\n  0\nLAYER\n  5\n1B4\n330\n2\n100\nAcDbSymbolTableRecord\n100\nAcDbLayerTableRecord\n  2\nView Port\n 70\n0\n  6\nContinuous\n290\n0\n370\n-3\n390\nF\n347\n98\n348\n0\n  0\nLAYER\n  5\n21D\n330\n2\n100\nAcDbSymbolTableRecord\n100\nAcDbLayerTableRecord\n  2\nDefpoints\n 70\n0\n  6\nContinuous\n290\n0\n370\n-3\n390\nF\n347\n98\n348\n0\n  0\nENDTAB\n  0\nTABLE\n  2\nSTYLE\n  5\n3\n330\n0\n100\nAcDbSymbolTable\n 70\n3\n  0\nSTYLE\n  5\n11\n330\n3\n100\nAcDbSymbolTableRecord\n100\nAcDbTextStyleTableRecord\n  2\nStandard\n 70\n0\n 40\n0.0\n 41\n1.0\n 50\n0.0\n 71\n0\n 42\n0.2\n  3\narial.ttf\n  4\n\n  0\nSTYLE\n  5\nDC\n330\n3\n100\nAcDbSymbolTableRecord\n100\nAcDbTextStyleTableRecord\n  2\nAnnotative\n 70\n0\n 40\n0.0\n 41\n1.0\n 50\n0.0\n 71\n0\n 42\n0.2\n  3\narial.ttf\n  4\n\n  0\nSTYLE\n  5\n178\n330\n3\n100\nAcDbSymbolTableRecord\n100\nAcDbTextStyleTableRecord\n  2\nNotes\n 70\n0\n 40\n3.0\n 41\n1.0\n 50\n0.0\n 71\n0\n 42\n0.2\n  3\narial.ttf\n  4\n\n  0\nENDTAB\n  0\nTABLE\n  2\nVIEW\n  5\n6\n330\n0\n100\nAcDbSymbolTable\n 70\n0\n  0\nENDTAB\n  0\nTABLE\n  2\nUCS\n  5\n7\n330\n0\n100\nAcDbSymbolTable\n 70\n0\n  0\nENDTAB\n  0\nTABLE\n  2\nAPPID\n  5\n9\n330\n0\n100\nAcDbSymbolTable\n 70\n12\n  0\nAPPID\n  5\n12\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nACAD\n 70\n0\n  0\nAPPID\n  5\nDD\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nAcadAnnoPO\n 70\n0\n  0\nAPPID\n  5\nDE\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nAcadAnnotative\n 70\n0\n  0\nAPPID\n  5\nDF\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nACAD_DSTYLE_DIMJAG\n 70\n0\n  0\nAPPID\n  5\nE0\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nACAD_DSTYLE_DIMTALN\n 70\n0\n  0\nAPPID\n  5\n107\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nACAD_MLEADERVER\n 70\n0\n  0\nAPPID\n  5\n1B5\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nAcAecLayerStandard\n 70\n0\n  0\nAPPID\n  5\n1BA\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nACAD_EXEMPT_FROM_CAD_STANDARDS\n 70\n0\n  0\nAPPID\n  5\n237\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nACAD_DSTYLE_DIMBREAK\n 70\n0\n  0\nAPPID\n  5\n28E\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nACAD_PSEXT\n 70\n0\n  0\nAPPID\n  5\n4B0\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nACAD_NAV_VCDISPLAY\n 70\n0\n  0\nAPPID\n  5\n4E3\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nHATCHBACKGROUNDCOLOR\n 70\n0\n  0\nENDTAB\n  0\nTABLE\n  2\nDIMSTYLE\n  5\nA\n330\n0\n100\nAcDbSymbolTable\n 70\n3\n100\nAcDbDimStyleTable\n 71\n3\n340\n242\n340\n27\n340\nE1\n  0\nDIMSTYLE\n105\n27\n330\nA\n100\nAcDbSymbolTableRecord\n100\nAcDbDimStyleTableRecord\n  2\nStandard\n 70\n0\n 41\n3.0\n 42\n2.0\n 43\n9.0\n 44\n5.0\n140\n3.0\n141\n2.0\n147\n2.0\n340\n11\n1001\nACAD_DSTYLE_DIMJAG\n1070\n388\n1040\n38.0\n1001\nACAD_DSTYLE_DIMBREAK\n1070\n391\n1040\n90.0\n1001\nACAD_DSTYLE_DIMTALN\n1070\n392\n1070\n0\n  0\nDIMSTYLE\n105\nE1\n330\nA\n100\nAcDbSymbolTableRecord\n100\nAcDbDimStyleTableRecord\n  2\nAnnotative\n 70\n0\n 40\n0.0\n 41\n3.0\n 42\n2.5\n 43\n10.0\n 44\n5.0\n140\n3.0\n141\n2.0\n147\n2.0\n340\n11\n1001\nAcadAnnotative\n1000\nAnnotativeData\n1002\n{\n1070\n1\n1070\n1\n1002\n}\n1001\nACAD_DSTYLE_DIMJAG\n1070\n388\n1040\n38.0\n1001\nACAD_DSTYLE_DIMBREAK\n1070\n391\n1040\n90.0\n1001\nACAD_DSTYLE_DIMTALN\n1070\n392\n1070\n0\n  0\nDIMSTYLE\n105\n242\n330\nA\n100\nAcDbSymbolTableRecord\n100\nAcDbDimStyleTableRecord\n  2\nCivil-Metric\n 70\n0\n 41\n3.0\n 42\n1.5\n 43\n6.0\n 44\n3.0\n 73\n0\n 74\n0\n 77\n1\n 78\n3\n 79\n2\n140\n3.0\n141\n3.0\n147\n2.0\n179\n2\n271\n2\n272\n2\n276\n1\n340\n11\n1001\nACAD_DSTYLE_DIMBREAK\n1070\n391\n1040\n3.0\n1001\nACAD_DSTYLE_DIMJAG\n1070\n388\n1040\n38.0\n1001\nACAD_DSTYLE_DIMTALN\n1070\n392\n1070\n0\n  0\nENDTAB\n  0\nTABLE\n  2\nBLOCK_RECORD\n  5\n1\n330\n0\n100\nAcDbSymbolTable\n 70\n4\n  0\nBLOCK_RECORD\n  5\n1F\n330\n1\n100\nAcDbSymbolTableRecord\n100\nAcDbBlockTableRecord\n  2\n*Model_Space\n340\n530\n 70\n0\n280\n1\n281\n0\n  0\nBLOCK_RECORD\n  5\n58\n330\n1\n100\nAcDbSymbolTableRecord\n100\nAcDbBlockTableRecord\n  2\n*Paper_Space\n340\n531\n 70\n0\n280\n1\n281\n0\n  0\nBLOCK_RECORD\n  5\n238\n330\n1\n100\nAcDbSymbolTableRecord\n100\nAcDbBlockTableRecord\n  2\n_ArchTick\n340\n0\n 70\n0\n280\n1\n281\n0\n  0\nBLOCK_RECORD\n  5\n23C\n330\n1\n100\nAcDbSymbolTableRecord\n100\nAcDbBlockTableRecord\n  2\n_Open30\n340\n0\n 70\n0\n280\n1\n281\n0\n  0\nENDTAB\n  0\nENDSEC"},dxfBlocks:function(){return"  0\nSECTION\n  2\nBLOCKS\n  0\nBLOCK\n  5\n23A\n330\n238\n100\nAcDbEntity\n  8\n0\n100\nAcDbBlockBegin\n  2\n_ArchTick\n 70\n0\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  3\n_ArchTick\n  1\n\n  0\nENDBLK\n  5\n23B\n330\n238\n100\nAcDbEntity\n  8\n0\n100\nAcDbBlockEnd\n  0\nBLOCK\n  5\n20\n330\n1F\n100\nAcDbEntity\n  8\n0\n100\nAcDbBlockBegin\n  2\n*Model_Space\n 70\n0\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  3\n*Model_Space\n  1\n\n  0\nENDBLK\n  5\n21\n330\n1F\n100\nAcDbEntity\n  8\n0\n100\nAcDbBlockEnd\n  0\nBLOCK\n  5\n5A\n330\n58\n100\nAcDbEntity\n 67\n1\n  8\n0\n100\nAcDbBlockBegin\n  2\n*Paper_Space\n 70\n0\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  3\n*Paper_Space\n  1\n\n  0\nENDBLK\n  5\n5B\n330\n58\n100\nAcDbEntity\n 67\n1\n  8\n0\n100\nAcDbBlockEnd\n  0\nBLOCK\n  5\n240\n330\n23C\n100\nAcDbEntity\n  8\n0\n100\nAcDbBlockBegin\n  2\n_Open30\n 70\n0\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  3\n_Open30\n  1\n\n  0\nENDBLK\n  5\n241\n330\n23C\n100\nAcDbEntity\n  8\n0\n100\nAcDbBlockEnd\n  0\nENDSEC"},dxfObjects:function(){return"  0\nSECTION\n  2\nOBJECTS\n  0\nDICTIONARY\n  5\nC\n330\n0\n100\nAcDbDictionary\n281\n1\n  3\nACAD_COLOR\n350\n524\n  3\nACAD_GROUP\n350\n525\n  3\nACAD_LAYOUT\n350\n526\n  3\nACAD_MATERIAL\n350\n527\n  3\nACAD_MLEADERSTYLE\n350\n528\n  3\nACAD_MLINESTYLE\n350\n529\n  3\nACAD_PLOTSETTINGS\n350\n52A\n  3\nACAD_PLOTSTYLENAME\n350\n52C\n  3\nACAD_SCALELIST\n350\n52D\n  3\nACAD_TABLESTYLE\n350\n52E\n  3\nACAD_VISUALSTYLE\n350\n52F\n  0\nDICTIONARY\n  5\n524\n330\nC\n100\nAcDbDictionary\n281\n1\n  0\nDICTIONARY\n  5\n525\n330\nC\n100\nAcDbDictionary\n281\n1\n  0\nDICTIONARY\n  5\n526\n330\nC\n100\nAcDbDictionary\n281\n1\n  3\nModel\n350\n530\n  3\nLayout1\n350\n531\n  0\nDICTIONARY\n  5\n527\n330\nC\n100\nAcDbDictionary\n281\n1\n  0\nDICTIONARY\n  5\n528\n330\nC\n100\nAcDbDictionary\n281\n1\n  0\nDICTIONARY\n  5\n529\n330\nC\n100\nAcDbDictionary\n281\n1\n  0\nDICTIONARY\n  5\n52A\n330\nC\n100\nAcDbDictionary\n281\n1\n  0\nACDBPLACEHOLDER\n  5\n52B\n330\n52C\n  0\nACDBDICTIONARYWDFLT\n  5\n52C\n330\nC\n100\nAcDbDictionary\n281\n1\n  3\nNormal\n350\n52B\n100\nAcDbDictionaryWithDefault\n340\n52B\n  0\nDICTIONARY\n  5\n52D\n330\nC\n100\nAcDbDictionary\n281\n1\n  0\nDICTIONARY\n  5\n52E\n330\nC\n100\nAcDbDictionary\n281\n1\n  0\nDICTIONARY\n  5\n52F\n330\nC\n100\nAcDbDictionary\n281\n1\n  0\nLAYOUT\n  5\n530\n330\n526\n100\nAcDbPlotSettings\n  1\n\n  2\nDWFx ePlot (XPS Compatible).pc3\n  4\nANSI_A_(8.50_x_11.00_Inches)\n  6\n\n 40\n5.8\n 41\n17.8\n 42\n5.8\n 43\n17.8\n 44\n215.9\n 45\n279.4\n 46\n0.0\n 47\n0.0\n 48\n0.0\n 49\n0.0\n140\n0.0\n141\n0.0\n142\n1.0\n143\n14.53\n 70\n11952\n 72\n0\n 73\n1\n 74\n0\n  7\n\n 75\n0\n147\n0.069\n148\n114.98\n149\n300.29\n100\nAcDbLayout\n  1\nModel\n 70\n1\n 71\n0\n 10\n0.0\n 20\n0.0\n 11\n12.0\n 21\n9.0\n 12\n0.0\n 22\n0.0\n 32\n0.0\n 14\n0.0\n 24\n0.0\n 34\n0.0\n 15\n0.0\n 25\n0.0\n 35\n0.0\n146\n0.0\n 13\n0.0\n 23\n0.0\n 33\n0.0\n 16\n1.0\n 26\n0.0\n 36\n0.0\n 17\n0.0\n 27\n1.0\n 37\n0.0\n 76\n0\n330\n1F\n  0\nLAYOUT\n  5\n531\n330\n526\n100\nAcDbPlotSettings\n  1\n\n  2\nDWFx ePlot (XPS Compatible).pc3\n  4\nANSI_A_(8.50_x_11.00_Inches)\n  6\n\n 40\n5.8\n 41\n17.8\n 42\n5.8\n 43\n17.8\n 44\n215.9\n 45\n279.4\n 46\n0.0\n 47\n0.0\n 48\n0.0\n 49\n0.0\n140\n0.0\n141\n0.0\n142\n1.0\n143\n1.0\n 70\n688\n 72\n0\n 73\n1\n 74\n5\n  7\nacad.ctb\n 75\n16\n147\n1.0\n148\n0.0\n149\n0.0\n100\nAcDbLayout\n  1\nLayout1\n 70\n1\n 71\n1\n 10\n-0.7\n 20\n-0.23\n 11\n10.3\n 21\n8.27\n 12\n0.0\n 22\n0.0\n 32\n0.0\n 14\n0.63\n 24\n0.8\n 34\n0.0\n 15\n9.0\n 25\n7.2\n 35\n0.0\n146\n0.0\n 13\n0.0\n 23\n0.0\n 33\n0.0\n 16\n1.0\n 26\n0.0\n 36\n0.0\n 17\n0.0\n 27\n1.0\n 37\n0.0\n 76\n0\n330\n58\n  0\nENDSEC"}}},69573:e=>{e.exports=[[0,0,0,255],[255,0,0,255],[255,255,0,255],[0,255,0,255],[0,255,255,255],[0,0,255,255],[255,0,255,255],[255,255,255,255],[128,128,128,255],[192,192,192,255],[255,0,0,255],[255,127,127,255],[165,0,0,255],[165,82,82,255],[127,0,0,255],[127,63,63,255],[76,0,0,255],[76,38,38,255],[38,0,0,255],[38,19,19,255],[255,63,0,255],[255,159,127,255],[165,41,0,255],[165,103,82,255],[127,31,0,255],[127,79,63,255],[76,19,0,255],[76,47,38,255],[38,9,0,255],[38,28,19,255],[255,127,0,255],[255,191,127,255],[165,82,0,255],[165,124,82,255],[127,63,0,255],[127,95,63,255],[76,38,0,255],[76,57,38,255],[38,19,0,255],[38,28,19,255],[255,191,0,255],[255,223,127,255],[165,124,0,255],[165,145,82,255],[127,95,0,255],[127,111,63,255],[76,57,0,255],[76,66,38,255],[38,28,0,255],[38,33,19,255],[255,255,0,255],[255,255,127,255],[165,165,0,255],[165,165,82,255],[127,127,0,255],[127,127,63,255],[76,76,0,255],[76,76,38,255],[38,38,0,255],[38,38,19,255],[191,255,0,255],[223,255,127,255],[124,165,0,255],[145,165,82,255],[95,127,0,255],[111,127,63,255],[57,76,0,255],[66,76,38,255],[28,38,0,255],[33,38,19,255],[127,255,0,255],[191,255,127,255],[82,165,0,255],[124,165,82,255],[63,127,0,255],[95,127,63,255],[38,76,0,255],[57,76,38,255],[19,38,0,255],[28,38,19,255],[63,255,0,255],[159,255,127,255],[41,165,0,255],[103,165,82,255],[31,127,0,255],[79,127,63,255],[19,76,0,255],[47,76,38,255],[9,38,0,255],[23,38,19,255],[0,255,0,255],[125,255,127,255],[0,165,0,255],[82,165,82,255],[0,127,0,255],[63,127,63,255],[0,76,0,255],[38,76,38,255],[0,38,0,255],[19,38,19,255],[0,255,63,255],[127,255,159,255],[0,165,41,255],[82,165,103,255],[0,127,31,255],[63,127,79,255],[0,76,19,255],[38,76,47,255],[0,38,9,255],[19,88,23,255],[0,255,127,255],[127,255,191,255],[0,165,82,255],[82,165,124,255],[0,127,63,255],[63,127,95,255],[0,76,38,255],[38,76,57,255],[0,38,19,255],[19,88,28,255],[0,255,191,255],[127,255,223,255],[0,165,124,255],[82,165,145,255],[0,127,95,255],[63,127,111,255],[0,76,57,255],[38,76,66,255],[0,38,28,255],[19,88,88,255],[0,255,255,255],[127,255,255,255],[0,165,165,255],[82,165,165,255],[0,127,127,255],[63,127,127,255],[0,76,76,255],[38,76,76,255],[0,38,38,255],[19,88,88,255],[0,191,255,255],[127,223,255,255],[0,124,165,255],[82,145,165,255],[0,95,127,255],[63,111,217,255],[0,57,76,255],[38,66,126,255],[0,28,38,255],[19,88,88,255],[0,127,255,255],[127,191,255,255],[0,82,165,255],[82,124,165,255],[0,63,127,255],[63,95,127,255],[0,38,76,255],[38,57,126,255],[0,19,38,255],[19,28,88,255],[0,63,255,255],[127,159,255,255],[0,41,165,255],[82,103,165,255],[0,31,127,255],[63,79,127,255],[0,19,76,255],[38,47,126,255],[0,9,38,255],[19,23,88,255],[0,0,255,255],[127,127,255,255],[0,0,165,255],[82,82,165,255],[0,0,127,255],[63,63,127,255],[0,0,76,255],[38,38,126,255],[0,0,38,255],[19,19,88,255],[63,0,255,255],[159,127,255,255],[41,0,165,255],[103,82,165,255],[31,0,127,255],[79,63,127,255],[19,0,76,255],[47,38,126,255],[9,0,38,255],[23,19,88,255],[127,0,255,255],[191,127,255,255],[165,0,82,255],[124,82,165,255],[63,0,127,255],[95,63,127,255],[38,0,76,255],[57,38,126,255],[19,0,38,255],[28,19,88,255],[191,0,255,255],[223,127,255,255],[124,0,165,255],[142,82,165,255],[95,0,127,255],[111,63,127,255],[57,0,76,255],[66,38,76,255],[28,0,38,255],[88,19,88,255],[255,0,255,255],[255,127,255,255],[165,0,165,255],[165,82,165,255],[127,0,127,255],[127,63,127,255],[76,0,76,255],[76,38,76,255],[38,0,38,255],[88,19,88,255],[255,0,191,255],[255,127,223,255],[165,0,124,255],[165,82,145,255],[127,0,95,255],[127,63,111,255],[76,0,57,255],[76,38,66,255],[38,0,28,255],[88,19,88,255],[255,0,127,255],[255,127,191,255],[165,0,82,255],[165,82,124,255],[127,0,63,255],[127,63,95,255],[76,0,38,255],[76,38,57,255],[38,0,19,255],[88,19,28,255],[255,0,63,255],[255,127,159,255],[165,0,41,255],[165,82,103,255],[127,0,31,255],[127,63,79,255],[76,0,19,255],[76,38,47,255],[38,0,9,255],[88,19,23,255],[0,0,0,255],[101,101,101,255],[102,102,102,255],[153,153,153,255],[204,204,204,255],[255,255,255,255]]},87892:(e,t,n)=>{const{geometries:r,modifiers:i}=n(80715),{geom3:s,geom2:o,path2:a}=r,{flatten:l,toArray:c}=n(10047),{dxfHeaders:h,dxfClasses:u,dxfTables:d,dxfBlocks:p,dxfObjects:f}=n(60234),m=n(69573),g=(e,t)=>{const n=e.map(((e,n)=>{if(o.isA(e)){const n=e.color,r=e.name,i=o.toOutlines(e).map((e=>({closed:!0,points:e,color:n,name:r})));return"polyline"===t.geom2To?x(i,t):v(i,t)}if(s.isA(e))return"polyline"===t.geom3To?E(e,t):_(e,t);if(a.isA(e)){const n=e.color,r=e.name,i={closed:e.isClosed,points:a.toPoints(e),color:n,name:r};return v([i],t)}return""}));let r="  0\nSECTION\n  2\nENTITIES\n";return n.forEach((e=>{e&&(r+=e)})),r+="  0\nENDSEC",r},v=(e,t)=>{t.statusCallback&&t.statusCallback({progress:0});let n="";return e.forEach(((r,i)=>{if(r.points.length<1)return;const s=r.points.length+(r.closed?1:0);n+=`  0\nLWPOLYLINE\n  5\n${M(t)}\n  100\nAcDbEntity\n  3\n${A(r,t)}\n  8\n0\n  67\n0\n  62\n${T(r,t)}\n  100\nAcDbPolyline\n  90\n${s}\n  70\n${r.closed?1:0}\n`;for(let e=0;e<s;e++){let t=e;t>=r.points.length&&(t-=r.points.length);const i=r.points[t];n+=`  10\n${i[0]}\n  20\n${i[1]}\n`}t.statusCallback&&t.statusCallback({progress:100*i/e.length})})),t.statusCallback&&t.statusCallback({progress:100}),[n]},x=(e,t)=>{t.statusCallback&&t.statusCallback({progress:0});let n="";return e.forEach(((r,i)=>{const s=r.points.length+(r.closed?1:0);n+=`  0\nPOLYLINE\n  5\n${M(t)}\n  100\nAcDbEntity\n  3\n${A(r,t)}\n  8\n0\n  62\n${T(r,t)}\n  100\nAcDb2dPolyline\n`;for(let e=0;e<s;e++){let i=e;i>=r.points.length&&(i-=r.points.length);const s=r.points[i];n+=`  0\nVERTEX\n  5\n${M(t)}\n  100\nAcDbEntity\n  8\n0\n  100\nAcDbVertex\n  100\nAcDb2dVertex\n 10\n${s[0]}\n 20\n${s[1]}\n`}n+=`  0\nSEQEND\n  5\n${M(t)}\n  100\nAcDbEntity\n`,t.statusCallback&&t.statusCallback({progress:100*i/e.length})})),t.statusCallback&&t.statusCallback({progress:100}),[n]},_=(e,t)=>{t.statusCallback&&t.statusCallback({progress:0});let n="";const r=s.toPolygons(e),i=T(e,t);return r.forEach(((e,r)=>{const s=e.color?T(e,t):i;b(e).forEach(((e,r)=>{n+=y(e,t,s)}))})),t.statusCallback&&t.statusCallback({progress:100}),[n]},b=e=>{const t=e.vertices.length-2;if(t<1)return[];const n=e.vertices[0],r=[];for(let i=0;i<t;i++)r.push([n,e.vertices[i+1],e.vertices[i+2]]);return r},y=(e,t,n)=>{const r=e[0],i=e[1],s=e[2],o=e[2];return`  0\n3DFACE\n  5\n${M(t)}\n  100\nAcDbEntity\n  8\n0\n  62\n${n}\n  100\nAcDbFace\n  70\n0\n  10\n${r[0]}\n  20\n${r[1]}\n  30\n${r[2]}\n  11\n${i[0]}\n  21\n${i[1]}\n  31\n${i[2]}\n  12\n${s[0]}\n  22\n${s[1]}\n  32\n${s[2]}\n  13\n${o[0]}\n  23\n${o[1]}\n  33\n${o[2]}\n`},E=(e,t)=>{let n="";const r=S(s.toPolygons(e));return r.faces.length>0&&(n+=`  0\nPOLYLINE\n  5\n${M(t)}\n  100\nAcDbEntity\n  3\n${A(e,t)}\n  8\n0\n  62\n${T(e,t)}\n  100\nAcDb3dPolyline\n  70\n64\n  71\n${r.vertices.length}\n  72\n${r.faces.length}\n`,r.vertices.forEach((e=>{n+=`  0\nVERTEX\n  5\n${M(t)}\n  100\nAcDbEntity\n  8\n0\n  100\nAcDbVertex\n  100\nAcDb3dPolylineVertex\n  10\n${e[0]}\n  20\n${e[1]}\n  30\n${e[2]}\n  70\n192\n`})),r.faces.forEach((e=>{n+=`  0\nVERTEX\n  5\n${M(t)}\n  100\nAcDbEntity\n  8\n0\n  100\nAcDbVertex\n  100\nAcDb3dPolylineVertex\n  10\n0\n  20\n0\n  30\n0\n  70\n128\n  71\n${e[0]}\n  72\n${e[1]}\n  73\n${e[2]}\n  74\n${e[3]}\n`}))),[n]},S=e=>{const t=[],n=[];for(let r=0;r<e.length;++r){const i=e[r],s=[];for(let e=0;e<i.vertices.length;++e){const t=i.vertices[e];n.push([t[0],t[1],t[2]]),s.push(n.length)}for(;s.length<4;)s.push(0);t.push(s)}return{faces:t,vertices:n}},M=e=>{e.entityId++;const t="00000"+e.entityId.toString(16).toUpperCase();return"CAD"+t.substr(t.length-5)},A=(e,t)=>{if(e.name)return e.name;const n="00000"+t.entityId.toString(16).toUpperCase();return"CAD"+n.substr(n.length-5)},T=(e,t)=>{let n=256;if(e.color){const r=Math.floor(255*e.color[0]),i=Math.floor(255*e.color[1]),s=Math.floor(255*e.color[2]),o=t.colorIndex;let a=765;for(let e=1;e<o.length;e++){const t=o[e],l=Math.abs(r-t[0])+Math.abs(i-t[1])+Math.abs(s-t[2]);if(l<a){if(n=e,0===l)break;a=l}}}return n};e.exports={serialize:(e,...t)=>{const n={geom2To:"lwpolyline",geom3To:"3dface",pathTo:"lwpolyline",statusCallback:null,colorIndex:m};if((e=Object.assign({},n,e)).entityId=0,0===(t=(t=l(t)).filter((e=>s.isA(e)||o.isA(e)||a.isA(e)))).length)throw new Error("only JSCAD geometries can be serialized to DXF");return t=c(i.generalize({snap:!0,triangulate:!0},t)),[`999\nCreated by JSCAD\n${h(e)}\n${u(e)}\n${d(e)}\n${p(e)}\n${g(t,e)}\n${f(e)}\n  0\nEOF\n`]},mimeType:"application/dxf"}},5507:e=>{e.exports=class{constructor(e){this._buffer=e,this._pos=0}readInt8(){return this._decodeInt(8,!0)}readUInt8(){return this._decodeInt(8,!1)}readInt16(){return this._decodeInt(16,!0)}readUInt16(){return this._decodeInt(16,!1)}readInt32(){return this._decodeInt(32,!0)}readUInt32(){return this._decodeInt(32,!1)}readFloat(){return this._decodeFloat(23,8)}readDouble(){return this._decodeFloat(52,11)}readChar(){return this.readString(1)}readString(e){this._checkSize(8*e);const t=this._buffer.substr(this._pos,e);return this._pos+=e,t}seek(e){this._pos=e,this._checkSize(0)}getPosition(){return this._pos}getSize(){return this._buffer.length}_decodeFloat(e,t){const n=e+t+1,r=n>>3;this._checkSize(n);const i=Math.pow(2,t-1)-1,s=this._readBits(e+t,1,r),o=this._readBits(e,t,r);let a=0,l=2,c=0,h=0;do{const t=this._readByte(++c,r);h=e%8||8;let n=1<<h;for(;n>>=1;)t&n&&(a+=1/l),l*=2}while(e-=h);return this._pos+=r,o===1+(i<<1)?a?NaN:s?-1/0:1/0:(1+-2*s)*(o||a?o?Math.pow(2,o-i)*(1+a):Math.pow(2,1-i)*a:0)}_decodeInt(e,t){const n=this._readBits(0,e,e/8),r=Math.pow(2,e),i=t&&n>=r/2?n-r:n;return this._pos+=e/8,i}_shl(e,t){for(++t;--t;e=1073741824&~(e%=2147483648)?2*(e-1073741824)+2147483647+1:2*e);return e}_readByte(e,t){return 255&this._buffer.charCodeAt(this._pos+t-e-1)}_readBits(e,t,n){const r=(e+t)%8,i=e%8,s=n-(e>>3)-1;let o=n+(-(e+t)>>3),a=s-o,l=this._readByte(s,n)>>i&(1<<(a?8-i:t))-1;for(a&&r&&(l+=(this._readByte(o++,n)&(1<<r)-1)<<(a--<<3)-i);a;)l+=this._shl(this._readByte(o++,n),(a--<<3)-i);return l}_checkSize(e){this._pos,Math.ceil(e/8),this._buffer.length}}},41298:e=>{class t{constructor(e,t){if(t=t||{},this.size=0,this.type="",this.isClosed=!1,this.encoding="utf8",this.buffer=null,this.length=0,!e)return;if(!Array.isArray(e))return;let n,r;e.forEach((e=>{"string"==typeof e?this.length+=e.length:e instanceof ArrayBuffer&&(this.length+=e.byteLength)})),t.type&&(this.type=t.type.toLowerCase()),t.endings,t.encoding&&(this.encoding=t.encoding.toLowerCase()),t.length&&(this.length=t.length),this.buffer=Buffer.allocUnsafe(this.length);for(let t=0;t<e.length;t++)switch(typeof e[t]){case"string":n=this.buffer.write(e[t],this.size,this.encoding),this.size=this.size+n;break;case"object":if(r=e[t],r instanceof ArrayBuffer){const e=new DataView(r);for(let t=0;t<r.byteLength;t++){const r=e.getUint8(t);n=this.buffer.writeUInt8(r,this.size,!1),this.size++}}}}asBuffer(){return this.buffer.slice(0,this.size)}arrayBuffer(){return this.buffer.slice(0,this.size)}slice(e,n,r){return e=e||0,n=n||this.size,r=r||"",new t}stream(){return null}text(){return""}close(){this.isClosed||(this.isClosed=!0)}toString(){return""}}e.exports=t},87128:(e,t,n)=>{const r=n(18976)();e.exports=e=>{const{data:t,mimeType:n}=e;return new r(t,{type:n})}},83206:e=>{e.exports=(e,t="utf-8")=>"string"==typeof e?e:new TextDecoder(t).decode(new Uint8Array(e))},39569:(e,t,n)=>{e.exports={convertToBlob:n(87128),makeBlob:n(18976),BinaryReader:n(5507),Blob:n(41298),ensureString:n(83206)}},18976:(e,t,n)=>{const r=n(41298);e.exports=()=>"undefined"!=typeof window?window.Blob:r},35689:(e,t,n)=>{const r=n(36684),i=n(20731),s=n(67809),o=n(11954),a=n(41050),l=n(86846),c=n(82745),h={};h[r.extension]=r.deserialize,h[i.extension]=i.deserialize,h[s.extension]=s.deserialize,h[o.extension]=o.deserialize,h[a.extension]=a.deserialize,h[l.extension]=l.deserialize,h[c.extension]=c.deserialize,e.exports=h},69289:(e,t,n)=>{const{geometries:r}=n(80715),i={stl:{displayName:"STL (Binary)",description:"STereoLithography, Binary",extension:"stl",mimetype:"application/sla",deserializable:!0,convertGeom3:!1,convertGeom2:!1},stla:{displayName:"STL (ASCII)",description:"STereoLithography, ASCII",extension:"stl",mimetype:"application/sla",deserializable:!1,convertGeom3:!0,convertGeom2:!1},stlb:{displayName:"STL (Binary)",description:"STereoLithography, Binary",extension:"stl",mimetype:"application/sla",deserializable:!1,convertGeom3:!0,convertGeom2:!1},amf:{displayName:"AMF (experimental)",description:"Additive Manufacturing File Format",extension:"amf",mimetype:"application/amf+xml",deserializable:!0,convertGeom3:!0,convertGeom2:!1},dxf:{displayName:"DXF (ASCII)",description:"AutoCAD Drawing Exchange Format",extension:"dxf",mimetype:"application/dxf",deserializable:!0,convertGeom3:!0,convertGeom2:!0},jscad:{displayName:"JSCAD",description:"JSCAD Design Source",extension:"jscad",mimetype:"application/javascript",deserializable:!0,convertGeom3:!0,convertGeom2:!0},json:{displayName:"json",description:"JavaScript Object Notation Format",extension:"json",mimetype:"application/json",deserializable:!0,convertGeom3:!0,convertGeom2:!0},js:{displayName:"js",description:"JavaScript Source",extension:"js",mimetype:"application/javascript",deserializable:!0,convertGeom3:!0,convertGeom2:!0},obj:{displayName:"OBJ",description:"Wavefront OBJ File",extension:"obj",mimetype:"text/plain",deserializable:!0,convertGeom3:!0,convertGeom2:!1},svg:{displayName:"SVG",description:"Scalable Vector Graphics Format",extension:"svg",mimetype:"image/svg+xml",deserializable:!0,convertGeom3:!1,convertGeom2:!0},x3d:{displayName:"X3D",description:"X3D File Format",extension:"x3d",mimetype:"model/x3d+xml",deserializable:!0,convertGeom3:!0,convertGeom2:!0},"3mf":{displayName:"3MF",description:"3D Manufacturing Format",extension:"3mf",mimetype:"model/3mf",deserializable:!1,convertGeom3:!0,convertGeom2:!1}};e.exports={formats:i,conversionFormats:["amf","js","jscad","obj","scad","stl","dxf","svg","ttf","woff"],supportedInputExtensions:()=>{const e=[];for(const t in i)!0===i[t].deserializable&&e.push(i[t].extension);return e},supportedOutputExtensions:()=>{const e=[];for(const t in i)!0!==i[t].convertGeom3&&!0!==i[t].convertGeom2||e.indexOf(i[t].extension)<0&&e.push(i[t].extension);return e},supportedOutputFormats:()=>{const e=[];for(const t in i)!0!==i[t].convertGeom3&&!0!==i[t].convertGeom2||e.push(t);return e},supportedFormatsForObjects:e=>{const t=[];let n=!1,s=!1;for(let t=0;t<e.length;t++)r.geom3.isA(e[t])&&(n=!0),(r.geom2.isA(e[t])||r.path2.isA(e[t]))&&(s=!0);for(const e in i)(n&&!0===i[e].convertGeom3||s&&!0===i[e].convertGeom2)&&(t[t.length]=e);return t}}},38257:(e,t,n)=>{const{makeBlob:r,convertToBlob:i}=n(39569),s=n(14974),o=n(87892),a=n(87194),l=n(2713),c=n(54081),h=n(5936),u=n(66950),d=n(87737),p=n(1455),f=n(35689);e.exports={makeBlob:r,solidsAsBlob:(e,t)=>i(p(e,t)),amfSerializer:s,dxfSerializer:o,jsonSerializer:a,objSerializer:l,stlSerializer:c,svgSerializer:h,x3dSerializer:u,m3fSerializer:d,deserializers:f}},1455:(e,t,n)=>{const{toArray:r}=n(10047),{formats:i}=n(69289),s=n(14974),o=n(87892),a=n(87194),l=n(2713),c=n(54081),h=n(5936),u=n(66950),d=n(87737);e.exports=(e,t)=>{const{format:n,version:p}=Object.assign({},{format:void 0,version:"0.0.0"},t),f={producer:"JSCAD "+p,date:new Date,version:p},m={amf:s,stl:c,stla:{mimeType:c.mimeType,serialize:(e,t)=>c.serialize(Object.assign({},{binary:!1},e),t)},stlb:c,dxf:o,obj:l,svg:h,x3d:u,"3mf":d,json:a,js:{mimeType:i.js.mimetype,serialize:(e,t)=>r(t)},jscad:{mimeType:i.jscad.mimetype,serialize:(e,t)=>r(t)},undefined:()=>{throw new Error("Not supported : only jscad, stl, amf, dxf, svg or json as output format")}},g=Object.assign({},f,t);return{data:m[n].serialize(g,e),mimeType:m[n].mimeType}}},67809:(e,t,n)=>{const{flatten:r,toArray:i}=n(10047),{ensureString:s}=n(39569),o=n(34286).rE,a=e=>e.reduce(((e,t,n)=>e+` json${n},`),""),l=e=>e.reduce(((e,t,n)=>e+c(t,n)),""),c=(e,t)=>`const json${t} = ${JSON.stringify(e)}\n`;e.exports={deserialize:(e,t)=>{const n={filename:"json",output:"script",version:o,addMetaData:!0};e=Object.assign({},n,e),t=s(t);let c=JSON.parse(t);return c=r(i(c)),"script"===e.output?((e,t)=>{const{addMetaData:n,filename:r,version:i}=e;let s=n?`//\n// Produced by JSCAD IO Library : JSON Deserializer (${i})\n// date: ${new Date}\n// source: ${r}\n//\n`:"";return s+=`\nconst { geometries } = require('@jscad/modeling')\n\nconst main = () => {\n  const objects = [${a(t)} ]\n  return objects\n}\n\n${l(t)}\n\nmodule.exports = { main }\n`,s})(e,c):c},extension:"json"}},87194:(e,t,n)=>{const{utils:r}=n(80715),i=(e,t)=>{switch(e){case"transforms":case"plane":return Array.from(t);case"points":case"vertices":return t.map((e=>Array.from(e)));case"sides":return t.map((e=>[Array.from(e[0]),Array.from(e[1])]))}return t};e.exports={serialize:(e,...t)=>{e=Object.assign({},{statusCallback:null},e),t=r.flatten(t),e.statusCallback&&e.statusCallback({progress:0});const n=JSON.stringify(t,i);return e.statusCallback&&e.statusCallback({progress:100}),[n]},mimeType:"application/json"}},28030:(e,t,n)=>{const r=n(32783);e.exports=e=>r[e.toLowerCase()]},43161:(e,t,n)=>{const r=n(95983),i=n(97297),s=n(98618),o=n(39824),a=n(9504);e.exports=(e,...t)=>{if(!Array.isArray(e))throw new Error("color must be an array");if(e.length<3)throw new Error("color must contain R, G and B values");if(3===e.length&&(e=[e[0],e[1],e[2],1]),0===(t=r(t)).length)throw new Error("wrong number of arguments");const n=t.map((t=>i.isA(t)?((e,t)=>{const n=i.clone(t);return n.color=e,n})(e,t):s.isA(t)?((e,t)=>{const n=s.clone(t);return n.color=e,n})(e,t):o.isA(t)?((e,t)=>{const n=o.clone(t);return n.color=e,n})(e,t):a.isA(t)?((e,t)=>{const n=a.clone(t);return n.color=e,n})(e,t):(t.color=e,t)));return 1===n.length?n[0]:n}},32783:e=>{e.exports={black:[0,0,0],silver:[192/255,192/255,192/255],gray:[128/255,128/255,128/255],white:[1,1,1],maroon:[128/255,0,0],red:[1,0,0],purple:[128/255,0,128/255],fuchsia:[1,0,1],green:[0,128/255,0],lime:[0,1,0],olive:[128/255,128/255,0],yellow:[1,1,0],navy:[0,0,128/255],blue:[0,0,1],teal:[0,128/255,128/255],aqua:[0,1,1],aliceblue:[240/255,248/255,1],antiquewhite:[250/255,235/255,215/255],aquamarine:[127/255,1,212/255],azure:[240/255,1,1],beige:[245/255,245/255,220/255],bisque:[1,228/255,196/255],blanchedalmond:[1,235/255,205/255],blueviolet:[138/255,43/255,226/255],brown:[165/255,42/255,42/255],burlywood:[222/255,184/255,135/255],cadetblue:[95/255,158/255,160/255],chartreuse:[127/255,1,0],chocolate:[210/255,105/255,30/255],coral:[1,127/255,80/255],cornflowerblue:[100/255,149/255,237/255],cornsilk:[1,248/255,220/255],crimson:[220/255,20/255,60/255],cyan:[0,1,1],darkblue:[0,0,139/255],darkcyan:[0,139/255,139/255],darkgoldenrod:[184/255,134/255,11/255],darkgray:[169/255,169/255,169/255],darkgreen:[0,100/255,0],darkgrey:[169/255,169/255,169/255],darkkhaki:[189/255,183/255,107/255],darkmagenta:[139/255,0,139/255],darkolivegreen:[85/255,107/255,47/255],darkorange:[1,140/255,0],darkorchid:[.6,50/255,.8],darkred:[139/255,0,0],darksalmon:[233/255,150/255,122/255],darkseagreen:[143/255,188/255,143/255],darkslateblue:[72/255,61/255,139/255],darkslategray:[47/255,79/255,79/255],darkslategrey:[47/255,79/255,79/255],darkturquoise:[0,206/255,209/255],darkviolet:[148/255,0,211/255],deeppink:[1,20/255,147/255],deepskyblue:[0,191/255,1],dimgray:[105/255,105/255,105/255],dimgrey:[105/255,105/255,105/255],dodgerblue:[30/255,144/255,1],firebrick:[178/255,34/255,34/255],floralwhite:[1,250/255,240/255],forestgreen:[34/255,139/255,34/255],gainsboro:[220/255,220/255,220/255],ghostwhite:[248/255,248/255,1],gold:[1,215/255,0],goldenrod:[218/255,165/255,32/255],greenyellow:[173/255,1,47/255],grey:[128/255,128/255,128/255],honeydew:[240/255,1,240/255],hotpink:[1,105/255,180/255],indianred:[205/255,92/255,92/255],indigo:[75/255,0,130/255],ivory:[1,1,240/255],khaki:[240/255,230/255,140/255],lavender:[230/255,230/255,250/255],lavenderblush:[1,240/255,245/255],lawngreen:[124/255,252/255,0],lemonchiffon:[1,250/255,205/255],lightblue:[173/255,216/255,230/255],lightcoral:[240/255,128/255,128/255],lightcyan:[224/255,1,1],lightgoldenrodyellow:[250/255,250/255,210/255],lightgray:[211/255,211/255,211/255],lightgreen:[144/255,238/255,144/255],lightgrey:[211/255,211/255,211/255],lightpink:[1,182/255,193/255],lightsalmon:[1,160/255,122/255],lightseagreen:[32/255,178/255,170/255],lightskyblue:[135/255,206/255,250/255],lightslategray:[119/255,136/255,.6],lightslategrey:[119/255,136/255,.6],lightsteelblue:[176/255,196/255,222/255],lightyellow:[1,1,224/255],limegreen:[50/255,205/255,50/255],linen:[250/255,240/255,230/255],magenta:[1,0,1],mediumaquamarine:[.4,205/255,170/255],mediumblue:[0,0,205/255],mediumorchid:[186/255,85/255,211/255],mediumpurple:[147/255,112/255,219/255],mediumseagreen:[60/255,179/255,113/255],mediumslateblue:[123/255,104/255,238/255],mediumspringgreen:[0,250/255,154/255],mediumturquoise:[72/255,209/255,.8],mediumvioletred:[199/255,21/255,133/255],midnightblue:[25/255,25/255,112/255],mintcream:[245/255,1,250/255],mistyrose:[1,228/255,225/255],moccasin:[1,228/255,181/255],navajowhite:[1,222/255,173/255],oldlace:[253/255,245/255,230/255],olivedrab:[107/255,142/255,35/255],orange:[1,165/255,0],orangered:[1,69/255,0],orchid:[218/255,112/255,214/255],palegoldenrod:[238/255,232/255,170/255],palegreen:[152/255,251/255,152/255],paleturquoise:[175/255,238/255,238/255],palevioletred:[219/255,112/255,147/255],papayawhip:[1,239/255,213/255],peachpuff:[1,218/255,185/255],peru:[205/255,133/255,63/255],pink:[1,192/255,203/255],plum:[221/255,160/255,221/255],powderblue:[176/255,224/255,230/255],rosybrown:[188/255,143/255,143/255],royalblue:[65/255,105/255,225/255],saddlebrown:[139/255,69/255,19/255],salmon:[250/255,128/255,114/255],sandybrown:[244/255,164/255,96/255],seagreen:[46/255,139/255,87/255],seashell:[1,245/255,238/255],sienna:[160/255,82/255,45/255],skyblue:[135/255,206/255,235/255],slateblue:[106/255,90/255,205/255],slategray:[112/255,128/255,144/255],slategrey:[112/255,128/255,144/255],snow:[1,250/255,250/255],springgreen:[0,1,127/255],steelblue:[70/255,130/255,180/255],tan:[210/255,180/255,140/255],thistle:[216/255,191/255,216/255],tomato:[1,99/255,71/255],turquoise:[64/255,224/255,208/255],violet:[238/255,130/255,238/255],wheat:[245/255,222/255,179/255],whitesmoke:[245/255,245/255,245/255],yellowgreen:[154/255,205/255,50/255]}},39757:e=>{e.exports=e=>{if((e=e.replace("#","")).length<6)throw new Error("the given notation must contain 3 or more hex values");const t=parseInt(e.substring(0,2),16)/255,n=parseInt(e.substring(2,4),16)/255,r=parseInt(e.substring(4,6),16)/255;return e.length>=8?[t,n,r,parseInt(e.substring(6,8),16)/255]:[t,n,r]}},49915:(e,t,n)=>{const r=n(95983),i=n(61177);e.exports=(...e)=>{if((e=r(e)).length<3)throw new Error("values must contain H, S and L values");const t=e[0],n=e[1],s=e[2];let o=s,a=s,l=s;if(0!==n){const e=s<.5?s*(1+n):s+n-s*n,r=2*s-e;o=i(r,e,t+1/3),a=i(r,e,t),l=i(r,e,t-1/3)}return e.length>3?[o,a,l,e[3]]:[o,a,l]}},53433:(e,t,n)=>{const r=n(95983);e.exports=(...e)=>{if((e=r(e)).length<3)throw new Error("values must contain H, S and V values");const t=e[0],n=e[1],i=e[2];let s=0,o=0,a=0;const l=Math.floor(6*t),c=6*t-l,h=i*(1-n),u=i*(1-c*n),d=i*(1-(1-c)*n);switch(l%6){case 0:s=i,o=d,a=h;break;case 1:s=u,o=i,a=h;break;case 2:s=h,o=i,a=d;break;case 3:s=h,o=u,a=i;break;case 4:s=d,o=h,a=i;break;case 5:s=i,o=h,a=u}return e.length>3?[s,o,a,e[3]]:[s,o,a]}},61177:e=>{e.exports=(e,t,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e)},99452:(e,t,n)=>{e.exports={colorize:n(43161),colorNameToRgb:n(28030),cssColors:n(32783),hexToRgb:n(39757),hslToRgb:n(49915),hsvToRgb:n(53433),hueToColorComponent:n(61177),rgbToHex:n(47193),rgbToHsl:n(91099),rgbToHsv:n(74501)}},47193:(e,t,n)=>{const r=n(95983);e.exports=(...e)=>{if((e=r(e)).length<3)throw new Error("values must contain R, G and B values");const t=255*e[0],n=255*e[1],i=255*e[2];let s=`#${Number(16777216+65536*t+256*n+i).toString(16).substring(1,7)}`;return e.length>3&&(s+=Number(255*e[3]).toString(16)),s}},91099:(e,t,n)=>{const r=n(95983);e.exports=(...e)=>{if((e=r(e)).length<3)throw new Error("values must contain R, G and B values");const t=e[0],n=e[1],i=e[2],s=Math.max(t,n,i),o=Math.min(t,n,i);let a,l;const c=(s+o)/2;if(s===o)a=l=0;else{const e=s-o;switch(l=c>.5?e/(2-s-o):e/(s+o),s){case t:a=(n-i)/e+(n<i?6:0);break;case n:a=(i-t)/e+2;break;case i:a=(t-n)/e+4}a/=6}return e.length>3?[a,l,c,e[3]]:[a,l,c]}},74501:(e,t,n)=>{const r=n(95983);e.exports=(...e)=>{if((e=r(e)).length<3)throw new Error("values must contain R, G and B values");const t=e[0],n=e[1],i=e[2],s=Math.max(t,n,i),o=Math.min(t,n,i);let a;const l=s,c=s-o,h=0===s?0:c/s;if(s===o)a=0;else{switch(s){case t:a=(n-i)/c+(n<i?6:0);break;case n:a=(i-t)/c+2;break;case i:a=(t-n)/c+4}a/=6}return e.length>3?[a,h,l,e[3]]:[a,h,l]}},52607:(e,t,n)=>{const r=n(3807);e.exports=(e,t)=>{const{distance:n,segments:i}=Object.assign({},{distance:0,segments:100},e),s=r(i,t);let o=0,a=i;for(;o<=a;){const e=Math.floor(o+(a-o)/2),t=s[e]-n;if(t<0)o=e+1;else{if(!(t>0)){a=e;break}a=e-1}}const l=a;if(s[l]===n)return l/i;const c=s[l];return(l+(n-c)/(s[l+1]-c))/i}},49928:e=>{const t=function(e){const t=[];for(let r=0;r<=e;r++)t.push(n(e)/(n(r)*n(e-r)));return t},n=function(e){let t=1;for(let n=2;n<=e;n++)t*=n;return t};e.exports=e=>{if(!Array.isArray(e))throw new Error("Bezier points must be a valid array/");if(e.length<2)throw new Error("Bezier points must contain at least 2 values.");const n=function(e){let t=null;return e.forEach((e=>{let n="";if(Number.isFinite(e))n="float_single";else{if(!Array.isArray(e))throw new Error("Bezier points must all be numbers or arrays of number.");e.forEach((e=>{if(!Number.isFinite(e))throw new Error("Bezier point values must all be numbers.")})),n="float_"+e.length}if(null==t)t=n;else if(t!==n)throw new Error("Bezier points must be either all numbers or all arrays of numbers of the same size.")})),t}(e);return{points:e,pointType:n,dimensions:"float_single"===n?0:e[0].length,permutations:t(e.length-1),tangentPermutations:t(e.length-2)}}},43370:(e,t,n)=>{e.exports={create:n(49928),valueAt:n(82078),tangentAt:n(19838),lengths:n(3807),length:n(25024),arcLengthToT:n(52607)}},25024:(e,t,n)=>{const r=n(3807);e.exports=(e,t)=>r(e,t)[e]},3807:(e,t,n)=>{const r=n(82078),i=(e,t)=>{if(Number.isFinite(e)&&Number.isFinite(t))return Math.abs(e-t);if(Array.isArray(e)&&Array.isArray(t)){if(e.length!==t.length)throw new Error("The operands must have the same number of dimensions.");let n=0;for(let r=0;r<e.length;r++)n+=(t[r]-e[r])*(t[r]-e[r]);return Math.sqrt(n)}throw new Error("The operands must be of the same type, either number or array.")};e.exports=(e,t)=>{let n=0;const s=[0];let o=r(0,t);for(let a=1;a<=e;a++){const l=r(a/e,t);n+=i(l,o),s.push(n),o=l}return s}},19838:e=>{const t=function(e,t,n){const r=t.length-1;let i=0;for(let s=0;s<r;s++){const o=r*(t[s+1]-t[s]);i+=e.tangentPermutations[s]*Math.pow(1-n,r-1-s)*Math.pow(n,s)*o}return i};e.exports=(e,n)=>{if(e<0||e>1)throw new Error("Bezier tangentAt() input must be between 0 and 1");if("float_single"===n.pointType)return t(n,n.points,e);{const r=[];for(let i=0;i<n.dimensions;i++){const s=[];for(let e=0;e<n.points.length;e++)s.push(n.points[e][i]);r.push(t(n,s,e))}return r}}},82078:e=>{const t=function(e,t,n){const r=t.length-1;let i=0;for(let s=0;s<=r;s++)i+=e.permutations[s]*Math.pow(1-n,r-s)*Math.pow(n,s)*t[s];return i};e.exports=(e,n)=>{if(e<0||e>1)throw new Error("Bezier valueAt() input must be between 0 and 1");if("float_single"===n.pointType)return t(n,n.points,e);{const r=[];for(let i=0;i<n.dimensions;i++){const s=[];for(let e=0;e<n.points.length;e++)s.push(n.points[e][i]);r.push(t(n,s,e))}return r}}},74960:(e,t,n)=>{e.exports={bezier:n(43370)}},44224:(e,t,n)=>{const r=n(15118),i=n(19936);e.exports=e=>(r.isIdentity(e.transforms)||(e.sides=e.sides.map((t=>[i.transform(i.create(),t[0],e.transforms),i.transform(i.create(),t[1],e.transforms)])),e.transforms=r.create()),e)},3420:e=>{e.exports=e=>Object.assign({},e)},20041:(e,t,n)=>{const r=n(15118);e.exports=e=>(void 0===e&&(e=[]),{sides:e,transforms:r.create()})},41521:(e,t,n)=>{const r=n(15118),i=n(19936),s=n(20041);e.exports=e=>{if(0!==e[0])throw new Error("invalid compact binary data");const t=s();t.transforms=r.clone(e.slice(1,17));for(let n=21;n<e.length;n+=4){const r=i.fromValues(e[n+0],e[n+1]),s=i.fromValues(e[n+2],e[n+3]);t.sides.push([r,s])}return e[17]>=0&&(t.color=[e[17],e[18],e[19],e[20]]),t}},41722:(e,t,n)=>{const r=n(19936),i=n(20041);e.exports=e=>{if(!Array.isArray(e))throw new Error("the given points must be an array");let t=e.length;if(t<3)throw new Error("the given points must define a closed geometry with three or more points");r.equals(e[0],e[t-1])&&--t;const n=[];let s=e[t-1];for(let i=0;i<t;i++){const t=e[i];n.push([r.clone(s),r.clone(t)]),s=t}return i(n)}},97297:(e,t,n)=>{e.exports={clone:n(3420),create:n(20041),fromPoints:n(41722),fromCompactBinary:n(41521),isA:n(13646),reverse:n(19099),toOutlines:n(15775),toPoints:n(14947),toSides:n(75318),toString:n(35549),toCompactBinary:n(85006),transform:n(37325),validate:n(11115)}},13646:e=>{e.exports=e=>!!(e&&"object"==typeof e&&"sides"in e&&"transforms"in e&&Array.isArray(e.sides)&&"length"in e.transforms)},19099:(e,t,n)=>{const r=n(20041),i=n(75318);e.exports=e=>{const t=i(e).map((e=>[e[1],e[0]]));return t.reverse(),r(t)}},85006:e=>{e.exports=e=>{const t=e.sides,n=e.transforms;let r=[-1,-1,-1,-1];e.color&&(r=e.color);const i=new Float32Array(21+4*t.length);i[0]=0,i[1]=n[0],i[2]=n[1],i[3]=n[2],i[4]=n[3],i[5]=n[4],i[6]=n[5],i[7]=n[6],i[8]=n[7],i[9]=n[8],i[10]=n[9],i[11]=n[10],i[12]=n[11],i[13]=n[12],i[14]=n[13],i[15]=n[14],i[16]=n[15],i[17]=r[0],i[18]=r[1],i[19]=r[2],i[20]=r[3];for(let e=0;e<t.length;e++){const n=4*e+21,r=t[e][0],s=t[e][1];i[n+0]=r[0],i[n+1]=r[1],i[n+2]=s[0],i[n+3]=s[1]}return i}},15775:(e,t,n)=>{const r=n(19936),i=n(75318),s=(e,t)=>{if(1===t.length)return t.pop();const n=r.create(),i=r.angleDegrees(r.subtract(n,e[1],e[0]));let s,o;t.forEach(((e,t)=>{let a=r.angleDegrees(r.subtract(n,e[1],e[0]))-i;a<-180&&(a+=360),a>=180&&(a-=360),(void 0===o||a>s)&&(o=t,s=a)}));const a=t[o];return t.splice(o,1),a};e.exports=e=>{const t=(e=>{const t=new Map;return(e=>{const t=new Map,n=e=>{const n=e.toString();return t.has(n)?t.get(n):(t.set(n,e),e)};return e.map((e=>e.map(n)))})(e).forEach((e=>{t.has(e[0])?t.get(e[0]).push(e):t.set(e[0],[e])})),t})(i(e)),n=[];for(;;){let e;for(const[n,r]of t){if(e=r.shift(),e)break;t.delete(n)}if(void 0===e)break;const r=[],i=e[0];for(;;){r.push(e[0]);const n=e[1];if(n===i)break;const o=t.get(n);if(!o)throw new Error(`geometry is not closed at vertex ${n}`);const a=s(e,o);0===o.length&&t.delete(n),e=a}r.length>0&&r.push(r.shift()),n.push(r)}return t.clear(),n}},14947:(e,t,n)=>{const r=n(75318);e.exports=e=>{const t=r(e).map((e=>e[0]));return t.length>0&&t.push(t.shift()),t}},75318:(e,t,n)=>{const r=n(44224);e.exports=e=>r(e).sides},35549:(e,t,n)=>{const r=n(19936),i=n(75318);e.exports=e=>{const t=i(e);let n="geom2 ("+t.length+" sides):\n[\n";return t.forEach((e=>{n+="  ["+r.toString(e[0])+", "+r.toString(e[1])+"]\n"})),n+="]\n",n}},37325:(e,t,n)=>{const r=n(15118),i=n(19099);e.exports=(e,t)=>{const n=r.multiply(r.create(),e,t.transforms),s=Object.assign({},t,{transforms:n});return e[0]*e[5]-e[4]*e[1]<0?i(s):s}},11115:(e,t,n)=>{const r=n(19936),i=n(13646),s=n(15775);e.exports=e=>{if(!i(e))throw new Error("invalid geom2 structure");if(s(e),e.sides.forEach((e=>{if(r.equals(e[0],e[1]))throw new Error(`geom2 self-edge ${e[0]}`)})),!e.transforms.every(Number.isFinite))throw new Error(`geom2 invalid transforms ${e.transforms}`)}},2855:(e,t,n)=>{const r=n(15118),i=n(9504);e.exports=e=>(r.isIdentity(e.transforms)||(e.polygons=e.polygons.map((t=>i.transform(e.transforms,t))),e.transforms=r.create()),e)},34199:e=>{e.exports=e=>Object.assign({},e)},68312:(e,t,n)=>{const r=n(15118);e.exports=e=>(void 0===e&&(e=[]),{polygons:e,transforms:r.create()})},39974:(e,t,n)=>{const r=n(2215),i=n(15118),s=n(9504),o=n(68312);e.exports=e=>{if(1!==e[0])throw new Error("invalid compact binary data");const t=o();t.transforms=i.clone(e.slice(1,17));const n=e[21];let a=22,l=e.length-3*n;for(;l<e.length;){const n=e[a];a++;const i=[];for(let t=0;t<n;t++)i.push(r.fromValues(e[l],e[l+1],e[l+2])),l+=3;t.polygons.push(s.create(i))}return e[17]>=0&&(t.color=[e[17],e[18],e[19],e[20]]),t}},40843:(e,t,n)=>{const r=n(9504),i=n(68312);e.exports=e=>{if(!Array.isArray(e))throw new Error("the given points must be an array");const t=e.map(((e,t)=>r.create(e)));return i(t)}},56276:(e,t,n)=>{const r=n(98814),i=n(68312),s=n(9504);e.exports=e=>{if(!Array.isArray(e))throw new Error("the given points must be an array");const t=r(e,{skipTriangulation:!0}).map((t=>{const n=t.map((t=>e[t]));return s.create(n)}));return i(t)}},98618:(e,t,n)=>{e.exports={clone:n(34199),create:n(68312),fromPointsConvex:n(56276),fromPoints:n(40843),fromCompactBinary:n(39974),invert:n(4e4),isA:n(42309),toPoints:n(92226),toPolygons:n(51058),toString:n(36204),toCompactBinary:n(95497),transform:n(4014),validate:n(14286)}},4e4:(e,t,n)=>{const r=n(9504),i=n(68312),s=n(51058);e.exports=e=>{const t=s(e).map((e=>r.invert(e)));return i(t)}},42309:e=>{e.exports=e=>!!(e&&"object"==typeof e&&"polygons"in e&&"transforms"in e&&Array.isArray(e.polygons)&&"length"in e.transforms)},95497:(e,t,n)=>{const r=n(9504);e.exports=e=>{const t=e.polygons,n=e.transforms,i=t.length,s=t.reduce(((e,t)=>e+t.vertices.length),0);let o=[-1,-1,-1,-1];e.color&&(o=e.color);const a=new Float32Array(22+i+3*s);a[0]=1,a[1]=n[0],a[2]=n[1],a[3]=n[2],a[4]=n[3],a[5]=n[4],a[6]=n[5],a[7]=n[6],a[8]=n[7],a[9]=n[8],a[10]=n[9],a[11]=n[10],a[12]=n[11],a[13]=n[12],a[14]=n[13],a[15]=n[14],a[16]=n[15],a[17]=o[0],a[18]=o[1],a[19]=o[2],a[20]=o[3],a[21]=s;let l=22,c=l+i;return t.forEach((e=>{const t=r.toPoints(e);a[l]=t.length,l++;for(let e=0;e<t.length;e++){const n=t[e];a[c+0]=n[0],a[c+1]=n[1],a[c+2]=n[2],c+=3}})),a}},92226:(e,t,n)=>{const r=n(9504),i=n(51058);e.exports=e=>i(e).map((e=>r.toPoints(e)))},51058:(e,t,n)=>{const r=n(2855);e.exports=e=>r(e).polygons},36204:(e,t,n)=>{const r=n(9504),i=n(51058);e.exports=e=>{const t=i(e);let n="geom3 ("+t.length+" polygons):\n";return t.forEach((e=>{n+="  "+r.toString(e)+"\n"})),n}},4014:(e,t,n)=>{const r=n(15118);e.exports=(e,t)=>{const n=r.multiply(r.create(),e,t.transforms);return Object.assign({},t,{transforms:n})}},14286:(e,t,n)=>{const r=n(9504),i=n(42309);e.exports=e=>{if(!i(e))throw new Error("invalid geom3 structure");if(e.polygons.forEach(r.validate),(e=>{const t=new Map;e.polygons.forEach((({vertices:e})=>{e.forEach(((n,r)=>{const i=`${n}/${e[(r+1)%e.length]}`,s=t.has(i)?t.get(i):0;t.set(i,s+1)}))}));const n=[];if(t.forEach(((e,r)=>{const i=r.split("/").reverse().join("/");e!==t.get(i)&&n.push(r.replace("/"," -> "))})),n.length>0)throw new Error(`non-manifold edges ${n.length}\n${n.join("\n")}`)})(e),!e.transforms.every(Number.isFinite))throw new Error(`geom3 invalid transforms ${e.transforms}`)}},28900:(e,t,n)=>{e.exports={geom2:n(97297),geom3:n(98618),path2:n(39824),poly2:n(35719),poly3:n(9504)}},2188:(e,t,n)=>{const{TAU:r}=n(31246),i=n(19936),s=n(56145),o=n(96632);e.exports=(e,t)=>{let{endpoint:n,radius:a,xaxisrotation:l,clockwise:c,large:h,segments:u}=Object.assign({},{radius:[0,0],xaxisrotation:0,clockwise:!1,large:!1,segments:16},e);if(!Array.isArray(n))throw new Error("endpoint must be an array of X and Y values");if(n.length<2)throw new Error("endpoint must contain X and Y values");if(n=i.clone(n),!Array.isArray(a))throw new Error("radius must be an array of X and Y values");if(a.length<2)throw new Error("radius must contain X and Y values");if(u<4)throw new Error("segments must be four or more");const d=1e5;if(t.isClosed)throw new Error("the given path cannot be closed");const p=o(t);if(p.length<1)throw new Error("the given path must contain one or more points (as the starting point for the arc)");let f=a[0],m=a[1];const g=p[p.length-1];f=Math.round(f*d)/d,m=Math.round(m*d)/d,n=i.fromValues(Math.round(n[0]*d)/d,Math.round(n[1]*d)/d);const v=!c;let x=[];if(0===f||0===m)x.push(n);else{f=Math.abs(f),m=Math.abs(m);const t=l,s=Math.cos(t),o=Math.sin(t),a=i.subtract(i.create(),g,n);i.scale(a,a,.5);const c=Math.round((s*a[0]+o*a[1])*d)/d,p=Math.round((-o*a[0]+s*a[1])*d)/d,_=i.fromValues(c,p),b=_[0]*_[0]/(f*f)+_[1]*_[1]/(m*m);if(b>1){const e=Math.sqrt(b);f*=e,m*=e,f=Math.round(f*d)/d,m=Math.round(m*d)/d}let y=Math.sqrt((f*f*m*m-f*f*_[1]*_[1]-m*m*_[0]*_[0])/(f*f*_[1]*_[1]+m*m*_[0]*_[0]));v===h&&(y=-y);const E=i.fromValues(f*_[1]/m,-m*_[0]/f);i.scale(E,E,y);let S=i.fromValues(s*E[0]-o*E[1],o*E[0]+s*E[1]);S=i.add(S,S,i.scale(i.create(),i.add(i.create(),g,n),.5));const M=i.fromValues((_[0]-E[0])/f,(_[1]-E[1])/m),A=i.fromValues((-_[0]-E[0])/f,(-_[1]-E[1])/m),T=i.angleRadians(M);let w=i.angleRadians(A)-T;w%=r,!v&&w>0?w-=r:v&&w<0&&(w+=r);let C=Math.ceil(Math.abs(w)/r*u)+1;C<1&&(C=1);for(let e=1;e<C;e++){const t=T+e/C*w,n=Math.cos(t),r=Math.sin(t),a=i.fromValues(s*f*n-o*m*r,o*f*n+s*m*r);i.add(a,a,S),x.push(a)}C&&x.push(e.endpoint)}return x=p.concat(x),s({},x)}},80733:(e,t,n)=>{const{TAU:r}=n(31246),i=n(19936),s=n(19936),o=n(75405),a=n(96632);e.exports=(e,t)=>{let{controlPoints:n,segments:l}=Object.assign({},{segments:16},e);if(!Array.isArray(n))throw new Error("controlPoints must be an array of one or more points");if(n.length<1)throw new Error("controlPoints must be an array of one or more points");if(l<4)throw new Error("segments must be four or more");if(t.isClosed)throw new Error("the given geometry cannot be closed");const c=a(t);if(c.length<1)throw new Error("the given path must contain one or more points (as the starting point for the bezier curve)");if(n=n.slice(),null===n[0]){if(n.length<2)throw new Error("a null control point must be passed with one more control points");let e=c[c.length-2];if("lastBezierControlPoint"in t&&(e=t.lastBezierControlPoint),!Array.isArray(e))throw new Error("the given path must contain TWO or more points if given a null control point");const r=i.scale(i.create(),c[c.length-1],2);i.subtract(r,r,e),n[0]=r}n.unshift(c[c.length-1]);const h=n.length-1,u=[];let d=1;for(let e=0;e<=h;++e)e>0&&(d*=e),u.push(d);const p=[];for(let e=0;e<=h;++e){const t=u[h]/(u[e]*u[h-e]);p.push(t)}const f=i.create(),m=i.create(),g=s.create(),v=e=>{let t=1,r=Math.pow(1-e,h);const s=1!==e?1/(1-e):1,o=i.create();for(let a=0;a<=h;++a){a===h&&(r=1);const l=p[a]*t*r,c=i.scale(f,n[a],l);i.add(o,o,c),t*=e,r*=s}return o},x=[],_=[],b=h+1;for(let e=0;e<b;++e){const t=e/(b-1),n=v(t);x.push(n),_.push(t)}let y=1;const E=r/l,S=Math.sin(E);for(;y<x.length-1;){const e=i.subtract(f,x[y],x[y-1]);i.normalize(e,e);const t=i.subtract(m,x[y+1],x[y]);i.normalize(t,t);const n=i.cross(g,e,t);if(Math.abs(n[2])>S){const e=_[y-1],t=_[y+1],n=e+1*(t-e)/3,r=e+2*(t-e)/3,i=v(n),s=v(r);x.splice(y,1,i,s),_.splice(y,1,n,r),y--,y<1&&(y=1)}else++y}x.shift();const M=o(x,t);return M.lastBezierControlPoint=n[n.length-2],M}},75405:(e,t,n)=>{const r=n(73686),i=n(55878);e.exports=(e,t)=>r(t,i(e))},24757:(e,t,n)=>{const r=n(15118),i=n(19936);e.exports=e=>(r.isIdentity(e.transforms)||(e.points=e.points.map((t=>i.transform(i.create(),t,e.transforms))),e.transforms=r.create()),e)},45661:e=>{e.exports=e=>Object.assign({},e)},72616:(e,t,n)=>{const{EPS:r}=n(31246),i=n(19936),s=n(45661);e.exports=e=>{if(e.isClosed)return e;const t=s(e);if(t.isClosed=!0,t.points.length>1){const e=t.points,n=e[0];let s=e[e.length-1];for(;i.distance(n,s)<r*r&&(e.pop(),1!==e.length);)s=e[e.length-1]}return t}},73686:(e,t,n)=>{const r=n(56145),i=n(96632),{equals:s}=n(19936);e.exports=(...e)=>{let t=!1,n=[];return e.forEach(((e,r)=>{const o=i(e).slice();if(n.length>0&&o.length>0&&s(o[0],n[n.length-1])&&o.shift(),o.length>0&&t)throw new Error(`Cannot concatenate to a closed path; check the ${r}th path`);t=e.isClosed,n=n.concat(o)})),r({closed:t},n)}},55878:(e,t,n)=>{const r=n(15118);e.exports=e=>(void 0===e&&(e=[]),{points:e,isClosed:!1,transforms:r.create()})},31075:(e,t,n)=>{const r=n(19936),i=n(96632);e.exports=(e,t)=>{if(e.isClosed!==t.isClosed)return!1;if(e.points.length!==t.points.length)return!1;const n=i(e),s=i(t),o=n.length;let a=0;do{let t=!1;for(let e=0;e<o;e++)if(!r.equals(n[e],s[(e+a)%o])){t=!0;break}if(!1===t)return!0;if(!e.isClosed)return!1}while(++a<o);return!1}},66028:(e,t,n)=>{const r=n(15118),i=n(19936),s=n(55878);e.exports=e=>{if(2!==e[0])throw new Error("invalid compact binary data");const t=s();t.transforms=r.clone(e.slice(1,17)),t.isClosed=!!e[17];for(let n=22;n<e.length;n+=2){const r=i.fromValues(e[n],e[n+1]);t.points.push(r)}return e[18]>=0&&(t.color=[e[18],e[19],e[20],e[21]]),t}},56145:(e,t,n)=>{const{EPS:r}=n(31246),i=n(19936),s=n(72616),o=n(55878);e.exports=(e,t)=>{let{closed:n}=Object.assign({},{closed:!1},e),a=o();if(a.points=t.map((e=>i.clone(e))),a.points.length>1){const e=a.points[0],t=a.points[a.points.length-1];i.distance(e,t)<r*r&&(n=!0)}return!0===n&&(a=s(a)),a}},39824:(e,t,n)=>{e.exports={appendArc:n(2188),appendBezier:n(80733),appendPoints:n(75405),clone:n(45661),close:n(72616),concat:n(73686),create:n(55878),equals:n(31075),fromPoints:n(56145),fromCompactBinary:n(66028),isA:n(42779),reverse:n(38366),toPoints:n(96632),toString:n(32766),toCompactBinary:n(94175),transform:n(99904),validate:n(19432)}},42779:e=>{e.exports=e=>!!(e&&"object"==typeof e&&"points"in e&&"transforms"in e&&"isClosed"in e&&Array.isArray(e.points)&&"length"in e.transforms)},38366:(e,t,n)=>{const r=n(45661);e.exports=e=>{const t=r(e);return t.points=e.points.slice().reverse(),t}},94175:e=>{e.exports=e=>{const t=e.points,n=e.transforms;let r=[-1,-1,-1,-1];e.color&&(r=e.color);const i=new Float32Array(22+2*t.length);i[0]=2,i[1]=n[0],i[2]=n[1],i[3]=n[2],i[4]=n[3],i[5]=n[4],i[6]=n[5],i[7]=n[6],i[8]=n[7],i[9]=n[8],i[10]=n[9],i[11]=n[10],i[12]=n[11],i[13]=n[12],i[14]=n[13],i[15]=n[14],i[16]=n[15],i[17]=e.isClosed?1:0,i[18]=r[0],i[19]=r[1],i[20]=r[2],i[21]=r[3];for(let e=0;e<t.length;e++){const n=2*e+22,r=t[e];i[n]=r[0],i[n+1]=r[1]}return i}},96632:(e,t,n)=>{const r=n(24757);e.exports=e=>r(e).points},32766:(e,t,n)=>{const r=n(19936),i=n(96632);e.exports=e=>{const t=i(e);let n="path ("+t.length+" points, "+e.isClosed+"):\n[\n";return t.forEach((e=>{n+="  "+r.toString(e)+",\n"})),n+="]\n",n}},99904:(e,t,n)=>{const r=n(15118);e.exports=(e,t)=>{const n=r.multiply(r.create(),e,t.transforms);return Object.assign({},t,{transforms:n})}},19432:(e,t,n)=>{const r=n(19936),i=n(42779);e.exports=e=>{if(!i(e))throw new Error("invalid path2 structure");if(e.points.length>1)for(let t=0;t<e.points.length;t++)if(r.equals(e.points[t],e.points[(t+1)%e.points.length]))throw new Error(`path2 duplicate points ${e.points[t]}`);if(e.points.forEach((e=>{if(!e.every(Number.isFinite))throw new Error(`path2 invalid point ${e}`)})),!e.transforms.every(Number.isFinite))throw new Error(`path2 invalid transforms ${e.transforms}`)}},79138:(e,t,n)=>{const r=n(97638),i=n(13140);e.exports=(e,t)=>{if(0===e.length)return 0;const n=t.vertices;return n.length<3?0:(r(t)<0&&(t=i(t)),e.reduce(((e,t)=>e+((e,t)=>{const n=t.length,r=e[0],i=e[1];let s=t[n-1],o=t[0],a=s[1]>i,l=0,c=0;for(let e=n+1;--e;){const e=o[1]>i;if(a!==e){const e=s[0]>r,t=o[0]>r;(e&&t||o[0]-(o[1]-i)*(s[0]-o[0])/(s[1]-o[1])>=r)&&(l=!l)}a=e,s=o,o=t[++c]}return l})(t,n)),0)===e.length?1:0)}},46447:e=>{e.exports=e=>((void 0===e||e.length<3)&&(e=[]),{vertices:e})},13140:(e,t,n)=>{const r=n(46447);e.exports=e=>{const t=e.vertices.slice().reverse();return r(t)}},35719:(e,t,n)=>{e.exports={arePointsInside:n(79138),create:n(46447),flip:n(13140),measureArea:n(97638)}},97638:(e,t,n)=>{const r=n(44264);e.exports=e=>r(e.vertices)},67853:(e,t,n)=>{const r=n(12534),i=n(2215);e.exports=(...e)=>{let t,n;return 1===e.length?(t=r(),n=e[0]):(t=e[0],n=e[1]),t.vertices=n.vertices.map((e=>i.clone(e))),t}},12534:e=>{e.exports=e=>((void 0===e||e.length<3)&&(e=[]),{vertices:e})},69249:(e,t,n)=>{const r=n(2215),i=n(12534);e.exports=e=>{const t=e.map((e=>r.clone(e)));return i(t)}},30252:(e,t,n)=>{const r=n(12534);e.exports=(e,t)=>{const n=r(e);return n.plane=t,n}},9504:(e,t,n)=>{e.exports={clone:n(67853),create:n(12534),fromPoints:n(69249),fromPointsAndPlane:n(30252),invert:n(97114),isA:n(93739),isConvex:n(67965),measureArea:n(52181),measureBoundingBox:n(44067),measureBoundingSphere:n(51937),measureSignedVolume:n(29310),plane:n(57622),toPoints:n(62792),toString:n(4398),transform:n(25936),validate:n(89112)}},97114:(e,t,n)=>{const r=n(2758),i=n(12534);e.exports=e=>{const t=e.vertices.slice().reverse(),n=i(t);return e.plane&&(n.plane=r.flip(r.create(),e.plane)),n}},93739:e=>{e.exports=e=>!!(e&&"object"==typeof e&&"vertices"in e&&Array.isArray(e.vertices))},67965:(e,t,n)=>{const r=n(2758),i=n(2215),s=(e,t,n,r)=>{const s=i.cross(i.create(),i.subtract(i.create(),t,e),i.subtract(i.create(),n,t));return i.dot(s,r)>=0};e.exports=e=>(e=>{const t=e.length;if(t>2){const n=r.fromPoints(r.create(),...e);let i=e[t-2],o=e[t-1];for(let r=0;r<t;r++){const t=e[r];if(!s(i,o,t,n))return!1;i=o,o=t}}return!0})(e.vertices)},52181:(e,t,n)=>{const r=n(57622);e.exports=e=>{const t=e.vertices.length;if(t<3)return 0;const n=e.vertices,i=r(e),s=Math.abs(i[0]),o=Math.abs(i[1]),a=Math.abs(i[2]);if(s+o+a===0)return 0;let l=3;s>o&&s>a?l=1:o>a&&(l=2);let c=0,h=0,u=1,d=2;switch(l){case 1:for(u=1;u<t;u++)h=u-1,d=(u+1)%t,c+=n[u][1]*(n[d][2]-n[h][2]);c+=n[0][1]*(n[1][2]-n[t-1][2]),c/=2*i[0];break;case 2:for(u=1;u<t;u++)h=u-1,d=(u+1)%t,c+=n[u][2]*(n[d][0]-n[h][0]);c+=n[0][2]*(n[1][0]-n[t-1][0]),c/=2*i[1];break;default:for(u=1;u<t;u++)h=u-1,d=(u+1)%t,c+=n[u][0]*(n[d][1]-n[h][1]);c+=n[0][0]*(n[1][1]-n[t-1][1]),c/=2*i[2]}return c}},44067:(e,t,n)=>{const r=n(2215);e.exports=e=>{const t=e.vertices,n=t.length,i=0===n?r.create():r.clone(t[0]),s=r.clone(i);for(let e=1;e<n;e++)r.min(i,i,t[e]),r.max(s,s,t[e]);return[i,s]}},51937:(e,t,n)=>{const r=n(78030),i=new WeakMap;e.exports=e=>{const t=i.get(e);if(t)return t;const n=e.vertices,s=r.create();if(0===n.length)return s[0]=0,s[1]=0,s[2]=0,s[3]=0,s;let o=n[0],a=o,l=o,c=o,h=o,u=o;n.forEach((e=>{o[0]>e[0]&&(o=e),a[1]>e[1]&&(a=e),l[2]>e[2]&&(l=e),c[0]<e[0]&&(c=e),h[1]<e[1]&&(h=e),u[2]<e[2]&&(u=e)})),s[0]=.5*(o[0]+c[0]),s[1]=.5*(a[1]+h[1]),s[2]=.5*(l[2]+u[2]);const d=s[0]-c[0],p=s[1]-h[1],f=s[2]-u[2];return s[3]=Math.sqrt(d*d+p*p+f*f),i.set(e,s),s}},29310:(e,t,n)=>{const r=n(2215);e.exports=e=>{let t=0;const n=e.vertices,i=r.create();for(let e=0;e<n.length-2;e++)r.cross(i,n[e+1],n[e+2]),t+=r.dot(n[0],i);return t/=6,t}},57622:(e,t,n)=>{const r=n(2758);e.exports=e=>(e.plane||(e.plane=r.fromPoints(r.create(),...e.vertices)),e.plane)},62792:e=>{e.exports=e=>e.vertices},4398:(e,t,n)=>{const r=n(2215);e.exports=e=>{let t="poly3: vertices: [";return e.vertices.forEach((e=>{t+=`${r.toString(e)}, `})),t+="]",t}},25936:(e,t,n)=>{const r=n(15118),i=n(2215),s=n(12534);e.exports=(e,t)=>{const n=t.vertices.map((t=>i.transform(i.create(),t,e)));return r.isMirroring(e)&&n.reverse(),s(n)}},89112:(e,t,n)=>{const r=n(45410),{NEPS:i}=n(31246),s=n(2215),o=n(93739),a=n(67965),l=n(52181),c=n(57622);e.exports=e=>{if(!o(e))throw new Error("invalid poly3 structure");if(e.vertices.length<3)throw new Error(`poly3 not enough vertices ${e.vertices.length}`);if(l(e)<=0)throw new Error("poly3 area must be greater than zero");for(let t=0;t<e.vertices.length;t++)if(s.equals(e.vertices[t],e.vertices[(t+1)%e.vertices.length]))throw new Error(`poly3 duplicate vertex ${e.vertices[t]}`);if(!a(e))throw new Error("poly3 must be convex");if(e.vertices.forEach((e=>{if(!e.every(Number.isFinite))throw new Error(`poly3 invalid vertex ${e}`)})),e.vertices.length>3){const t=c(e);e.vertices.forEach((e=>{const n=Math.abs(r(t,e));if(n>i)throw new Error(`poly3 must be coplanar: vertex ${e} distance ${n}`)}))}}},80715:(e,t,n)=>{e.exports={colors:n(99452),curves:n(74960),geometries:n(28900),maths:n(77355),measurements:n(76797),primitives:n(68066),text:n(15803),utils:n(38149),booleans:n(81922),expansions:n(80629),extrusions:n(46779),hulls:n(50869),modifiers:n(42463),transforms:n(79686)}},40282:(e,t,n)=>{const r=n(15118),i=n(19936),s=n(2215),o=function(e,t){arguments.length<2&&(t=s.orthogonal(s.create(),e)),this.v=s.normalize(s.create(),s.cross(s.create(),e,t)),this.u=s.cross(s.create(),this.v,e),this.plane=e,this.planeorigin=s.scale(s.create(),e,e[3])};o.prototype={getProjectionMatrix:function(){return r.fromValues(this.u[0],this.v[0],this.plane[0],0,this.u[1],this.v[1],this.plane[1],0,this.u[2],this.v[2],this.plane[2],0,0,0,-this.plane[3],1)},getInverseProjectionMatrix:function(){const e=s.scale(s.create(),this.plane,this.plane[3]);return r.fromValues(this.u[0],this.u[1],this.u[2],0,this.v[0],this.v[1],this.v[2],0,this.plane[0],this.plane[1],this.plane[2],0,e[0],e[1],e[2],1)},to2D:function(e){return i.fromValues(s.dot(e,this.u),s.dot(e,this.v))},to3D:function(e){const t=s.scale(s.create(),this.u,e[0]),n=s.scale(s.create(),this.v,e[1]),r=s.add(t,t,this.planeorigin);return s.add(n,n,r)}},e.exports=o},31246:e=>{const t=2*Math.PI;e.exports={EPS:1e-5,NEPS:1e-13,TAU:t,spatialResolution:1e5}},77355:(e,t,n)=>{e.exports={constants:n(31246),line2:n(50760),line3:n(74799),mat4:n(15118),plane:n(2758),utils:n(83973),vec2:n(19936),vec3:n(2215),vec4:n(78030)}},58069:(e,t,n)=>{const r=n(55806);e.exports=e=>{const t=r();return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}},965:(e,t,n)=>{const r=n(19936),i=n(13957),s=n(54300);e.exports=(e,t)=>{const n=s(e),o=i(e),a=r.subtract(r.create(),t,n),l=r.dot(a,o);return r.scale(a,o,l),r.add(a,a,n),a}},2987:e=>{e.exports=(e,t)=>(e[0]=t[0],e[1]=t[1],e[2]=t[2],e)},55806:e=>{e.exports=()=>[0,1,0]},13957:(e,t,n)=>{const r=n(19936);e.exports=e=>{const t=r.normal(r.create(),e);return r.negate(t,t),t}},45732:(e,t,n)=>{const r=n(19936);e.exports=(e,t)=>{let n=r.dot(t,e);return n=Math.abs(n-e[2]),n}},24523:e=>{e.exports=(e,t)=>e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]},53113:(e,t,n)=>{const r=n(19936);e.exports=(e,t,n)=>{const i=r.subtract(r.create(),n,t);r.normal(i,i),r.normalize(i,i);const s=r.dot(t,i);return e[0]=i[0],e[1]=i[1],e[2]=s,e}},95184:(e,t,n)=>{const r=n(55806);e.exports=(e,t,n)=>{const i=r();return i[0]=e,i[1]=t,i[2]=n,i}},50760:(e,t,n)=>{e.exports={clone:n(58069),closestPoint:n(965),copy:n(2987),create:n(55806),direction:n(13957),distanceToPoint:n(45732),equals:n(24523),fromPoints:n(53113),fromValues:n(95184),intersectPointOfLines:n(43383),origin:n(54300),reverse:n(93094),toString:n(39366),transform:n(61720),xAtY:n(54346)}},43383:(e,t,n)=>{const r=n(19936),{solve2Linear:i}=n(83973);e.exports=(e,t)=>{const n=i(e[0],e[1],t[0],t[1],e[2],t[2]);return r.clone(n)}},54300:(e,t,n)=>{const r=n(19936);e.exports=e=>r.scale(r.create(),e,e[2])},93094:(e,t,n)=>{const r=n(19936),i=n(2987),s=n(95184);e.exports=(e,t)=>{const n=r.negate(r.create(),t),o=-t[2];return i(e,s(n[0],n[1],o))}},39366:e=>{e.exports=e=>`line2: (${e[0].toFixed(7)}, ${e[1].toFixed(7)}, ${e[2].toFixed(7)})`},61720:(e,t,n)=>{const r=n(19936),i=n(53113),s=n(54300),o=n(13957);e.exports=(e,t,n)=>{const a=s(t),l=o(t);return r.transform(a,a,n),r.transform(l,l,n),i(e,a,l)}},54346:(e,t,n)=>{const r=n(54300);e.exports=(e,t)=>{let n=(e[2]-e[1]*t)/e[0];return Number.isNaN(n)&&(n=r(e)[0]),n}},28682:(e,t,n)=>{const r=n(2215),i=n(86711);e.exports=e=>{const t=i();return r.copy(t[0],e[0]),r.copy(t[1],e[1]),t}},80060:(e,t,n)=>{const r=n(2215);e.exports=(e,t)=>{const n=e[0],i=e[1],s=r.dot(r.subtract(r.create(),t,n),i)/r.dot(i,i),o=r.scale(r.create(),i,s);return r.add(o,o,n),o}},22570:(e,t,n)=>{const r=n(2215);e.exports=(e,t)=>(r.copy(e[0],t[0]),r.copy(e[1],t[1]),e)},86711:(e,t,n)=>{const r=n(2215);e.exports=()=>[r.fromValues(0,0,0),r.fromValues(0,0,1)]},80422:e=>{e.exports=e=>e[1]},22403:(e,t,n)=>{const r=n(2215),i=n(80060);e.exports=(e,t)=>{const n=i(e,t),s=r.subtract(r.create(),t,n);return r.length(s)}},12950:(e,t,n)=>{const r=n(2215);e.exports=(e,t)=>!!r.equals(e[1],t[1])&&!!r.equals(e[0],t[0])},33236:(e,t,n)=>{const r=n(2215),{solve2Linear:i}=n(83973),{EPS:s}=n(31246),o=n(34883);e.exports=(e,t,n)=>{let a=r.cross(r.create(),t,n),l=r.length(a);if(l<s)throw new Error("parallel planes do not intersect");l=1/l,a=r.scale(a,a,l);const c=Math.abs(a[0]),h=Math.abs(a[1]),u=Math.abs(a[2]);let d,p;return c>=h&&c>=u?(p=i(t[1],t[2],n[1],n[2],t[3],n[3]),d=r.fromValues(0,p[0],p[1])):h>=c&&h>=u?(p=i(t[0],t[2],n[0],n[2],t[3],n[3]),d=r.fromValues(p[0],0,p[1])):(p=i(t[0],t[1],n[0],n[1],t[3],n[3]),d=r.fromValues(p[0],p[1],0)),o(e,d,a)}},34883:(e,t,n)=>{const r=n(2215);e.exports=(e,t,n)=>{const i=r.normalize(r.create(),n);return r.copy(e[0],t),r.copy(e[1],i),e}},47896:(e,t,n)=>{const r=n(2215),i=n(34883);e.exports=(e,t,n)=>{const s=r.subtract(r.create(),n,t);return i(e,t,s)}},74799:(e,t,n)=>{e.exports={clone:n(28682),closestPoint:n(80060),copy:n(22570),create:n(86711),direction:n(80422),distanceToPoint:n(22403),equals:n(12950),fromPlanes:n(33236),fromPointAndDirection:n(34883),fromPoints:n(47896),intersectPointOfLineAndPlane:n(21448),origin:n(93649),reverse:n(12333),toString:n(40951),transform:n(31007)}},21448:(e,t,n)=>{const r=n(2215);e.exports=(e,t)=>{const n=t,i=t[3],s=e[0],o=e[1],a=(i-r.dot(n,s))/r.dot(n,o);return r.add(r.create(),s,r.scale(r.create(),o,a))}},93649:e=>{e.exports=e=>e[0]},12333:(e,t,n)=>{const r=n(2215),i=n(34883);e.exports=(e,t)=>{const n=r.clone(t[0]),s=r.negate(r.create(),t[1]);return i(e,n,s)}},40951:e=>{e.exports=e=>{const t=e[0],n=e[1];return`line3: point: (${t[0].toFixed(7)}, ${t[1].toFixed(7)}, ${t[2].toFixed(7)}) direction: (${n[0].toFixed(7)}, ${n[1].toFixed(7)}, ${n[2].toFixed(7)})`}},31007:(e,t,n)=>{const r=n(2215),i=n(34883);e.exports=(e,t,n)=>{const s=t[0],o=t[1],a=r.add(r.create(),s,o),l=r.transform(r.create(),s,n),c=r.transform(a,a,n),h=r.subtract(c,c,l);return i(e,l,h)}},269:e=>{e.exports=(e,t,n)=>(e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e[3]=t[3]+n[3],e[4]=t[4]+n[4],e[5]=t[5]+n[5],e[6]=t[6]+n[6],e[7]=t[7]+n[7],e[8]=t[8]+n[8],e[9]=t[9]+n[9],e[10]=t[10]+n[10],e[11]=t[11]+n[11],e[12]=t[12]+n[12],e[13]=t[13]+n[13],e[14]=t[14]+n[14],e[15]=t[15]+n[15],e)},71235:(e,t,n)=>{const r=n(63748);e.exports=e=>{const t=r();return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}},82089:e=>{e.exports=(e,t)=>(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e)},63748:e=>{e.exports=()=>[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]},2933:e=>{e.exports=(e,t)=>e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]&&e[9]===t[9]&&e[10]===t[10]&&e[11]===t[11]&&e[12]===t[12]&&e[13]===t[13]&&e[14]===t[14]&&e[15]===t[15]},43734:(e,t,n)=>{const{EPS:r}=n(31246),{sin:i,cos:s}=n(53978),o=n(52234);e.exports=(e,t,n)=>{let[a,l,c]=n;const h=a*a+l*l+c*c;if(Math.abs(h)<r)return o(e);const u=1/Math.sqrt(h);a*=u,l*=u,c*=u;const d=i(t),p=s(t),f=1-p;return e[0]=a*a*f+p,e[1]=l*a*f+c*d,e[2]=c*a*f-l*d,e[3]=0,e[4]=a*l*f-c*d,e[5]=l*l*f+p,e[6]=c*l*f+a*d,e[7]=0,e[8]=a*c*f+l*d,e[9]=l*c*f-a*d,e[10]=c*c*f+p,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}},44595:e=>{e.exports=(e,t)=>(e[0]=t[0],e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=t[1],e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=t[2],e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e)},30146:(e,t,n)=>{const{sin:r,cos:i}=n(53978);e.exports=(e,t,n,s)=>{const o=r(t),a=i(t),l=r(n),c=i(n),h=r(s),u=i(s);return e[0]=c*a,e[1]=c*o,e[2]=-l,e[3]=0,e[4]=h*l*a-u*o,e[5]=u*a+h*l*o,e[6]=h*c,e[7]=0,e[8]=h*o+u*l*a,e[9]=u*l*o-h*a,e[10]=u*c,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}},75901:e=>{e.exports=(e,t)=>(e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=t[0],e[13]=t[1],e[14]=t[2],e[15]=1,e)},15490:(e,t,n)=>{const r=n(63748);e.exports=(e,t,n,i,s,o,a,l,c,h,u,d,p,f,m,g)=>{const v=r();return v[0]=e,v[1]=t,v[2]=n,v[3]=i,v[4]=s,v[5]=o,v[6]=a,v[7]=l,v[8]=c,v[9]=h,v[10]=u,v[11]=d,v[12]=p,v[13]=f,v[14]=m,v[15]=g,v}},71673:(e,t,n)=>{const r=n(2215),i=n(43734);e.exports=(e,t,n)=>{const s=r.normalize(r.create(),t),o=r.normalize(r.create(),n),a=r.cross(r.create(),o,s),l=r.dot(o,s);if(-1===l)return i(e,Math.PI,r.orthogonal(a,s));const c=1/(1+l);return e[0]=a[0]*a[0]*c+l,e[1]=a[1]*a[0]*c-a[2],e[2]=a[2]*a[0]*c+a[1],e[3]=0,e[4]=a[0]*a[1]*c+a[2],e[5]=a[1]*a[1]*c+l,e[6]=a[2]*a[1]*c-a[0],e[7]=0,e[8]=a[0]*a[2]*c-a[1],e[9]=a[1]*a[2]*c+a[0],e[10]=a[2]*a[2]*c+l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}},21880:(e,t,n)=>{const{sin:r,cos:i}=n(53978);e.exports=(e,t)=>{const n=r(t),s=i(t);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=s,e[6]=n,e[7]=0,e[8]=0,e[9]=-n,e[10]=s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}},45867:(e,t,n)=>{const{sin:r,cos:i}=n(53978);e.exports=(e,t)=>{const n=r(t),s=i(t);return e[0]=s,e[1]=0,e[2]=-n,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=n,e[9]=0,e[10]=s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}},49014:(e,t,n)=>{const{sin:r,cos:i}=n(53978);e.exports=(e,t)=>{const n=r(t),s=i(t);return e[0]=s,e[1]=n,e[2]=0,e[3]=0,e[4]=-n,e[5]=s,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}},52234:e=>{e.exports=e=>(e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e)},15118:(e,t,n)=>{e.exports={add:n(269),clone:n(71235),copy:n(82089),create:n(63748),invert:n(99508),equals:n(2933),fromRotation:n(43734),fromScaling:n(44595),fromTaitBryanRotation:n(30146),fromTranslation:n(75901),fromValues:n(15490),fromVectorRotation:n(71673),fromXRotation:n(21880),fromYRotation:n(45867),fromZRotation:n(49014),identity:n(52234),isIdentity:n(69118),isOnlyTransformScale:n(69784),isMirroring:n(16247),mirrorByPlane:n(4634),multiply:n(83388),rotate:n(27547),rotateX:n(75459),rotateY:n(70524),rotateZ:n(34949),scale:n(67692),subtract:n(76624),toString:n(6392),translate:n(90804)}},99508:e=>{e.exports=(e,t)=>{const n=t[0],r=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8],u=t[9],d=t[10],p=t[11],f=t[12],m=t[13],g=t[14],v=t[15],x=n*a-r*o,_=n*l-i*o,b=n*c-s*o,y=r*l-i*a,E=r*c-s*a,S=i*c-s*l,M=h*m-u*f,A=h*g-d*f,T=h*v-p*f,w=u*g-d*m,C=u*v-p*m,R=d*v-p*g;let P=x*R-_*C+b*w+y*T-E*A+S*M;return P?(P=1/P,e[0]=(a*R-l*C+c*w)*P,e[1]=(i*C-r*R-s*w)*P,e[2]=(m*S-g*E+v*y)*P,e[3]=(d*E-u*S-p*y)*P,e[4]=(l*T-o*R-c*A)*P,e[5]=(n*R-i*T+s*A)*P,e[6]=(g*b-f*S-v*_)*P,e[7]=(h*S-d*b+p*_)*P,e[8]=(o*C-a*T+c*M)*P,e[9]=(r*T-n*C-s*M)*P,e[10]=(f*E-m*b+v*x)*P,e[11]=(u*b-h*E-p*x)*P,e[12]=(a*A-o*w-l*M)*P,e[13]=(n*w-r*A+i*M)*P,e[14]=(m*_-f*y-g*x)*P,e[15]=(h*y-u*_+d*x)*P,e):null}},69118:e=>{e.exports=e=>1===e[0]&&0===e[1]&&0===e[2]&&0===e[3]&&0===e[4]&&1===e[5]&&0===e[6]&&0===e[7]&&0===e[8]&&0===e[9]&&1===e[10]&&0===e[11]&&0===e[12]&&0===e[13]&&0===e[14]&&1===e[15]},16247:e=>{e.exports=e=>{const t=e[4]*e[9]-e[8]*e[5],n=e[8]*e[1]-e[0]*e[9],r=e[0]*e[5]-e[4]*e[1];return t*e[2]+n*e[6]+r*e[10]<0}},69784:e=>{const t=e=>Math.abs(e)<Number.EPSILON;e.exports=e=>t(e[1])&&t(e[2])&&t(e[3])&&t(e[4])&&t(e[6])&&t(e[7])&&t(e[8])&&t(e[9])&&t(e[11])&&1===e[15]},4634:e=>{e.exports=(e,t)=>{const[n,r,i,s]=t;return e[0]=1-2*n*n,e[1]=-2*r*n,e[2]=-2*i*n,e[3]=0,e[4]=-2*n*r,e[5]=1-2*r*r,e[6]=-2*i*r,e[7]=0,e[8]=-2*n*i,e[9]=-2*r*i,e[10]=1-2*i*i,e[11]=0,e[12]=2*n*s,e[13]=2*r*s,e[14]=2*i*s,e[15]=1,e}},83388:e=>{e.exports=(e,t,n)=>{const r=t[0],i=t[1],s=t[2],o=t[3],a=t[4],l=t[5],c=t[6],h=t[7],u=t[8],d=t[9],p=t[10],f=t[11],m=t[12],g=t[13],v=t[14],x=t[15];let _=n[0],b=n[1],y=n[2],E=n[3];return e[0]=_*r+b*a+y*u+E*m,e[1]=_*i+b*l+y*d+E*g,e[2]=_*s+b*c+y*p+E*v,e[3]=_*o+b*h+y*f+E*x,_=n[4],b=n[5],y=n[6],E=n[7],e[4]=_*r+b*a+y*u+E*m,e[5]=_*i+b*l+y*d+E*g,e[6]=_*s+b*c+y*p+E*v,e[7]=_*o+b*h+y*f+E*x,_=n[8],b=n[9],y=n[10],E=n[11],e[8]=_*r+b*a+y*u+E*m,e[9]=_*i+b*l+y*d+E*g,e[10]=_*s+b*c+y*p+E*v,e[11]=_*o+b*h+y*f+E*x,_=n[12],b=n[13],y=n[14],E=n[15],e[12]=_*r+b*a+y*u+E*m,e[13]=_*i+b*l+y*d+E*g,e[14]=_*s+b*c+y*p+E*v,e[15]=_*o+b*h+y*f+E*x,e}},27547:(e,t,n)=>{const{EPS:r}=n(31246),{sin:i,cos:s}=n(53978),o=n(82089);e.exports=(e,t,n,a)=>{let[l,c,h]=a;const u=l*l+c*c+h*h;if(Math.abs(u)<r)return o(e,t);const d=1/Math.sqrt(u);l*=d,c*=d,h*=d;const p=i(n),f=s(n),m=1-f,g=t[0],v=t[1],x=t[2],_=t[3],b=t[4],y=t[5],E=t[6],S=t[7],M=t[8],A=t[9],T=t[10],w=t[11],C=l*l*m+f,R=c*l*m+h*p,P=h*l*m-c*p,D=l*c*m-h*p,L=c*c*m+f,I=h*c*m+l*p,N=l*h*m+c*p,O=c*h*m-l*p,U=h*h*m+f;return e[0]=g*C+b*R+M*P,e[1]=v*C+y*R+A*P,e[2]=x*C+E*R+T*P,e[3]=_*C+S*R+w*P,e[4]=g*D+b*L+M*I,e[5]=v*D+y*L+A*I,e[6]=x*D+E*L+T*I,e[7]=_*D+S*L+w*I,e[8]=g*N+b*O+M*U,e[9]=v*N+y*O+A*U,e[10]=x*N+E*O+T*U,e[11]=_*N+S*O+w*U,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e}},75459:(e,t,n)=>{const{sin:r,cos:i}=n(53978);e.exports=(e,t,n)=>{const s=r(n),o=i(n),a=t[4],l=t[5],c=t[6],h=t[7],u=t[8],d=t[9],p=t[10],f=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=a*o+u*s,e[5]=l*o+d*s,e[6]=c*o+p*s,e[7]=h*o+f*s,e[8]=u*o-a*s,e[9]=d*o-l*s,e[10]=p*o-c*s,e[11]=f*o-h*s,e}},70524:(e,t,n)=>{const{sin:r,cos:i}=n(53978);e.exports=(e,t,n)=>{const s=r(n),o=i(n),a=t[0],l=t[1],c=t[2],h=t[3],u=t[8],d=t[9],p=t[10],f=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*o-u*s,e[1]=l*o-d*s,e[2]=c*o-p*s,e[3]=h*o-f*s,e[8]=a*s+u*o,e[9]=l*s+d*o,e[10]=c*s+p*o,e[11]=h*s+f*o,e}},34949:(e,t,n)=>{const{sin:r,cos:i}=n(53978);e.exports=(e,t,n)=>{const s=r(n),o=i(n),a=t[0],l=t[1],c=t[2],h=t[3],u=t[4],d=t[5],p=t[6],f=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*o+u*s,e[1]=l*o+d*s,e[2]=c*o+p*s,e[3]=h*o+f*s,e[4]=u*o-a*s,e[5]=d*o-l*s,e[6]=p*o-c*s,e[7]=f*o-h*s,e}},67692:e=>{e.exports=(e,t,n)=>{const r=n[0],i=n[1],s=n[2];return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e[4]=t[4]*i,e[5]=t[5]*i,e[6]=t[6]*i,e[7]=t[7]*i,e[8]=t[8]*s,e[9]=t[9]*s,e[10]=t[10]*s,e[11]=t[11]*s,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}},76624:e=>{e.exports=(e,t,n)=>(e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e[3]=t[3]-n[3],e[4]=t[4]-n[4],e[5]=t[5]-n[5],e[6]=t[6]-n[6],e[7]=t[7]-n[7],e[8]=t[8]-n[8],e[9]=t[9]-n[9],e[10]=t[10]-n[10],e[11]=t[11]-n[11],e[12]=t[12]-n[12],e[13]=t[13]-n[13],e[14]=t[14]-n[14],e[15]=t[15]-n[15],e)},6392:e=>{e.exports=e=>e.map((e=>e.toFixed(7))).toString()},90804:e=>{e.exports=(e,t,n)=>{const r=n[0],i=n[1],s=n[2];let o,a,l,c,h,u,d,p,f,m,g,v;return t===e?(e[12]=t[0]*r+t[4]*i+t[8]*s+t[12],e[13]=t[1]*r+t[5]*i+t[9]*s+t[13],e[14]=t[2]*r+t[6]*i+t[10]*s+t[14],e[15]=t[3]*r+t[7]*i+t[11]*s+t[15]):(o=t[0],a=t[1],l=t[2],c=t[3],h=t[4],u=t[5],d=t[6],p=t[7],f=t[8],m=t[9],g=t[10],v=t[11],e[0]=o,e[1]=a,e[2]=l,e[3]=c,e[4]=h,e[5]=u,e[6]=d,e[7]=p,e[8]=f,e[9]=m,e[10]=g,e[11]=v,e[12]=o*r+h*i+f*s+t[12],e[13]=a*r+u*i+m*s+t[13],e[14]=l*r+d*i+g*s+t[14],e[15]=c*r+p*i+v*s+t[15]),e}},51219:e=>{e.exports=(e,t)=>(e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e)},65655:(e,t,n)=>{const r=n(2215),i=n(97362);e.exports=(e,...t)=>{e[0]=0,e[1]=0,e[2]=0,e[3]=0;const n=t.length;t.forEach((t=>{r.add(e,e,t)})),r.scale(e,e,1/n);let s=0,o=0,a=0,l=0,c=0,h=0;const u=r.create();t.forEach((t=>{r.subtract(u,t,e),s+=u[0]*u[0],o+=u[0]*u[1],a+=u[0]*u[2],l+=u[1]*u[1],c+=u[1]*u[2],h+=u[2]*u[2]})),s/=n,o/=n,a/=n,l/=n,c/=n,h/=n,u[0]=0,u[1]=0,u[2]=0;const d=r.create();let p=l*h-c*c;d[0]=p,d[1]=a*c-o*h,d[2]=o*c-a*l;let f=p*p;return r.add(u,u,r.scale(d,d,f)),p=s*h-a*a,d[0]=a*c-o*h,d[1]=p,d[2]=o*a-c*s,f=p*p,r.dot(u,d)<0&&(f=-f),r.add(u,u,r.scale(d,d,f)),p=s*l-o*o,d[0]=o*c-a*l,d[1]=o*a-c*s,d[2]=p,f=p*p,r.dot(u,d)<0&&(f=-f),r.add(u,u,r.scale(d,d,f)),i(e,u,e)}},97362:(e,t,n)=>{const r=n(2215);e.exports=(e,t,n)=>{const i=r.normalize(r.create(),t),s=r.dot(n,i);return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=s,e}},95511:(e,t,n)=>{const r=n(2215);e.exports=(e,...t)=>{const n=t.length,i=r.create(),s=r.create(),o=e=>{const o=t[e],a=t[(e+1)%n],l=t[(e+2)%n];return r.subtract(i,a,o),r.subtract(s,l,o),r.cross(i,i,s),r.normalize(i,i),i};return e[0]=0,e[1]=0,e[2]=0,3===n?r.copy(e,o(0)):(t.forEach(((t,n)=>{r.add(e,e,o(n))})),r.normalize(e,e)),e[3]=r.dot(e,t[0]),e}},60300:(e,t,n)=>{const{EPS:r}=n(31246),i=n(2215);e.exports=(e,t,n,s)=>{let o=i.subtract(i.create(),n,t),a=i.subtract(i.create(),s,t);i.length(o)<r&&(o=i.orthogonal(o,a)),i.length(a)<r&&(a=i.orthogonal(a,o));let l=i.cross(i.create(),o,a);i.length(l)<r&&(a=i.orthogonal(a,o),l=i.cross(l,o,a)),l=i.normalize(l,l);const c=i.dot(l,t);return e[0]=l[0],e[1]=l[1],e[2]=l[2],e[3]=c,e}},2758:(e,t,n)=>{e.exports={clone:n(39491),copy:n(44393),create:n(21252),equals:n(74293),flip:n(51219),fromNormalAndPoint:n(97362),fromValues:n(14210),fromNoisyPoints:n(65655),fromPoints:n(95511),fromPointsRandom:n(60300),projectionOfPoint:n(68032),signedDistanceToPoint:n(45410),toString:n(61240),transform:n(95402)}},68032:(e,t,n)=>{const r=n(2215);e.exports=(e,t)=>{const n=t[0]*e[0]+t[1]*e[1]+t[2]*e[2]-e[3],i=t[0]-n*e[0],s=t[1]-n*e[1],o=t[2]-n*e[2];return r.fromValues(i,s,o)}},45410:(e,t,n)=>{const r=n(2215);e.exports=(e,t)=>r.dot(e,t)-e[3]},95402:(e,t,n)=>{const r=n(15118),i=n(2215),s=n(95511),o=n(51219);e.exports=(e,t,n)=>{const a=r.isMirroring(n),l=i.orthogonal(i.create(),t),c=i.cross(l,t,l),h=i.cross(i.create(),t,c);let u=i.fromScalar(i.create(),t[3]);i.multiply(u,u,t);let d=i.add(i.create(),u,c),p=i.add(i.create(),u,h);return u=i.transform(u,u,n),d=i.transform(d,d,n),p=i.transform(p,p,n),s(e,u,d,p),a&&o(e,e),e}},50456:(e,t,n)=>{const{NEPS:r}=n(31246);e.exports=(e,t)=>Math.abs(e[0]-t[0])<=r&&Math.abs(e[1]-t[1])<=r&&Math.abs(e[2]-t[2])<=r},44264:e=>{e.exports=e=>{let t=0;for(let n=0;n<e.length;n++){const r=(n+1)%e.length;t+=e[n][0]*e[r][1],t-=e[r][0]*e[n][1]}return t/2}},83973:(e,t,n)=>{e.exports={aboutEqualNormals:n(50456),area:n(44264),cos:n(53978).cos,interpolateBetween2DPointsForY:n(19735),intersect:n(5764),sin:n(53978).sin,solve2Linear:n(31435)}},19735:e=>{e.exports=(e,t,n)=>{let r,i=n-e[1],s=t[1]-e[1];return s<0&&(i=-i,s=-s),r=i<=0?0:i>=s?1:s<1e-10?.5:i/s,e[0]+r*(t[0]-e[0])}},5764:e=>{e.exports=(e,t,n,r)=>{if(e[0]===t[0]&&e[1]===t[1]||n[0]===r[0]&&n[1]===r[1])return;const i=(r[1]-n[1])*(t[0]-e[0])-(r[0]-n[0])*(t[1]-e[1]);if(Math.abs(i)<Number.MIN_VALUE)return;const s=((r[0]-n[0])*(e[1]-n[1])-(r[1]-n[1])*(e[0]-n[0]))/i,o=((t[0]-e[0])*(e[1]-n[1])-(t[1]-e[1])*(e[0]-n[0]))/i;return s<0||s>1||o<0||o>1?void 0:[e[0]+s*(t[0]-e[0]),e[1]+s*(t[1]-e[1])]}},31435:e=>{e.exports=(e,t,n,r,i,s)=>{const o=1/(e*r-t*n);let a=i*r-t*s,l=-i*n+e*s;return a*=o,l*=o,[a,l]}},53978:(e,t,n)=>{const{NEPS:r}=n(31246),i=e=>Math.abs(e)<r?0:e;e.exports={sin:e=>i(Math.sin(e)),cos:e=>i(Math.cos(e))}},47864:e=>{e.exports=(e,t)=>(e[0]=Math.abs(t[0]),e[1]=Math.abs(t[1]),e)},98835:e=>{e.exports=(e,t,n)=>(e[0]=t[0]+n[0],e[1]=t[1]+n[1],e)},74303:(e,t,n)=>{e.exports=n(40737)},11810:(e,t,n)=>{const r=n(40737);e.exports=e=>57.29577951308232*r(e)},40737:e=>{e.exports=e=>Math.atan2(e[1],e[0])},93325:(e,t,n)=>{const r=n(74806);e.exports=e=>{const t=r();return t[0]=e[0],t[1]=e[1],t}},46211:e=>{e.exports=(e,t)=>(e[0]=t[0],e[1]=t[1],e)},74806:e=>{e.exports=()=>[0,0]},66032:e=>{e.exports=(e,t,n)=>(e[0]=0,e[1]=0,e[2]=t[0]*n[1]-t[1]*n[0],e)},95637:e=>{e.exports=(e,t)=>{const n=t[0]-e[0],r=t[1]-e[1];return Math.sqrt(n*n+r*r)}},75023:e=>{e.exports=(e,t,n)=>(e[0]=t[0]/n[0],e[1]=t[1]/n[1],e)},87615:e=>{e.exports=(e,t)=>e[0]*t[0]+e[1]*t[1]},53043:e=>{e.exports=(e,t)=>e[0]===t[0]&&e[1]===t[1]},26458:(e,t,n)=>{const r=n(36985);e.exports=(e,t)=>r(e,.017453292519943295*t)},36985:(e,t,n)=>{const{sin:r,cos:i}=n(53978);e.exports=(e,t)=>(e[0]=i(t),e[1]=r(t),e)},48942:e=>{e.exports=(e,t)=>(e[0]=t,e[1]=t,e)},34136:(e,t,n)=>{const r=n(74806);e.exports=(e,t)=>{const n=r();return n[0]=e,n[1]=t,n}},19936:(e,t,n)=>{e.exports={abs:n(47864),add:n(98835),angle:n(74303),angleDegrees:n(11810),angleRadians:n(40737),clone:n(93325),copy:n(46211),create:n(74806),cross:n(66032),distance:n(95637),divide:n(75023),dot:n(87615),equals:n(53043),fromAngleDegrees:n(26458),fromAngleRadians:n(36985),fromScalar:n(48942),fromValues:n(34136),length:n(98718),lerp:n(37639),max:n(84914),min:n(84572),multiply:n(18158),negate:n(83880),normal:n(21669),normalize:n(20947),rotate:n(82685),scale:n(99234),snap:n(70214),squaredDistance:n(44430),squaredLength:n(17581),subtract:n(37954),toString:n(72526),transform:n(57008)}},98718:e=>{e.exports=e=>Math.sqrt(e[0]*e[0]+e[1]*e[1])},37639:e=>{e.exports=(e,t,n,r)=>{const i=t[0],s=t[1];return e[0]=i+r*(n[0]-i),e[1]=s+r*(n[1]-s),e}},84914:e=>{e.exports=(e,t,n)=>(e[0]=Math.max(t[0],n[0]),e[1]=Math.max(t[1],n[1]),e)},84572:e=>{e.exports=(e,t,n)=>(e[0]=Math.min(t[0],n[0]),e[1]=Math.min(t[1],n[1]),e)},18158:e=>{e.exports=(e,t,n)=>(e[0]=t[0]*n[0],e[1]=t[1]*n[1],e)},83880:e=>{e.exports=(e,t)=>(e[0]=-t[0],e[1]=-t[1],e)},21669:(e,t,n)=>{const{TAU:r}=n(31246),i=n(74806),s=n(82685);e.exports=(e,t)=>s(e,t,i(),r/4)},20947:e=>{e.exports=(e,t)=>{const n=t[0],r=t[1];let i=n*n+r*r;return i>0&&(i=1/Math.sqrt(i)),e[0]=n*i,e[1]=r*i,e}},82685:e=>{e.exports=(e,t,n,r)=>{const i=t[0]-n[0],s=t[1]-n[1],o=Math.cos(r),a=Math.sin(r);return e[0]=i*o-s*a+n[0],e[1]=i*a+s*o+n[1],e}},99234:e=>{e.exports=(e,t,n)=>(e[0]=t[0]*n,e[1]=t[1]*n,e)},70214:e=>{e.exports=(e,t,n)=>(e[0]=Math.round(t[0]/n)*n+0,e[1]=Math.round(t[1]/n)*n+0,e)},44430:e=>{e.exports=(e,t)=>{const n=t[0]-e[0],r=t[1]-e[1];return n*n+r*r}},17581:e=>{e.exports=e=>{const t=e[0],n=e[1];return t*t+n*n}},37954:e=>{e.exports=(e,t,n)=>(e[0]=t[0]-n[0],e[1]=t[1]-n[1],e)},72526:e=>{e.exports=e=>`[${e[0].toFixed(7)}, ${e[1].toFixed(7)}]`},57008:e=>{e.exports=(e,t,n)=>{const r=t[0],i=t[1];return e[0]=n[0]*r+n[4]*i+n[12],e[1]=n[1]*r+n[5]*i+n[13],e}},48275:e=>{e.exports=(e,t)=>(e[0]=Math.abs(t[0]),e[1]=Math.abs(t[1]),e[2]=Math.abs(t[2]),e)},76972:e=>{e.exports=(e,t,n)=>(e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e)},21468:(e,t,n)=>{const r=n(64152);e.exports=(e,t)=>{const n=e[0],i=e[1],s=e[2],o=t[0],a=t[1],l=t[2],c=Math.sqrt(n*n+i*i+s*s)*Math.sqrt(o*o+a*a+l*l),h=c&&r(e,t)/c;return Math.acos(Math.min(Math.max(h,-1),1))}},31714:(e,t,n)=>{const r=n(44399);e.exports=e=>{const t=r();return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}},8258:e=>{e.exports=(e,t)=>(e[0]=t[0],e[1]=t[1],e[2]=t[2],e)},44399:e=>{e.exports=()=>[0,0,0]},64315:e=>{e.exports=(e,t,n)=>{const r=t[0],i=t[1],s=t[2],o=n[0],a=n[1],l=n[2];return e[0]=i*l-s*a,e[1]=s*o-r*l,e[2]=r*a-i*o,e}},31316:e=>{e.exports=(e,t)=>{const n=t[0]-e[0],r=t[1]-e[1],i=t[2]-e[2];return Math.sqrt(n*n+r*r+i*i)}},66550:e=>{e.exports=(e,t,n)=>(e[0]=t[0]/n[0],e[1]=t[1]/n[1],e[2]=t[2]/n[2],e)},64152:e=>{e.exports=(e,t)=>e[0]*t[0]+e[1]*t[1]+e[2]*t[2]},44382:e=>{e.exports=(e,t)=>e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]},13591:e=>{e.exports=(e,t)=>(e[0]=t,e[1]=t,e[2]=t,e)},17621:(e,t,n)=>{const r=n(44399);e.exports=(e,t,n)=>{const i=r();return i[0]=e,i[1]=t,i[2]=n,i}},45923:e=>{e.exports=(e,t,n=0)=>(e[0]=t[0],e[1]=t[1],e[2]=n,e)},2215:(e,t,n)=>{e.exports={abs:n(48275),add:n(76972),angle:n(21468),clone:n(31714),copy:n(8258),create:n(44399),cross:n(64315),distance:n(31316),divide:n(66550),dot:n(64152),equals:n(44382),fromScalar:n(13591),fromValues:n(17621),fromVec2:n(45923),length:n(10743),lerp:n(74214),max:n(84813),min:n(33831),multiply:n(46803),negate:n(29889),normalize:n(70996),orthogonal:n(80280),rotateX:n(11450),rotateY:n(50153),rotateZ:n(74672),scale:n(11433),snap:n(8207),squaredDistance:n(41725),squaredLength:n(78550),subtract:n(88103),toString:n(83551),transform:n(4439)}},10743:e=>{e.exports=e=>{const t=e[0],n=e[1],r=e[2];return Math.sqrt(t*t+n*n+r*r)}},74214:e=>{e.exports=(e,t,n,r)=>(e[0]=t[0]+r*(n[0]-t[0]),e[1]=t[1]+r*(n[1]-t[1]),e[2]=t[2]+r*(n[2]-t[2]),e)},84813:e=>{e.exports=(e,t,n)=>(e[0]=Math.max(t[0],n[0]),e[1]=Math.max(t[1],n[1]),e[2]=Math.max(t[2],n[2]),e)},33831:e=>{e.exports=(e,t,n)=>(e[0]=Math.min(t[0],n[0]),e[1]=Math.min(t[1],n[1]),e[2]=Math.min(t[2],n[2]),e)},46803:e=>{e.exports=(e,t,n)=>(e[0]=t[0]*n[0],e[1]=t[1]*n[1],e[2]=t[2]*n[2],e)},29889:e=>{e.exports=(e,t)=>(e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e)},70996:e=>{e.exports=(e,t)=>{const n=t[0],r=t[1],i=t[2];let s=n*n+r*r+i*i;return s>0&&(s=1/Math.sqrt(s)),e[0]=n*s,e[1]=r*s,e[2]=i*s,e}},80280:(e,t,n)=>{const r=n(48275),i=n(44399),s=n(64315);e.exports=(e,t)=>{const n=r(i(),t),o=0+(n[0]<n[1]&&n[0]<n[2]),a=0+(n[1]<=n[0]&&n[1]<n[2]),l=0+(n[2]<=n[0]&&n[2]<=n[1]);return s(e,t,[o,a,l])}},11450:e=>{e.exports=(e,t,n,r)=>{const i=[],s=[];return i[0]=t[0]-n[0],i[1]=t[1]-n[1],i[2]=t[2]-n[2],s[0]=i[0],s[1]=i[1]*Math.cos(r)-i[2]*Math.sin(r),s[2]=i[1]*Math.sin(r)+i[2]*Math.cos(r),e[0]=s[0]+n[0],e[1]=s[1]+n[1],e[2]=s[2]+n[2],e}},50153:e=>{e.exports=(e,t,n,r)=>{const i=[],s=[];return i[0]=t[0]-n[0],i[1]=t[1]-n[1],i[2]=t[2]-n[2],s[0]=i[2]*Math.sin(r)+i[0]*Math.cos(r),s[1]=i[1],s[2]=i[2]*Math.cos(r)-i[0]*Math.sin(r),e[0]=s[0]+n[0],e[1]=s[1]+n[1],e[2]=s[2]+n[2],e}},74672:e=>{e.exports=(e,t,n,r)=>{const i=[],s=[];return i[0]=t[0]-n[0],i[1]=t[1]-n[1],s[0]=i[0]*Math.cos(r)-i[1]*Math.sin(r),s[1]=i[0]*Math.sin(r)+i[1]*Math.cos(r),e[0]=s[0]+n[0],e[1]=s[1]+n[1],e[2]=t[2],e}},11433:e=>{e.exports=(e,t,n)=>(e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e)},8207:e=>{e.exports=(e,t,n)=>(e[0]=Math.round(t[0]/n)*n+0,e[1]=Math.round(t[1]/n)*n+0,e[2]=Math.round(t[2]/n)*n+0,e)},41725:e=>{e.exports=(e,t)=>{const n=t[0]-e[0],r=t[1]-e[1],i=t[2]-e[2];return n*n+r*r+i*i}},78550:e=>{e.exports=e=>{const t=e[0],n=e[1],r=e[2];return t*t+n*n+r*r}},88103:e=>{e.exports=(e,t,n)=>(e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e)},83551:e=>{e.exports=e=>`[${e[0].toFixed(7)}, ${e[1].toFixed(7)}, ${e[2].toFixed(7)}]`},4439:e=>{e.exports=(e,t,n)=>{const r=t[0],i=t[1],s=t[2];let o=n[3]*r+n[7]*i+n[11]*s+n[15];return o=o||1,e[0]=(n[0]*r+n[4]*i+n[8]*s+n[12])/o,e[1]=(n[1]*r+n[5]*i+n[9]*s+n[13])/o,e[2]=(n[2]*r+n[6]*i+n[10]*s+n[14])/o,e}},39491:(e,t,n)=>{const r=n(21252);e.exports=e=>{const t=r();return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}},44393:e=>{e.exports=(e,t)=>(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e)},21252:e=>{e.exports=()=>[0,0,0,0]},5381:e=>{e.exports=(e,t)=>e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]},74293:e=>{e.exports=(e,t)=>e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]},99396:e=>{e.exports=(e,t)=>(e[0]=t,e[1]=t,e[2]=t,e[3]=t,e)},14210:(e,t,n)=>{const r=n(21252);e.exports=(e,t,n,i)=>{const s=r();return s[0]=e,s[1]=t,s[2]=n,s[3]=i,s}},78030:(e,t,n)=>{e.exports={clone:n(39491),copy:n(44393),create:n(21252),dot:n(5381),equals:n(74293),fromScalar:n(99396),fromValues:n(14210),toString:n(61240),transform:n(34738)}},61240:e=>{e.exports=e=>`(${e[0].toFixed(9)}, ${e[1].toFixed(9)}, ${e[2].toFixed(9)}, ${e[3].toFixed(9)})`},34738:e=>{e.exports=(e,t,n)=>{const[r,i,s,o]=t;return e[0]=n[0]*r+n[4]*i+n[8]*s+n[12]*o,e[1]=n[1]*r+n[5]*i+n[9]*s+n[13]*o,e[2]=n[2]*r+n[6]*i+n[10]*s+n[14]*o,e[3]=n[3]*r+n[7]*i+n[11]*s+n[15]*o,e}},17466:(e,t,n)=>{const{EPS:r}=n(31246);e.exports=(e,t)=>{let n=0;for(let r=0;r<t;r++)n+=e[1][r]-e[0][r];return r*n/t}},76797:(e,t,n)=>{e.exports={measureAggregateArea:n(28263),measureAggregateBoundingBox:n(64713),measureAggregateEpsilon:n(314),measureAggregateVolume:n(97096),measureArea:n(55500),measureBoundingBox:n(38912),measureBoundingSphere:n(26800),measureCenter:n(56260),measureCenterOfMass:n(20949),measureDimensions:n(17760),measureEpsilon:n(11307),measureVolume:n(80235)}},28263:(e,t,n)=>{const r=n(95983),i=n(55500);e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("measureAggregateArea: no geometries supplied");const t=i(e);return 1===e.length?t:t.reduce(((e,t)=>e+t),0)}},64713:(e,t,n)=>{const r=n(95983),i=n(33831),s=n(84813),o=n(38912);e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("measureAggregateBoundingBox: no geometries supplied");const t=o(e);if(1===e.length)return t;const n=[[Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE],[-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE]];return t.reduce(((e,t)=>[i(e[0],e[0],t[0]),s(e[1],e[1],t[1])]),n)}},314:(e,t,n)=>{const r=n(95983),i=n(64713),s=n(17466),{geom2:o,geom3:a,path2:l}=n(28900);e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("measureAggregateEpsilon: no geometries supplied");const t=i(e);let n=0;return n=e.reduce(((e,t)=>l.isA(t)||o.isA(t)?Math.max(e,2):a.isA(t)?Math.max(e,3):0),n),s(t,n)}},97096:(e,t,n)=>{const r=n(95983),i=n(80235);e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("measureAggregateVolume: no geometries supplied");const t=i(e);return 1===e.length?t:t.reduce(((e,t)=>e+t),0)}},55500:(e,t,n)=>{const r=n(95983),i=n(97297),s=n(98618),o=n(39824),a=n(9504),l=new WeakMap;e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("wrong number of arguments");const t=e.map((e=>o.isA(e)?0:i.isA(e)?(e=>{let t=l.get(e);return t||(t=i.toSides(e).reduce(((e,t)=>e+(t[0][0]*t[1][1]-t[0][1]*t[1][0])),0),t*=.5,l.set(e,t),t)})(e):s.isA(e)?(e=>{let t=l.get(e);return t||(t=s.toPolygons(e).reduce(((e,t)=>e+a.measureArea(t)),0),l.set(e,t),t)})(e):0));return 1===t.length?t[0]:t}},38912:(e,t,n)=>{const r=n(95983),i=n(19936),s=n(2215),o=n(97297),a=n(98618),l=n(39824),c=n(9504),h=new WeakMap;e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("wrong number of arguments");const t=e.map((e=>l.isA(e)?(e=>{let t=h.get(e);if(t)return t;const n=l.toPoints(e);let r;r=0===n.length?i.create():i.clone(n[0]);let s=i.clone(r);return n.forEach((e=>{i.min(r,r,e),i.max(s,s,e)})),r=[r[0],r[1],0],s=[s[0],s[1],0],t=[r,s],h.set(e,t),t})(e):o.isA(e)?(e=>{let t=h.get(e);if(t)return t;const n=o.toPoints(e);let r;r=0===n.length?i.create():i.clone(n[0]);let s=i.clone(r);return n.forEach((e=>{i.min(r,r,e),i.max(s,s,e)})),r=[r[0],r[1],0],s=[s[0],s[1],0],t=[r,s],h.set(e,t),t})(e):a.isA(e)?(e=>{let t=h.get(e);if(t)return t;const n=a.toPolygons(e);let r=s.create();if(n.length>0){const e=c.toPoints(n[0]);s.copy(r,e[0])}let i=s.clone(r);return n.forEach((e=>{c.toPoints(e).forEach((e=>{s.min(r,r,e),s.max(i,i,e)}))})),r=[r[0],r[1],r[2]],i=[i[0],i[1],i[2]],t=[r,i],h.set(e,t),t})(e):[[0,0,0],[0,0,0]]));return 1===t.length?t[0]:t}},26800:(e,t,n)=>{const r=n(95983),i=n(19936),s=n(2215),o=n(97297),a=n(98618),l=n(39824),c=n(9504),h=new WeakMap;e.exports=(...e)=>{const t=(e=r(e)).map((e=>l.isA(e)?(e=>{let t=h.get(e);if(void 0!==t)return t;const n=s.create();let r=0;const o=l.toPoints(e);if(o.length>0){let e=0;const t=s.create();o.forEach((r=>{s.add(n,n,s.fromVec2(t,r,0)),e++})),s.scale(n,n,1/e),o.forEach((e=>{r=Math.max(r,i.squaredDistance(n,e))})),r=Math.sqrt(r)}return t=[n,r],h.set(e,t),t})(e):o.isA(e)?(e=>{let t=h.get(e);if(void 0!==t)return t;const n=s.create();let r=0;const a=o.toSides(e);if(a.length>0){let e=0;const t=s.create();a.forEach((r=>{s.add(n,n,s.fromVec2(t,r[0],0)),e++})),s.scale(n,n,1/e),a.forEach((e=>{r=Math.max(r,i.squaredDistance(n,e[0]))})),r=Math.sqrt(r)}return t=[n,r],h.set(e,t),t})(e):a.isA(e)?(e=>{let t=h.get(e);if(void 0!==t)return t;const n=s.create();let r=0;const i=a.toPolygons(e);if(i.length>0){let e=0;i.forEach((t=>{c.toPoints(t).forEach((t=>{s.add(n,n,t),e++}))})),s.scale(n,n,1/e),i.forEach((e=>{c.toPoints(e).forEach((e=>{r=Math.max(r,s.squaredDistance(n,e))}))})),r=Math.sqrt(r)}return t=[n,r],h.set(e,t),t})(e):[[0,0,0],0]));return 1===t.length?t[0]:t}},56260:(e,t,n)=>{const r=n(95983),i=n(38912);e.exports=(...e)=>{const t=(e=r(e)).map((e=>{const t=i(e);return[t[0][0]+(t[1][0]-t[0][0])/2,t[0][1]+(t[1][1]-t[0][1])/2,t[0][2]+(t[1][2]-t[0][2])/2]}));return 1===t.length?t[0]:t}},20949:(e,t,n)=>{const r=n(95983),i=n(2215),s=n(97297),o=n(98618),a=new WeakMap;e.exports=(...e)=>{const t=(e=r(e)).map((e=>s.isA(e)?(e=>{let t=a.get(e);if(void 0!==t)return t;const n=s.toSides(e);let r=0,o=0,l=0;if(n.length>0){for(let e=0;e<n.length;e++){const t=n[e][0],i=n[e][1],s=t[0]*i[1]-t[1]*i[0];r+=s,o+=(t[0]+i[0])*s,l+=(t[1]+i[1])*s}r/=2;const e=1/(6*r);o*=e,l*=e}return t=i.fromValues(o,l,0),a.set(e,t),t})(e):o.isA(e)?(e=>{let t=a.get(e);if(void 0!==t)return t;t=i.create();const n=o.toPolygons(e);if(0===n.length)return t;let r=0;const s=i.create();return n.forEach((e=>{const n=e.vertices;for(let e=0;e<n.length-2;e++){i.cross(s,n[e+1],n[e+2]);const o=i.dot(n[0],s)/6;r+=o,i.add(s,n[0],n[e+1]),i.add(s,s,n[e+2]);const a=i.scale(s,s,1/4*o);i.add(t,t,a)}})),i.scale(t,t,1/r),a.set(e,t),t})(e):[0,0,0]));return 1===t.length?t[0]:t}},17760:(e,t,n)=>{const r=n(95983),i=n(38912);e.exports=(...e)=>{const t=(e=r(e)).map((e=>{const t=i(e);return[t[1][0]-t[0][0],t[1][1]-t[0][1],t[1][2]-t[0][2]]}));return 1===t.length?t[0]:t}},11307:(e,t,n)=>{const r=n(95983),{geom2:i,geom3:s,path2:o}=n(28900),a=n(17466),l=n(38912);e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("wrong number of arguments");const t=e.map((e=>o.isA(e)||i.isA(e)?(e=>a(l(e),2))(e):s.isA(e)?(e=>a(l(e),3))(e):0));return 1===t.length?t[0]:t}},80235:(e,t,n)=>{const r=n(95983),i=n(97297),s=n(98618),o=n(39824),a=n(9504),l=new WeakMap;e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("wrong number of arguments");const t=e.map((e=>o.isA(e)||i.isA(e)?0:s.isA(e)?(e=>{let t=l.get(e);return t||(t=s.toPolygons(e).reduce(((e,t)=>e+a.measureSignedVolume(t)),0),l.set(e,t),t)})(e):0));return 1===t.length?t[0]:t}},7698:(e,t,n)=>{const r=n(19936),i=n(97297);e.exports=(e,t)=>{const n=t.map((t=>((e,t)=>{if(t.vertices.length<4)return null;const n=[],i=t.vertices.filter(((e,t)=>e[2]>0&&(n.push(t),!0)));if(2!==i.length)throw new Error("Assertion failed: fromFakePolygon: not enough points found");const s=i.map((t=>{const n=Math.round(t[0]/e)*e+0,i=Math.round(t[1]/e)*e+0;return r.fromValues(n,i)}));if(r.equals(s[0],s[1]))return null;const o=n[1]-n[0];if(1!==o&&3!==o)throw new Error("Assertion failed: fromFakePolygon: unknown index ordering");return 1===o&&s.reverse(),s})(e,t))).filter((e=>null!==e));return i.create(n)}},81922:(e,t,n)=>{e.exports={intersect:n(53239),scission:n(13391),subtract:n(63884),union:n(57821)}},53239:(e,t,n)=>{const r=n(95983),i=n(79413),s=n(97297),o=n(98618),a=n(7601),l=n(5538);e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("wrong number of arguments");if(!i(e))throw new Error("only intersect of the types are supported");const t=e[0];return s.isA(t)?a(e):o.isA(t)?l(e):t}},7601:(e,t,n)=>{const r=n(95983),i=n(98618),s=n(11307),o=n(7698),a=n(24697),l=n(5538);e.exports=(...e)=>{const t=(e=r(e)).map((e=>a({z0:-1,z1:1},e))),n=l(t),c=s(n);return o(c,i.toPolygons(n))}},5538:(e,t,n)=>{const r=n(95983),i=n(51966),s=n(60114);e.exports=(...e)=>{let t=(e=r(e)).shift();return e.forEach((e=>{t=s(t,e)})),t=i(t),t}},60114:(e,t,n)=>{const r=n(98618),i=n(8976),{Tree:s}=n(15652);e.exports=(e,t)=>{if(!i(e,t))return r.create();const n=new s(r.toPolygons(e)),o=new s(r.toPolygons(t));n.invert(),o.clipTo(n),o.invert(),n.clipTo(o),o.clipTo(n),n.addPolygons(o.allPolygons()),n.invert();const a=n.allPolygons();return r.create(a)}},8976:(e,t,n)=>{const{EPS:r}=n(31246),i=n(38912);e.exports=(e,t)=>{if(0===e.polygons.length||0===t.polygons.length)return!1;const n=i(e),s=n[0],o=n[1],a=i(t),l=a[0],c=a[1];return!(l[0]-o[0]>r||s[0]-c[0]>r||l[1]-o[1]>r||s[1]-c[1]>r||l[2]-o[2]>r||s[2]-c[2]>r)}},13391:(e,t,n)=>{const r=n(95983),i=n(98618),s=n(98410);e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("wrong number of arguments");const t=e.map((e=>i.isA(e)?s(e):e));return 1===t.length?t[0]:t}},98410:(e,t,n)=>{const r=n(2215),i=n(11307),s=n(98618);e.exports=e=>{const t=i(e),n=s.toPolygons(e),o=n.length,a=new Map,l=r.create();n.forEach(((e,n)=>{e.vertices.forEach((e=>{((e,t,n)=>{const r=`${t}`,i=e.get(r);void 0===i?e.set(r,[n]):i.push(n)})(a,r.snap(l,e,t),n)}))}));const c=n.map((e=>{let n=[];return e.vertices.forEach((e=>{n=n.concat(((e,t)=>{const n=`${t}`;return e.get(n)})(a,r.snap(l,e,t)))})),{e:1,d:(i=n,i.sort(((e,t)=>e-t)).filter(((e,t,n)=>!t||e!==n[t-1])))};var i}));a.clear();let h=0;const u=c.length;for(let e=0;e<u;e++){const t=c[e];if(t.e>0){const n=new Array(o);n[e]=!0;do{h=0,n.forEach(((e,t)=>{const r=c[t];if(r.e>0){r.e=-1;for(let e=0;e<r.d.length;e++)n[r.d[e]]=!0;h++}}))}while(h>0);t.indexes=n}}const d=[];for(let e=0;e<u;e++)if(c[e].indexes){const t=[];c[e].indexes.forEach(((e,r)=>t.push(n[r]))),d.push(s.create(t))}return d}},63884:(e,t,n)=>{const r=n(95983),i=n(79413),s=n(97297),o=n(98618),a=n(30508),l=n(35731);e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("wrong number of arguments");if(!i(e))throw new Error("only subtract of the types are supported");const t=e[0];return s.isA(t)?a(e):o.isA(t)?l(e):t}},30508:(e,t,n)=>{const r=n(95983),i=n(98618),s=n(11307),o=n(7698),a=n(24697),l=n(35731);e.exports=(...e)=>{const t=(e=r(e)).map((e=>a({z0:-1,z1:1},e))),n=l(t),c=s(n);return o(c,i.toPolygons(n))}},35731:(e,t,n)=>{const r=n(95983),i=n(51966),s=n(68377);e.exports=(...e)=>{let t=(e=r(e)).shift();return e.forEach((e=>{t=s(t,e)})),t=i(t),t}},68377:(e,t,n)=>{const r=n(98618),i=n(8976),{Tree:s}=n(15652);e.exports=(e,t)=>{if(!i(e,t))return r.clone(e);const n=new s(r.toPolygons(e)),o=new s(r.toPolygons(t));n.invert(),n.clipTo(o),o.clipTo(n,!0),n.addPolygons(o.allPolygons()),n.invert();const a=n.allPolygons();return r.create(a)}},24697:(e,t,n)=>{const r=n(2215),i=n(97297),s=n(98618),o=n(9504);e.exports=(e,t)=>{const n=i.toSides(t).map((t=>((e,t,n)=>{const i=[r.fromVec2(r.create(),n[0],e),r.fromVec2(r.create(),n[1],e),r.fromVec2(r.create(),n[1],t),r.fromVec2(r.create(),n[0],t)];return o.create(i)})(e.z0,e.z1,t)));return s.create(n)}},33458:(e,t,n)=>{const r=n(2758),i=n(9504);class s{constructor(e){this.plane=null,this.front=null,this.back=null,this.polygontreenodes=[],this.parent=e}invert(){const e=[this];let t;for(let n=0;n<e.length;n++){t=e[n],t.plane&&(t.plane=r.flip(r.create(),t.plane)),t.front&&e.push(t.front),t.back&&e.push(t.back);const i=t.front;t.front=t.back,t.back=i}}clipPolygons(e,t){let n,r={node:this,polygontreenodes:e};const i=[];do{if(n=r.node,e=r.polygontreenodes,n.plane){const r=n.plane,s=[],o=[],a=t?s:o,l=e.length;for(let t=0;t<l;t++){const n=e[t];n.isRemoved()||n.splitByPlane(r,a,s,o,s)}n.front&&o.length>0&&i.push({node:n.front,polygontreenodes:o});const c=s.length;if(n.back&&c>0)i.push({node:n.back,polygontreenodes:s});else for(let e=0;e<c;e++)s[e].remove()}r=i.pop()}while(void 0!==r)}clipTo(e,t){let n=this;const r=[];do{n.polygontreenodes.length>0&&e.rootnode.clipPolygons(n.polygontreenodes,t),n.front&&r.push(n.front),n.back&&r.push(n.back),n=r.pop()}while(void 0!==n)}addPolygonTreeNodes(e){let t={node:this,polygontreenodes:e};const n=[];do{const e=t.node,r=t.polygontreenodes;if(0===r.length){t=n.pop();continue}if(!e.plane){let t=0;t=Math.floor(r.length/2);const n=r[t].getPolygon();e.plane=i.plane(n)}const o=[],a=[],l=r.length;for(let t=0;t<l;++t)r[t].splitByPlane(e.plane,e.polygontreenodes,a,o,a);o.length>0&&(e.front||(e.front=new s(e)),l===o.length&&0===a.length?e.front.polygontreenodes=o:n.push({node:e.front,polygontreenodes:o})),a.length>0&&(e.back||(e.back=new s(e)),l===a.length&&0===o.length?e.back.polygontreenodes=a:n.push({node:e.back,polygontreenodes:a})),t=n.pop()}while(void 0!==t)}}e.exports=s},38726:(e,t,n)=>{const{EPS:r}=n(31246),i=n(2215),s=n(9504),o=n(1363);class a{constructor(e,t){this.parent=e,this.children=[],this.polygon=t,this.removed=!1}addPolygons(e){if(!this.isRootNode())throw new Error("Assertion failed");const t=this;e.forEach((e=>{t.addChild(e)}))}remove(){if(!this.removed){this.removed=!0,this.polygon=null;const e=this.parent.children,t=e.indexOf(this);if(t<0)throw new Error("Assertion failed");e.splice(t,1),this.parent.recursivelyInvalidatePolygon()}}isRemoved(){return this.removed}isRootNode(){return!this.parent}invert(){if(!this.isRootNode())throw new Error("Assertion failed");this.invertSub()}getPolygon(){if(!this.polygon)throw new Error("Assertion failed");return this.polygon}getPolygons(e){let t=[this];const n=[t];let r,i,s,o;for(r=0;r<n.length;++r)for(t=n[r],i=0,s=t.length;i<s;i++)o=t[i],o.polygon?e.push(o.polygon):o.children.length>0&&n.push(o.children)}splitByPlane(e,t,n,r,i){if(this.children.length){const s=[this.children];let o,a,l,c,h;for(o=0;o<s.length;o++)for(h=s[o],a=0,l=h.length;a<l;a++)c=h[a],c.children.length>0?s.push(c.children):c._splitByPlane(e,t,n,r,i)}else this._splitByPlane(e,t,n,r,i)}_splitByPlane(e,t,n,a,l){const c=this.polygon;if(c){const h=s.measureBoundingSphere(c),u=h[3]+r,d=h,p=i.dot(e,d)-e[3];if(p>u)a.push(this);else if(p<-u)l.push(this);else{const r=o(e,c);switch(r.type){case 0:t.push(this);break;case 1:n.push(this);break;case 2:a.push(this);break;case 3:l.push(this);break;case 4:if(r.front){const e=this.addChild(r.front);a.push(e)}if(r.back){const e=this.addChild(r.back);l.push(e)}}}}}addChild(e){const t=new a(this,e);return this.children.push(t),t}invertSub(){let e=[this];const t=[e];let n,r,i,o;for(n=0;n<t.length;n++)for(e=t[n],r=0,i=e.length;r<i;r++)o=e[r],o.polygon&&(o.polygon=s.invert(o.polygon)),o.children.length>0&&t.push(o.children)}recursivelyInvalidatePolygon(){this.polygon=null,this.parent&&this.parent.recursivelyInvalidatePolygon()}clear(){let e=[this];const t=[e];for(let n=0;n<t.length;++n){e=t[n];const r=e.length;for(let n=0;n<r;n++){const r=e[n];r.polygon&&(r.polygon=null),r.parent&&(r.parent=null),r.children.length>0&&t.push(r.children),r.children=[]}}}toString(){let e="",t=[this];const n=[t];let r,i,s,o;for(r=0;r<n.length;++r){t=n[r];const a=" ".repeat(r);for(i=0,s=t.length;i<s;i++)o=t[i],e+=`${a}PolygonTreeNode (${o.isRootNode()}): ${o.children.length}`,o.polygon?e+=`\n ${a}polygon: ${o.polygon.vertices}\n`:e+="\n",o.children.length>0&&n.push(o.children)}return e}}e.exports=a},94682:(e,t,n)=>{const r=n(33458),i=n(38726);e.exports=class{constructor(e){this.polygonTree=new i,this.rootnode=new r(null),e&&this.addPolygons(e)}invert(){this.polygonTree.invert(),this.rootnode.invert()}clipTo(e,t=!1){this.rootnode.clipTo(e,t)}allPolygons(){const e=[];return this.polygonTree.getPolygons(e),e}addPolygons(e){const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=this.polygonTree.addChild(e[n]);this.rootnode.addPolygonTreeNodes(t)}clear(){this.polygonTree.clear()}toString(){return"Tree: "+this.polygonTree.toString("")}}},15652:(e,t,n)=>{e.exports={Tree:n(94682)}},9596:(e,t,n)=>{const r=n(2215);e.exports=(e,t,n)=>{const i=r.subtract(r.create(),n,t);let s=(e[3]-r.dot(e,t))/r.dot(e,i);return Number.isNaN(s)&&(s=0),s>1&&(s=1),s<0&&(s=0),r.scale(i,i,s),r.add(i,t,i),i}},1363:(e,t,n)=>{const{EPS:r}=n(31246),i=n(2758),s=n(2215),o=n(9504),a=n(9596);e.exports=(e,t)=>{const n={type:null,front:null,back:null},l=t.vertices,c=l.length,h=o.plane(t);if(i.equals(h,e))n.type=0;else{let t=!1,i=!1;const u=[],d=-r;for(let n=0;n<c;n++){const o=s.dot(e,l[n])-e[3],a=o<d;u.push(a),o>r&&(t=!0),o<d&&(i=!0)}if(t||i)if(i)if(t){n.type=4;const t=[],i=[];let d=u[0];for(let n=0;n<c;n++){const r=l[n];let s=n+1;s>=c&&(s=0);const o=u[s];if(d===o)d?i.push(r):t.push(r);else{const n=l[s],o=a(e,r,n);d?(i.push(r),i.push(o),t.push(o)):(t.push(r),t.push(o),i.push(o))}d=o}const p=r*r;if(i.length>=3){let e=i[i.length-1];for(let t=0;t<i.length;t++){const n=i[t];s.squaredDistance(n,e)<p&&(i.splice(t,1),t--),e=n}}if(t.length>=3){let e=t[t.length-1];for(let n=0;n<t.length;n++){const r=t[n];s.squaredDistance(r,e)<p&&(t.splice(n,1),n--),e=r}}t.length>=3&&(n.front=o.fromPointsAndPlane(t,h)),i.length>=3&&(n.back=o.fromPointsAndPlane(i,h))}else n.type=3;else n.type=2;else{const t=s.dot(e,h);n.type=t>=0?0:1}}return n}},57821:(e,t,n)=>{const r=n(95983),i=n(79413),s=n(97297),o=n(98618),a=n(82695),l=n(59472);e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("wrong number of arguments");if(!i(e))throw new Error("only unions of the same type are supported");const t=e[0];return s.isA(t)?a(e):o.isA(t)?l(e):t}},82695:(e,t,n)=>{const r=n(95983),i=n(98618),s=n(11307),o=n(7698),a=n(24697),l=n(59472);e.exports=(...e)=>{const t=(e=r(e)).map((e=>a({z0:-1,z1:1},e))),n=l(t),c=s(n);return o(c,i.toPolygons(n))}},59472:(e,t,n)=>{const r=n(95983),i=n(51966),s=n(97708);e.exports=(...e)=>{let t;for(e=r(e),t=1;t<e.length;t+=2)e.push(s(e[t-1],e[t]));let n=e[t-1];return n=i(n),n}},97708:(e,t,n)=>{const r=n(98618),i=n(8976),{Tree:s}=n(15652);e.exports=(e,t)=>{if(!i(e,t))return((e,t)=>{let n=r.toPolygons(e);return n=n.concat(r.toPolygons(t)),r.create(n)})(e,t);const n=new s(r.toPolygons(e)),o=new s(r.toPolygons(t));n.clipTo(o,!1),o.clipTo(n),o.invert(),o.clipTo(n),o.invert();const a=n.allPolygons().concat(o.allPolygons());return r.create(a)}},10709:(e,t,n)=>{const r=n(95983),i=n(97297),s=n(98618),o=n(39824),a=n(35503),l=n(88696),c=n(72626);e.exports=(e,...t)=>{if(0===(t=r(t)).length)throw new Error("wrong number of arguments");const n=t.map((t=>o.isA(t)?c(e,t):i.isA(t)?a(e,t):s.isA(t)?l(e,t):t));return 1===n.length?n[0]:n}},35503:(e,t,n)=>{const r=n(97297),i=n(72565);e.exports=(e,t)=>{const{delta:n,corners:s,segments:o}=Object.assign({},{delta:1,corners:"edge",segments:16},e);if("edge"!==s&&"chamfer"!==s&&"round"!==s)throw new Error('corners must be "edge", "chamfer", or "round"');const a=r.toOutlines(t).map((t=>i(e={delta:n,corners:s,closed:!0,segments:o},t))).reduce(((e,t)=>e.concat(r.toSides(r.fromPoints(t)))),[]);return r.create(a)}},88696:(e,t,n)=>{const r=n(98618),i=n(57821),s=n(3595);e.exports=(e,t)=>{const{delta:n,corners:o,segments:a}=Object.assign({},{delta:1,corners:"round",segments:12},e);if("round"!==o)throw new Error('corners must be "round" for 3D geometries');if(0===r.toPolygons(t).length)throw new Error("the given geometry cannot be empty");const l=s(e={delta:n,corners:o,segments:a},t);return i(t,l)}},72626:(e,t,n)=>{const r=n(44264),i=n(19936),s=n(97297),o=n(39824),a=n(72565);e.exports=(e,t)=>{e=Object.assign({},{delta:1,corners:"edge",segments:16},e);const{delta:n,corners:l,segments:c}=e;if(n<=0)throw new Error("the given delta must be positive for paths");if("edge"!==l&&"chamfer"!==l&&"round"!==l)throw new Error('corners must be "edge", "chamfer", or "round"');const h=t.isClosed,u=o.toPoints(t);if(0===u.length)throw new Error("the given geometry cannot be empty");const d={points:u,external:a({delta:n,corners:l,segments:c,closed:h},u),internal:a({delta:-n,corners:l,segments:c,closed:h},u)};return t.isClosed?(e=>{let{external:t,internal:n}=e;r(t)<0?t=t.reverse():n=n.reverse();const i=o.fromPoints({closed:!0},t),a=o.fromPoints({closed:!0},n),l=s.toSides(s.fromPoints(o.toPoints(i))),c=s.toSides(s.fromPoints(o.toPoints(a)));return l.push(...c),s.create(l)})(d):((e,t,n,r)=>{const{points:o,external:a,internal:l}=e,c=Math.floor(t/2),h=[],u=[];if("round"===n&&c>0){const e=Math.PI/c,t=o[o.length-1],n=i.angle(i.subtract(i.create(),a[a.length-1],t)),s=o[0],d=i.angle(i.subtract(i.create(),l[0],s));for(let o=1;o<c;o++){let a=n+e*o,l=i.fromAngleRadians(i.create(),a);i.scale(l,l,r),i.add(l,l,t),h.push(l),a=d+e*o,l=i.fromAngleRadians(i.create(),a),i.scale(l,l,r),i.add(l,l,s),u.push(l)}}const d=[];return d.push(...a,...h,...l.reverse(),...u),s.fromPoints(d)})(d,c,l,n)}},3595:(e,t,n)=>{const{EPS:r,TAU:i}=n(31246),s=n(15118),o=n(2215),a=n(94308),l=n(98618),c=n(9504),h=n(87753),u=n(51966),d=n(97708),p=n(52920),f=(e,t,n)=>{const r=t.toString();if(e.has(r))e.get(r)[1].push(n);else{const i=[t,[n]];e.set(r,i)}},m=(e,t,n)=>{const r=t[0].toString(),i=t[1].toString(),s=r<i?`${r},${i}`:`${i},${r}`;if(e.has(s))e.get(s)[1].push(n);else{const r=[t,[n]];e.set(s,r)}},g=(e,t)=>{e.findIndex((e=>e===t))<0&&e.push(t)};e.exports=(e,t)=>{const{delta:n,segments:v}=Object.assign({},{delta:1,segments:12},e);let x=l.create();const _=new Map,b=new Map,y=o.create(),E=o.create();return l.toPolygons(t).forEach(((e,t)=>{const r=o.scale(o.create(),c.plane(e),2*n),i=c.transform(s.fromTranslation(s.create(),o.scale(o.create(),r,-.5)),e),a=p(r,i);x=d(x,a);const l=e.vertices;for(let t=0;t<l.length;t++){f(_,l[t],c.plane(e));const n=(t+1)%l.length,r=[l[t],l[n]];m(b,r,c.plane(e))}})),b.forEach((e=>{const t=e[0],s=e[1],h=t[0],u=t[1],p=o.subtract(o.create(),u,h);o.normalize(p,p);const f=s[0],m=o.cross(o.create(),f,p);let _=[];for(let e=0;e<v;e++)g(_,e*i/v);for(let e=0,t=s.length;e<t;e++){const t=s[e],n=o.dot(m,t),r=o.dot(f,t);let a=Math.atan2(n,r);a<0&&(a+=i),g(_,a),a=Math.atan2(-n,-r),a<0&&(a+=i),g(_,a)}_=_.sort(a);const b=_.length;let S,M;const A=[],T=[],w=[];for(let e=-1;e<b;e++){const t=_[e<0?e+b:e],i=Math.sin(t),s=Math.cos(t);o.scale(y,f,s*n),o.scale(E,m,i*n),o.add(y,y,E);const a=o.add(o.create(),h,y),l=o.add(o.create(),u,y);let d=!1;if(e>=0&&o.distance(a,S)<r&&(d=!0),!d){if(e>=0){A.push(a),T.push(l);const e=[M,l,a,S],t=c.create(e);w.push(t)}S=a,M=l}}T.reverse(),w.push(c.create(A)),w.push(c.create(T));const C=l.create(w);x=d(x,C)})),_.forEach((e=>{const t=e[0],r=e[1],i=r[0];let s=null,a=0;for(let e=1;e<r.length;e++){const t=r[e],n=o.cross(y,i,t),l=o.length(n);l>.05&&l>a&&(a=l,s=t)}s||(s=o.orthogonal(y,i));const l=o.cross(y,i,s);o.normalize(l,l);const c=o.cross(E,l,i),u=h({center:[t[0],t[1],t[2]],radius:n,segments:v,axes:[i,l,c]});x=d(x,u)})),u(x)}},52920:(e,t,n)=>{const r=n(15118),i=n(2215),s=n(98618),o=n(9504);e.exports=(e,t)=>{i.dot(o.plane(t),e)>0&&(t=o.invert(t));const n=[t],a=o.transform(r.fromTranslation(r.create(),e),t),l=t.vertices.length;for(let e=0;e<l;e++){const r=e<l-1?e+1:0,i=o.create([t.vertices[e],a.vertices[e],a.vertices[r],t.vertices[r]]);n.push(i)}return n.push(o.invert(a)),s.create(n)}},80629:(e,t,n)=>{e.exports={expand:n(10709),offset:n(50922)}},50922:(e,t,n)=>{const r=n(95983),i=n(97297),s=n(39824),o=n(37733),a=n(83223);e.exports=(e,...t)=>{if(0===(t=r(t)).length)throw new Error("wrong number of arguments");const n=t.map((t=>s.isA(t)?a(e,t):i.isA(t)?o(e,t):t));return 1===n.length?n[0]:n}},72565:(e,t,n)=>{const{EPS:r,TAU:i}=n(31246),s=n(5764),o=n(50760),a=n(19936),l=n(44264);e.exports=(e,t)=>{let{delta:n,corners:c,closed:h,segments:u}=Object.assign({},{delta:1,corners:"edge",closed:!1,segments:16},e);if(Math.abs(n)<r)return t;let d=e.closed?l(t):1;0===d&&(d=1);const p=d>0&&n>=0||d<0&&n<0;n=Math.abs(n);let f=null,m=[];const g=[],v=a.create(),x=t.length;for(let e=0;e<x;e++){const r=(e+1)%x,i=t[e],o=t[r];p?a.subtract(v,i,o):a.subtract(v,o,i),a.normal(v,v),a.normalize(v,v),a.scale(v,v,n);const l=a.add(a.create(),i,v),c=a.add(a.create(),o,v),u=[l,c];if(null!=f&&(h||!h&&0!==r)){const e=s(f[0],f[1],u[0],u[1]);e?(m.pop(),u[0]=e):g.push({c:i,s0:f,s1:u})}f=[l,c],(0!==r||h)&&(m.push(u[0]),m.push(u[1]))}if(h&&null!=f){const e=m[0],n=m[1],r=s(f[0],f[1],e,n);if(r)m[0]=r,m.pop();else{const r=t[0],i=[e,n];g.push({c:r,s0:f,s1:i})}}if("edge"===c){const e=new Map;m.forEach(((t,n)=>e.set(t,n)));const t=o.create(),n=o.create();g.forEach((r=>{o.fromPoints(t,r.s0[0],r.s0[1]),o.fromPoints(n,r.s1[0],r.s1[1]);const i=o.intersectPointOfLines(t,n);if(Number.isFinite(i[0])&&Number.isFinite(i[1])){const t=r.s0[1],n=e.get(t);m[n]=i,m[(n+1)%m.length]=void 0}else{const t=r.s1[0],n=e.get(t);m[n]=void 0}})),m=m.filter((e=>void 0!==e))}if("round"===c){let e=Math.floor(u/4);const t=a.create();g.forEach((r=>{let s=a.angle(a.subtract(t,r.s1[0],r.c));if(s-=a.angle(a.subtract(t,r.s0[1],r.c)),p&&s<0&&(s+=Math.PI,s<0&&(s+=Math.PI)),!p&&s>0&&(s-=Math.PI,s>0&&(s-=Math.PI)),0!==s){e=Math.floor(u*(Math.abs(s)/i));const o=s/e,l=a.angle(a.subtract(t,r.s0[1],r.c)),c=[];for(let t=1;t<e;t++){const e=l+o*t,i=a.fromAngleRadians(a.create(),e);a.scale(i,i,n),a.add(i,i,r.c),c.push(i)}if(c.length>0){const e=r.s0[1];let t=m.findIndex((t=>a.equals(e,t)));t=(t+1)%m.length,m.splice(t,0,...c)}}else{const e=r.s1[0],t=m.findIndex((t=>a.equals(e,t)));m.splice(t,1)}}))}return m}},37733:(e,t,n)=>{const r=n(97297),i=n(35719),s=n(72565);e.exports=(e,t)=>{const{delta:n,corners:o,segments:a}=Object.assign({},{delta:1,corners:"edge",segments:0},e);if("edge"!==o&&"chamfer"!==o&&"round"!==o)throw new Error('corners must be "edge", "chamfer", or "round"');const l=r.toOutlines(t),c=l.map((t=>{const r=l.reduce(((e,n)=>e+i.arePointsInside(t,i.create(n))),0);return s(e={delta:r%2==0?n:-n,corners:o,closed:!0,segments:a},t)})).reduce(((e,t)=>e.concat(r.toSides(r.fromPoints(t)))),[]);return r.create(c)}},83223:(e,t,n)=>{const r=n(39824),i=n(72565);e.exports=(e,t)=>{const n={delta:1,corners:"edge",closed:t.isClosed,segments:16},{delta:s,corners:o,closed:a,segments:l}=Object.assign({},n,e);if("edge"!==o&&"chamfer"!==o&&"round"!==o)throw new Error('corners must be "edge", "chamfer", or "round"');const c=i(e={delta:s,corners:o,closed:a,segments:l},r.toPoints(t));return r.fromPoints({closed:a},c)}},36948:(e,t,n)=>{const{area:r}=n(83973),{toOutlines:i}=n(97297),{arePointsInside:s}=n(35719);e.exports=e=>{const t=i(e),n=[],o=[];t.forEach(((e,t)=>{const i=r(e);i<0?o.push(t):i>0&&n.push(t)}));const a=[],l=[];return n.forEach(((e,n)=>{const r=t[e];a[n]=[],o.forEach(((e,i)=>{const o=t[e];s([o[0]],{vertices:r})&&(a[n].push(e),l[i]||(l[i]=[]),l[i].push(n))}))})),o.forEach(((e,t)=>{if(l[t]&&l[t].length>1){const n=((e,t)=>{let n,r;return e.forEach(((e,i)=>{const s=t(e);(void 0===r||s<r)&&(n=i,r=s)})),n})(l[t],(e=>a[e].length));l[t].forEach(((t,r)=>{r!==n&&(a[t]=a[t].filter((t=>t!==e)))}))}})),a.map(((e,r)=>({solid:t[n[r]],holes:e.map((e=>t[e]))})))}},16549:(e,t,n)=>{const{filterPoints:r,linkedPolygon:i,locallyInside:s,splitPolygon:o}=n(24769),{area:a,pointInTriangle:l}=n(74366),c=(e,t)=>{const n=h(e,t);if(!n)return t;const i=o(n,e),s=r(n,n.next);return r(i,i.next),t===n?s:t},h=(e,t)=>{let n=t;const r=e.x,i=e.y;let o,a=-1/0;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){const e=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=r&&e>a){if(a=e,e===r){if(i===n.y)return n;if(i===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!o)return null;if(r===a)return o;const c=o,h=o.x,d=o.y;let p=1/0;n=o;do{if(r>=n.x&&n.x>=h&&r!==n.x&&l(i<d?r:a,i,h,d,i<d?a:r,i,n.x,n.y)){const t=Math.abs(i-n.y)/(r-n.x);s(n,e)&&(t<p||t===p&&(n.x>o.x||n.x===o.x&&u(o,n)))&&(o=n,p=t)}n=n.next}while(n!==c);return o},u=(e,t)=>a(e.prev,e,t.prev)<0&&a(t.next,e,e.next)<0,d=e=>{let t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n};e.exports=(e,t,n,s)=>{const o=[];for(let n=0,r=t.length;n<r;n++){const a=t[n]*s,l=n<r-1?t[n+1]*s:e.length,c=i(e,a,l,s,!1);c===c.next&&(c.steiner=!0),o.push(d(c))}o.sort(((e,t)=>e.x-t.x));for(let e=0;e<o.length;e++)n=c(o[e],n),n=r(n,n.next);return n}},38096:(e,t,n)=>{const r=n(16549),{removeNode:i,sortLinked:s}=n(95847),{cureLocalIntersections:o,filterPoints:a,isValidDiagonal:l,linkedPolygon:c,splitPolygon:h}=n(24769),{area:u,pointInTriangle:d}=n(74366),p=(e,t,n,r,s,l,c)=>{if(!e)return;!c&&l&&v(e,r,s,l);let h,u,d=e;for(;e.prev!==e.next;)if(h=e.prev,u=e.next,l?m(e,r,s,l):f(e))t.push(h.i/n),t.push(e.i/n),t.push(u.i/n),i(e),e=u.next,d=u.next;else if((e=u)===d){c?1===c?(e=o(a(e),t,n),p(e,t,n,r,s,l,2)):2===c&&g(e,t,n,r,s,l):p(a(e),t,n,r,s,l,1);break}},f=e=>{const t=e.prev,n=e,r=e.next;if(u(t,n,r)>=0)return!1;let i=e.next.next;for(;i!==e.prev;){if(d(t.x,t.y,n.x,n.y,r.x,r.y,i.x,i.y)&&u(i.prev,i,i.next)>=0)return!1;i=i.next}return!0},m=(e,t,n,r)=>{const i=e.prev,s=e,o=e.next;if(u(i,s,o)>=0)return!1;const a=i.x<s.x?i.x<o.x?i.x:o.x:s.x<o.x?s.x:o.x,l=i.y<s.y?i.y<o.y?i.y:o.y:s.y<o.y?s.y:o.y,c=i.x>s.x?i.x>o.x?i.x:o.x:s.x>o.x?s.x:o.x,h=i.y>s.y?i.y>o.y?i.y:o.y:s.y>o.y?s.y:o.y,p=x(a,l,t,n,r),f=x(c,h,t,n,r);let m=e.prevZ,g=e.nextZ;for(;m&&m.z>=p&&g&&g.z<=f;){if(m!==e.prev&&m!==e.next&&d(i.x,i.y,s.x,s.y,o.x,o.y,m.x,m.y)&&u(m.prev,m,m.next)>=0)return!1;if(m=m.prevZ,g!==e.prev&&g!==e.next&&d(i.x,i.y,s.x,s.y,o.x,o.y,g.x,g.y)&&u(g.prev,g,g.next)>=0)return!1;g=g.nextZ}for(;m&&m.z>=p;){if(m!==e.prev&&m!==e.next&&d(i.x,i.y,s.x,s.y,o.x,o.y,m.x,m.y)&&u(m.prev,m,m.next)>=0)return!1;m=m.prevZ}for(;g&&g.z<=f;){if(g!==e.prev&&g!==e.next&&d(i.x,i.y,s.x,s.y,o.x,o.y,g.x,g.y)&&u(g.prev,g,g.next)>=0)return!1;g=g.nextZ}return!0},g=(e,t,n,r,i,s)=>{let o=e;do{let e=o.next.next;for(;e!==o.prev;){if(o.i!==e.i&&l(o,e)){let l=h(o,e);return o=a(o,o.next),l=a(l,l.next),p(o,t,n,r,i,s),void p(l,t,n,r,i,s)}e=e.next}o=o.next}while(o!==e)},v=(e,t,n,r)=>{let i=e;do{null===i.z&&(i.z=x(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,s(i,(e=>e.z))},x=(e,t,n,r,i)=>(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1;e.exports=(e,t,n=2)=>{const i=t&&t.length,s=i?t[0]*n:e.length;let o=c(e,0,s,n,!0);const a=[];if(!o||o.next===o.prev)return a;let l,h,u,d,f;if(i&&(o=r(e,t,o,n)),e.length>80*n){l=u=e[0],h=d=e[1];for(let t=n;t<s;t+=n){const n=e[t],r=e[t+1];n<l&&(l=n),r<h&&(h=r),n>u&&(u=n),r>d&&(d=r)}f=Math.max(u-l,d-h),f=0!==f?1/f:0}return p(o,a,n,l,h,f),a}},95847:(e,t,n)=>{const r=n(36555);class i{constructor(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}}e.exports={Node:i,insertNode:(e,t,n,r)=>{const s=new i(e,t,n);return r?(s.next=r.next,s.prev=r,r.next.prev=s,r.next=s):(s.prev=s,s.next=s),s},removeNode:e=>{e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)},sortLinked:r}},36555:e=>{e.exports=(e,t)=>{let n,r,i,s,o,a=1;do{r=e,e=null;let l=null;for(o=0;r;){o++,i=r;let c=0;for(n=0;n<a&&(c++,i=i.nextZ,i);n++);let h=a;for(;c>0||h>0&&i;)0!==c&&(0===h||!i||t(r)<=t(i))?(s=r,r=r.nextZ,c--):(s=i,i=i.nextZ,h--),l?l.nextZ=s:e=s,s.prevZ=l,l=s;r=i}l.nextZ=null,a*=2}while(o>1);return e}},24769:(e,t,n)=>{const{Node:r,insertNode:i,removeNode:s}=n(95847),{area:o}=n(74366),a=(e,t)=>{if(!e)return e;t||(t=e);let n,r=e;do{if(n=!1,r.steiner||!u(r,r.next)&&0!==o(r.prev,r,r.next))r=r.next;else{if(s(r),r=t=r.prev,r===r.next)break;n=!0}}while(n||r!==t);return t},l=(e,t)=>o(e.prev,e,e.next)<0?o(e,t,e.next)>=0&&o(e,e.prev,t)>=0:o(e,t,e.prev)<0||o(e,e.next,t)<0,c=(e,t,n,r)=>{const i=Math.sign(o(e,t,n)),s=Math.sign(o(e,t,r)),a=Math.sign(o(n,r,e)),l=Math.sign(o(n,r,t));return i!==s&&a!==l||!(0!==i||!h(e,n,t))||!(0!==s||!h(e,r,t))||!(0!==a||!h(n,e,r))||!(0!==l||!h(n,t,r))},h=(e,t,n)=>t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y),u=(e,t)=>e.x===t.x&&e.y===t.y;e.exports={cureLocalIntersections:(e,t,n)=>{let r=e;do{const i=r.prev,o=r.next.next;!u(i,o)&&c(i,r,r.next,o)&&l(i,o)&&l(o,i)&&(t.push(i.i/n),t.push(r.i/n),t.push(o.i/n),s(r),s(r.next),r=e=o),r=r.next}while(r!==e);return a(r)},filterPoints:a,isValidDiagonal:(e,t)=>e.next.i!==t.i&&e.prev.i!==t.i&&!((e,t)=>{let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&c(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1})(e,t)&&(l(e,t)&&l(t,e)&&((e,t)=>{let n=e,r=!1;const i=(e.x+t.x)/2,s=(e.y+t.y)/2;do{n.y>s!=n.next.y>s&&n.next.y!==n.y&&i<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r})(e,t)&&(o(e.prev,e,t.prev)||o(e,t.prev,t))||u(e,t)&&o(e.prev,e,e.next)>0&&o(t.prev,t,t.next)>0),linkedPolygon:(e,t,n,r,o)=>{let a;if(o===((e,t,n,r)=>{let i=0;for(let s=t,o=n-r;s<n;s+=r)i+=(e[o]-e[s])*(e[s+1]+e[o+1]),o=s;return i})(e,t,n,r)>0)for(let s=t;s<n;s+=r)a=i(s,e[s],e[s+1],a);else for(let s=n-r;s>=t;s-=r)a=i(s,e[s],e[s+1],a);return a&&u(a,a.next)&&(s(a),a=a.next),a},locallyInside:l,splitPolygon:(e,t)=>{const n=new r(e.i,e.x,e.y),i=new r(t.i,t.x,t.y),s=e.next,o=t.prev;return e.next=t,t.prev=e,n.next=s,s.prev=n,i.next=n,n.prev=i,o.next=i,i.prev=o,i}}},22035:(e,t,n)=>{const r=n(97297),i=n(2758),s=n(19936),o=n(2215),a=n(90718),l=n(36948);e.exports=class{constructor(e){this.plane=a(e);const t=o.orthogonal(o.create(),this.plane),n=o.cross(o.create(),this.plane,t);this.v=o.normalize(n,n),this.u=o.cross(o.create(),this.v,this.plane),this.basisMap=new Map;const i=e.edges.map((e=>e.map((e=>this.to2D(e))))),s=r.create(i);this.roots=l(s)}to2D(e){const t=s.fromValues(o.dot(e,this.u),o.dot(e,this.v));return this.basisMap.set(t,e),t}to3D(e){const t=this.basisMap.get(e);if(t)return t;{console.log("Warning: point not in original slice");const t=o.scale(o.create(),this.u,e[0]),n=o.scale(o.create(),this.v,e[1]),r=o.scale(o.create(),i,i[3]),s=o.add(t,t,r);return o.add(n,n,s)}}}},74366:e=>{e.exports={area:(e,t,n)=>(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y),pointInTriangle:(e,t,n,r,i,s,o,a)=>(i-o)*(t-a)-(e-o)*(s-a)>=0&&(e-o)*(r-a)-(n-o)*(t-a)>=0&&(n-o)*(s-a)-(i-o)*(r-a)>=0}},34449:(e,t,n)=>{const r=n(15118),i=n(97297),s=n(98618),o=n(9504),a=n(33726),l=n(63313),c=n(61),h=(e,t,n)=>{let s=null;return i.isA(n)&&(s=a.fromSides(i.toSides(n))),o.isA(n)&&(s=a.fromPoints(o.toPoints(n))),0===e||1===e?a.transform(r.fromTranslation(r.create(),[0,0,e]),s):null};e.exports=(e,t)=>{const n={numberOfSlices:2,capStart:!0,capEnd:!0,close:!1,repair:!0,callback:h},{numberOfSlices:r,capStart:i,capEnd:u,close:d,repair:p,callback:f}=Object.assign({},n,e);if(r<2)throw new Error("numberOfSlices must be 2 or more");p&&(t=l(t));const m=r-1;let g=null,v=null,x=null,_=[];for(let e=0;e<r;e++){const n=f(e/m,e,t);if(n){if(!a.isA(n))throw new Error("the callback function must return slice objects");if(0===a.toEdges(n).length)throw new Error("the callback function must return slices with one or more edges");x&&(_=_.concat(c(x,n))),0===e&&(g=n),e===r-1&&(v=n),x=n}}if(u){const e=a.toPolygons(v);_=_.concat(e)}if(i){const e=a.toPolygons(g).map(o.invert);_=_.concat(e)}return i||u||d&&!a.equals(v,g)&&(_=_.concat(c(v,g))),s.create(_)}},25620:(e,t,n)=>{const{TAU:r}=n(31246),i=n(33726),s=n(15118),o=n(34449),a=n(97297);e.exports=(e,t)=>{const n={angle:r,startAngle:0,pitch:10,endOffset:0,segmentsPerRotation:32},{angle:l,endOffset:c,segmentsPerRotation:h,startAngle:u}=Object.assign({},n,e);let d;if(d=!e.pitch&&e.height?e.height/(l/r):e.pitch?e.pitch:n.pitch,h<3)throw new Error("The number of segments per rotation needs to be at least 3.");const p=a.toSides(t);if(0===p.length)throw new Error("the given geometry cannot be empty");const f=p.filter((e=>e[0][0]>=0));let m=i.fromSides(p);0===f.length&&(m=i.reverse(m));const g=Math.round(h/r*Math.abs(l)),v=g>=2?g:2,x=s.create();let _;return o({numberOfSlices:v+1,callback:(e,t,n)=>{const o=u+l/v*t,a=c/v*t,h=(o-u)/r*d;return s.multiply(x,s.fromTranslation(s.create(),[a,0,h*Math.sign(l)]),s.fromXRotation(s.create(),-r/4*Math.sign(l))),_=s.create(),s.multiply(_,s.fromZRotation(s.create(),o),x),i.transform(_,n)}},m)}},82639:(e,t,n)=>{const r=n(95983),i=n(97297),s=n(39824),o=n(21241),a=n(73996);e.exports=(e,...t)=>{const{height:n,twistAngle:l,twistSteps:c,repair:h}=Object.assign({},{height:1,twistAngle:0,twistSteps:1,repair:!0},e);if(0===(t=r(t)).length)throw new Error("wrong number of arguments");e={offset:[0,0,n],twistAngle:l,twistSteps:c,repair:h};const u=t.map((t=>s.isA(t)?a(e,t):i.isA(t)?o(e,t):t));return 1===u.length?u[0]:u}},21241:(e,t,n)=>{const r=n(15118),i=n(2215),s=n(97297),o=n(33726),a=n(34449);e.exports=(e,t)=>{let{offset:n,twistAngle:l,twistSteps:c,repair:h}=Object.assign({},{offset:[0,0,1],twistAngle:0,twistSteps:12,repair:!0},e);if(c<1)throw new Error("twistSteps must be 1 or more");0===l&&(c=1);const u=i.clone(n),d=s.toSides(t);if(0===d.length)throw new Error("the given geometry cannot be empty");const p=o.fromSides(d);u[2]<0&&o.reverse(p,p);const f=r.create();return a(e={numberOfSlices:c+1,capStart:!0,capEnd:!0,repair:h,callback:(e,t,n)=>{const s=t/c*l,a=i.scale(i.create(),u,t/c);return r.multiply(f,r.fromZRotation(f,s),r.fromTranslation(r.create(),a)),o.transform(f,n)}},p)}},73996:(e,t,n)=>{const r=n(97297),i=n(39824),s=n(21241);e.exports=(e,t)=>{if(!t.isClosed)throw new Error("extruded path must be closed");const n=i.toPoints(t),o=r.fromPoints(n);return s(e,o)}},38320:(e,t,n)=>{const r=n(95983),i=n(97297),s=n(39824),o=n(75485),a=n(24728);e.exports=(e,...t)=>{const{size:n,height:l}=Object.assign({},{size:1,height:1},e);if(0===(t=r(t)).length)throw new Error("wrong number of arguments");if(n<=0)throw new Error("size must be positive");if(l<=0)throw new Error("height must be positive");const c=t.map((t=>s.isA(t)?o(e,t):i.isA(t)?a(e,t):t));return 1===c.length?c[0]:c}},24728:(e,t,n)=>{const{area:r}=n(83973),i=n(97297),s=n(39824),o=n(10709),a=n(21241);e.exports=(e,t)=>{const{size:n,height:l}=Object.assign({},{size:1,height:1},e);e.delta=n,e.offset=[0,0,l];const c=i.toOutlines(t);if(0===c.length)throw new Error("the given geometry cannot be empty");const h=c.map((t=>(r(t)<0&&t.reverse(),o(e,s.fromPoints({closed:!0},t))))).reduce(((e,t)=>e.concat(i.toSides(t))),[]),u=i.create(h);return a(e,u)}},75485:(e,t,n)=>{const r=n(39824),i=n(10709),s=n(21241);e.exports=(e,t)=>{const{size:n,height:o}=Object.assign({},{size:1,height:1},e);if(e.delta=n,e.offset=[0,0,o],0===r.toPoints(t).length)throw new Error("the given geometry cannot be empty");const a=i(e,t);return s(e,a)}},32005:(e,t,n)=>{const{TAU:r}=n(31246),i=n(15118),{mirrorX:s}=n(86083),o=n(97297),a=n(33726),l=n(34449);e.exports=(e,t)=>{const n={segments:12,startAngle:0,angle:r,overflow:"cap"};let{segments:c,startAngle:h,angle:u,overflow:d}=Object.assign({},n,e);if(c<3)throw new Error("segments must be greater then 3");h=Math.abs(h)>r?h%r:h,u=Math.abs(u)>r?u%r:u;let p=h+u;if(p=Math.abs(p)>r?p%r:p,p<h){const e=h;h=p,p=e}let f=p-h;if(f<=0&&(f=r),Math.abs(f)<r){const e=r/c;c=Math.floor(Math.abs(f)/e),Math.abs(f)>c*e&&c++}let m=o.toSides(t);if(0===m.length)throw new Error("the given geometry cannot be empty");const g=m.filter((e=>e[0][0]<0)),v=m.filter((e=>e[0][0]>=0));g.length>0&&v.length>0&&"cap"===d&&(g.length>v.length?(m=m.map((e=>{let t=e[0],n=e[1];return t=[Math.min(t[0],0),t[1]],n=[Math.min(n[0],0),n[1]],[t,n]})),t=o.create(m),t=s(t)):v.length>=g.length&&(m=m.map((e=>{let t=e[0],n=e[1];return t=[Math.max(t[0],0),t[1]],n=[Math.max(n[0],0),n[1]],[t,n]})),t=o.create(m)));const x=f/c,_=Math.abs(f)<r,b=a.fromSides(o.toSides(t));a.reverse(b,b);const y=i.create();return l(e={numberOfSlices:c+1,capStart:_,capEnd:_,close:!_,callback:(e,t,n)=>{let s=x*t+h;return f===r&&t===c&&(s=h),i.multiply(y,i.fromZRotation(y,s),i.fromXRotation(i.create(),r/4)),a.transform(y,n)}},b)}},61:(e,t,n)=>{const{EPS:r}=n(31246),i=n(2215),s=n(9504),o=n(33726),a=(e,t)=>e===t?e:e<t?a(t,e):1===t?1:0===t?e:a(t,e%t),l=(e,t)=>{const n=e/t.length;if(1===n)return t;const r=i.fromValues(n,n,n),s=[];return t.forEach((e=>{const t=i.subtract(i.create(),e[1],e[0]);i.divide(t,t,r);let o=e[0];for(let e=1;e<=n;++e){const e=i.add(i.create(),o,t);s.push([o,e]),o=e}})),s},c=r*r/2*Math.sin(Math.PI/3);e.exports=(e,t)=>{let n=o.toEdges(e),r=o.toEdges(t);if(n.length!==r.length){const e=(i=n.length)*(h=r.length)/a(i,h);e!==n.length&&(n=l(e,n)),e!==r.length&&(r=l(e,r))}var i,h;const u=[];return n.forEach(((e,t)=>{const n=r[t],i=s.create([e[0],e[1],n[1]]),o=s.measureArea(i);Number.isFinite(o)&&o>c&&u.push(i);const a=s.create([e[0],n[1],n[0]]),l=s.measureArea(a);Number.isFinite(l)&&l>c&&u.push(a)})),u}},46779:(e,t,n)=>{e.exports={extrudeFromSlices:n(34449),extrudeLinear:n(82639),extrudeRectangular:n(38320),extrudeRotate:n(32005),extrudeHelical:n(25620),project:n(59566),slice:n(33726)}},59566:(e,t,n)=>{const r=n(95983),i=n(50456),s=n(2758),o=n(15118),a=n(97297),l=n(98618),c=n(9504),h=n(11307),u=n(82695);e.exports=(e,...t)=>{const{axis:n,origin:d}=Object.assign({},{axis:[0,0,1],origin:[0,0,0]},e);if(0===(t=r(t)).length)throw new Error("wrong number of arguments");e={axis:n,origin:d};const p=t.map((t=>l.isA(t)?((e,t)=>{const n=s.fromNormalAndPoint(s.create(),e.axis,e.origin);if(Number.isNaN(n[0])||Number.isNaN(n[1])||Number.isNaN(n[2])||Number.isNaN(n[3]))throw new Error("project: invalid axis or origin");const r=h(t),d=r*r*Math.sqrt(3)/4;if(0===r)return a.create();const p=l.toPolygons(t);let f=[];for(let e=0;e<p.length;e++){const t=p[e].vertices.map((e=>s.projectionOfPoint(n,e))),r=c.create(t),o=c.plane(r);i(n,o)&&(c.measureArea(r)<d||f.push(r))}if(!i(n,[0,0,1])){const e=o.fromVectorRotation(o.create(),n,[0,0,1]);f=f.map((t=>c.transform(e,t)))}f=f.sort(((e,t)=>c.measureArea(t)-c.measureArea(e)));const m=f.map((e=>a.fromPoints(e.vertices)));return u(m)})(e,t):t));return 1===p.length?p[0]:p}},90718:(e,t,n)=>{const r=n(2758),i=n(2215);e.exports=e=>{const t=e.edges;if(t.length<3)throw new Error("slices must have 3 or more edges to calculate a plane");const n=t.reduce(((e,t)=>i.add(i.create(),e,t[0])),i.create());let s;i.scale(n,n,1/t.length);let o=0;t.forEach((e=>{if(!i.equals(e[0],e[1])){const t=i.squaredDistance(n,e[0]);t>o&&(s=e,o=t)}}));const a=t.find((e=>i.equals(e[1],s[0])));return r.fromPoints(r.create(),a[0],s[0],s[1])}},98163:(e,t,n)=>{const r=n(11476),i=n(2215);e.exports=(...e)=>{let t,n;return 1===e.length?(t=r(),n=e[0]):(t=e[0],n=e[1]),t.edges=n.edges.map((e=>[i.clone(e[0]),i.clone(e[1])])),t}},11476:e=>{e.exports=e=>(e||(e=[]),{edges:e})},86405:(e,t,n)=>{const r=n(2215);e.exports=(e,t)=>{const n=e.edges,i=t.edges;return n.length===i.length&&n.reduce(((e,t,n)=>{const s=i[n],o=r.squaredDistance(t[0],s[0]);return e&&o<Number.EPSILON}),!0)}},23903:(e,t,n)=>{const r=n(2215),i=n(11476);e.exports=e=>{if(!Array.isArray(e))throw new Error("the given points must be an array");if(e.length<3)throw new Error("the given points must contain THREE or more points");const t=[];let n=e[e.length-1];return e.forEach((e=>{2===e.length&&t.push([r.fromVec2(r.create(),n),r.fromVec2(r.create(),e)]),3===e.length&&t.push([n,e]),n=e})),i(t)}},1538:(e,t,n)=>{const r=n(2215),i=n(11476);e.exports=e=>{if(!Array.isArray(e))throw new Error("the given sides must be an array");const t=[];return e.forEach((e=>{t.push([r.fromVec2(r.create(),e[0]),r.fromVec2(r.create(),e[1])])})),i(t)}},33726:(e,t,n)=>{e.exports={calculatePlane:n(90718),clone:n(98163),create:n(11476),equals:n(86405),fromPoints:n(23903),fromSides:n(1538),isA:n(87409),reverse:n(59344),toEdges:n(12719),toPolygons:n(49566),toString:n(82088),transform:n(92642)}},87409:e=>{e.exports=e=>!!(e&&"object"==typeof e&&"edges"in e&&Array.isArray(e.edges))},63313:(e,t,n)=>{const r=n(2215),i=n(11476);e.exports=e=>{if(!e.edges)return e;let t=e.edges;const n=new Map,s=new Map;t=t.filter((e=>!r.equals(e[0],e[1]))),t.forEach((e=>{const t=e[0].toString(),r=e[1].toString();n.set(t,e[0]),n.set(r,e[1]),s.set(t,(s.get(t)||0)+1),s.set(r,(s.get(r)||0)-1)}));const o=[],a=[];return s.forEach(((e,t)=>{e<0&&o.push(t),e>0&&a.push(t)})),o.forEach((e=>{const i=n.get(e);let s,o=1/0;a.forEach((e=>{const t=n.get(e),a=r.distance(i,t);a<o&&(o=a,s=t)})),console.warn(`slice.repair: repairing vertex gap ${i} to ${s} distance ${o}`),t=t.map((t=>t[0].toString()===e?[s,t[1]]:t[1].toString()===e?[t[0],s]:t))})),i(t)}},59344:(e,t,n)=>{const r=n(11476);e.exports=(...e)=>{let t,n;return 1===e.length?(t=r(),n=e[0]):(t=e[0],n=e[1]),t.edges=n.edges.map((e=>[e[1],e[0]])),t}},12719:e=>{e.exports=e=>e.edges},49566:(e,t,n)=>{const r=n(9504),i=n(38096),s=n(22035);e.exports=e=>{const t=new s(e),n=[];return t.roots.forEach((({solid:e,holes:s})=>{let o=e.length;const a=[];s.forEach(((e,t)=>{a.push(o),o+=e.length}));const l=[e,...s].flat(),c=l.flat(),h=e=>t.to3D(l[e]),u=i(c,a);for(let e=0;e<u.length;e+=3){const i=u.slice(e,e+3).map(h);n.push(r.fromPointsAndPlane(i,t.plane))}})),n}},82088:(e,t,n)=>{const r=n(2215);e.exports=e=>{return`[${t=e.edges,t.reduce(((e,t)=>e+`[${r.toString(t[0])}, ${r.toString(t[1])}], `),"")}]`;var t}},92642:(e,t,n)=>{const r=n(2215),i=n(11476);e.exports=(e,t)=>{const n=t.edges.map((t=>[r.transform(r.create(),t[0],e),r.transform(r.create(),t[1],e)]));return i(n)}},98318:(e,t,n)=>{const r=n(95983),i=n(79413),s=n(97297),o=n(98618),a=n(39824),l=n(12155),c=n(88142),h=n(48845);e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("wrong number of arguments");if(!i(e))throw new Error("only hulls of the same type are supported");const t=e[0];return a.isA(t)?l(e):s.isA(t)?c(e):o.isA(t)?h(e):t}},11081:(e,t,n)=>{const r=n(95983),i=n(57821),s=n(98318);e.exports=(...e)=>{if((e=r(e)).length<2)throw new Error("wrong number of arguments");const t=[];for(let n=1;n<e.length;n++)t.push(s(e[n-1],e[n]));return i(t)}},88142:(e,t,n)=>{const r=n(95983),i=n(97297),s=n(80491),o=n(84708);e.exports=(...e)=>{e=r(e);const t=o(e),n=s(t);return n.length<3?i.create():i.fromPoints(n)}},48845:(e,t,n)=>{const r=n(95983),i=n(98618),s=n(84708),o=n(81220);e.exports=(...e)=>{e=r(e);const t=s(e);return 0===t.length?i.create():i.create(o(t))}},12155:(e,t,n)=>{const r=n(95983),i=n(39824),s=n(80491),o=n(84708);e.exports=(...e)=>{e=r(e);const t=o(e),n=s(t);return i.fromPoints({closed:!0},n)}},80491:(e,t,n)=>{const r=n(19936);e.exports=e=>{let t=r.fromValues(1/0,1/0);e.forEach((e=>{(e[1]<t[1]||e[1]===t[1]&&e[0]<t[0])&&(t=e)}));const n=[];e.forEach((e=>{const i=(o=e[1]-t[1],a=e[0]-t[0],0===o&&0===a?-1/0:-a/o),s=r.squaredDistance(e,t);var o,a;n.push({point:e,angle:i,distSq:s})})),n.sort(((e,t)=>e.angle!==t.angle?e.angle-t.angle:e.distSq-t.distSq));const i=[];return n.forEach((e=>{let t=i.length;for(;t>1&&(n=i[t-2],r=i[t-1],s=e.point,(r[0]-n[0])*(s[1]-n[1])-(r[1]-n[1])*(s[0]-n[0])<=Number.EPSILON);)i.pop(),t=i.length;var n,r,s;i.push(e.point)})),i}},81220:(e,t,n)=>{const r=n(9504),i=n(98814);e.exports=e=>i(e,{skipTriangulation:!0}).map((t=>{const n=t.map((t=>e[t]));return r.create(n)}))},50869:(e,t,n)=>{e.exports={hull:n(98318),hullChain:n(11081),hullPoints2:n(80491),hullPoints3:n(81220)}},73385:(e,t,n)=>{const r=n(76972),i=n(8258),s=n(64315),o=n(64152),a=n(10743),l=n(70996),c=n(11433),h=n(88103),u=n(24600);class d{constructor(){this.normal=[],this.centroid=[],this.offset=0,this.outside=null,this.mark=0,this.edge=null,this.nVertices=0}getEdge(e){if("number"!=typeof e)throw Error("requires a number");let t=this.edge;for(;e>0;)t=t.next,e-=1;for(;e<0;)t=t.prev,e+=1;return t}computeNormal(){const e=this.edge,t=e.next;let n=t.next;const o=h([],t.head().point,e.head().point),l=[],u=[];for(this.nVertices=2,this.normal=[0,0,0];n!==e;)i(u,o),h(o,n.head().point,e.head().point),r(this.normal,this.normal,s(l,u,o)),n=n.next,this.nVertices+=1;this.area=a(this.normal),this.normal=c(this.normal,this.normal,1/this.area)}computeNormalMinArea(e){if(this.computeNormal(),this.area<e){let e,t=0,n=this.edge;do{const r=n.lengthSquared();r>t&&(e=n,t=r),n=n.next}while(n!==this.edge);const i=e.tail().point,s=e.head().point,a=h([],s,i),u=Math.sqrt(t);c(a,a,1/u);const d=o(this.normal,a);c(a,a,-d),r(this.normal,this.normal,a),l(this.normal,this.normal)}}computeCentroid(){this.centroid=[0,0,0];let e=this.edge;do{r(this.centroid,this.centroid,e.head().point),e=e.next}while(e!==this.edge);c(this.centroid,this.centroid,1/this.nVertices)}computeNormalAndCentroid(e){void 0!==e?this.computeNormalMinArea(e):this.computeNormal(),this.computeCentroid(),this.offset=o(this.normal,this.centroid)}distanceToPlane(e){return o(this.normal,e)-this.offset}connectHalfEdges(e,t){let n;if(e.opposite.face===t.opposite.face){const r=t.opposite.face;let i;e===this.edge&&(this.edge=t),3===r.nVertices?(i=t.opposite.prev.opposite,r.mark=2,n=r):(i=t.opposite.next,r.edge===i.prev&&(r.edge=i),i.prev=i.prev.prev,i.prev.next=i),t.prev=e.prev,t.prev.next=t,t.setOpposite(i),r.computeNormalAndCentroid()}else e.next=t,t.prev=e;return n}mergeAdjacentFaces(e,t){const n=e.opposite,r=n.face;t.push(r),r.mark=2;let i,s,o=e.prev,a=e.next,l=n.prev,c=n.next;for(;o.opposite.face===r;)o=o.prev,c=c.next;for(;a.opposite.face===r;)a=a.next,l=l.prev;for(i=c;i!==l.next;i=i.next)i.face=this;return this.edge=a,s=this.connectHalfEdges(l,a),s&&t.push(s),s=this.connectHalfEdges(o,c),s&&t.push(s),this.computeNormalAndCentroid(),t}collectIndices(){const e=[];let t=this.edge;do{e.push(t.head().index),t=t.next}while(t!==this.edge);return e}static createTriangle(e,t,n,r=0){const i=new d,s=new u(e,i),o=new u(t,i),a=new u(n,i);return s.next=a.prev=o,o.next=s.prev=a,a.next=o.prev=s,i.edge=s,i.computeNormalAndCentroid(r),i}}e.exports={VISIBLE:0,NON_CONVEX:1,DELETED:2,Face:d}},24600:(e,t,n)=>{const r=n(31316),i=n(41725);e.exports=class{constructor(e,t){this.vertex=e,this.face=t,this.next=null,this.prev=null,this.opposite=null}head(){return this.vertex}tail(){return this.prev?this.prev.vertex:null}length(){return this.tail()?r(this.tail().point,this.head().point):-1}lengthSquared(){return this.tail()?i(this.tail().point,this.head().point):-1}setOpposite(e){this.opposite=e,e.opposite=this}}},48378:(e,t,n)=>{const r=n(64152),i=n(971),s=n(77849),o=n(93942),a=n(73890),{Face:l,VISIBLE:c,NON_CONVEX:h,DELETED:u}=n(73385);e.exports=class{constructor(e){if(!Array.isArray(e))throw TypeError("input is not a valid array");if(e.length<4)throw Error("cannot build a simplex out of <4 points");this.tolerance=-1,this.nFaces=0,this.nPoints=e.length,this.faces=[],this.newFaces=[],this.claimed=new o,this.unclaimed=new o,this.vertices=[];for(let t=0;t<e.length;t+=1)this.vertices.push(new a(e[t],t));this.discardedFaces=[],this.vertexPointIndices=[]}addVertexToFace(e,t){e.face=t,t.outside?this.claimed.insertBefore(t.outside,e):this.claimed.add(e),t.outside=e}removeVertexFromFace(e,t){e===t.outside&&(e.next&&e.next.face===t?t.outside=e.next:t.outside=null),this.claimed.remove(e)}removeAllVerticesFromFace(e){if(e.outside){let t=e.outside;for(;t.next&&t.next.face===e;)t=t.next;return this.claimed.removeChain(e.outside,t),t.next=null,e.outside}}deleteFaceVertices(e,t){const n=this.removeAllVerticesFromFace(e);if(n)if(t){let e;for(let r=n;r;r=e)e=r.next,t.distanceToPlane(r.point)>this.tolerance?this.addVertexToFace(r,t):this.unclaimed.add(r)}else this.unclaimed.addAll(n)}resolveUnclaimedPoints(e){let t=this.unclaimed.first();for(let n=t;n;n=t){t=n.next;let r,i=this.tolerance;for(let t=0;t<e.length;t+=1){const s=e[t];if(s.mark===c){const e=s.distanceToPlane(n.point);if(e>i&&(i=e,r=s),i>1e3*this.tolerance)break}}r&&this.addVertexToFace(n,r)}}computeExtremes(){const e=[],t=[],n=[],r=[];let i,s;for(i=0;i<3;i+=1)n[i]=r[i]=this.vertices[0];for(i=0;i<3;i+=1)e[i]=t[i]=this.vertices[0].point[i];for(i=1;i<this.vertices.length;i+=1){const o=this.vertices[i],a=o.point;for(s=0;s<3;s+=1)a[s]<e[s]&&(e[s]=a[s],n[s]=o);for(s=0;s<3;s+=1)a[s]>t[s]&&(t[s]=a[s],r[s]=o)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(e[0]),Math.abs(t[0]))+Math.max(Math.abs(e[1]),Math.abs(t[1]))+Math.max(Math.abs(e[2]),Math.abs(t[2]))),[n,r]}createInitialSimplex(){const e=this.vertices,[t,n]=this.computeExtremes();let o,a,c,h,u=0,d=0;for(c=0;c<3;c+=1){const e=n[c].point[c]-t[c].point[c];e>u&&(u=e,d=c)}const p=t[d],f=n[d];for(u=0,c=0;c<this.vertices.length;c+=1){const e=this.vertices[c];if(e!==p&&e!==f){const t=i(e.point,p.point,f.point);t>u&&(u=t,o=e)}}const m=s([],p.point,f.point,o.point),g=r(p.point,m);for(u=-1,c=0;c<this.vertices.length;c+=1){const e=this.vertices[c];if(e!==p&&e!==f&&e!==o){const t=Math.abs(r(m,e.point)-g);t>u&&(u=t,a=e)}}const v=[];if(r(a.point,m)-g<0)for(v.push(l.createTriangle(p,f,o),l.createTriangle(a,f,p),l.createTriangle(a,o,f),l.createTriangle(a,p,o)),c=0;c<3;c+=1){const e=(c+1)%3;v[c+1].getEdge(2).setOpposite(v[0].getEdge(e)),v[c+1].getEdge(1).setOpposite(v[e+1].getEdge(0))}else for(v.push(l.createTriangle(p,o,f),l.createTriangle(a,p,f),l.createTriangle(a,f,o),l.createTriangle(a,o,p)),c=0;c<3;c+=1){const e=(c+1)%3;v[c+1].getEdge(2).setOpposite(v[0].getEdge((3-c)%3)),v[c+1].getEdge(0).setOpposite(v[e+1].getEdge(1))}for(c=0;c<4;c+=1)this.faces.push(v[c]);for(c=0;c<e.length;c+=1){const t=e[c];if(t!==p&&t!==f&&t!==o&&t!==a){let e;for(u=this.tolerance,h=0;h<4;h+=1){const n=v[h].distanceToPlane(t.point);n>u&&(u=n,e=v[h])}e&&this.addVertexToFace(t,e)}}}reindexFaceAndVertices(){const e=[];for(let t=0;t<this.faces.length;t+=1){const n=this.faces[t];n.mark===c&&e.push(n)}this.faces=e}collectFaces(e){const t=[];for(let n=0;n<this.faces.length;n+=1){if(this.faces[n].mark!==c)throw Error("attempt to include a destroyed face in the hull");const r=this.faces[n].collectIndices();if(e)t.push(r);else for(let e=0;e<r.length-2;e+=1)t.push([r[0],r[e+1],r[e+2]])}return t}nextVertexToAdd(){if(!this.claimed.isEmpty()){let e,t,n=0;const r=this.claimed.first().face;for(t=r.outside;t&&t.face===r;t=t.next){const i=r.distanceToPlane(t.point);i>n&&(n=i,e=t)}return e}}computeHorizon(e,t,n,r){let i;this.deleteFaceVertices(n),n.mark=u,i=t?t.next:t=n.getEdge(0);do{const t=i.opposite,n=t.face;n.mark===c&&(n.distanceToPlane(e)>this.tolerance?this.computeHorizon(e,t,n,r):r.push(i)),i=i.next}while(i!==t)}addAdjoiningFace(e,t){const n=l.createTriangle(e,t.tail(),t.head());return this.faces.push(n),n.getEdge(-1).setOpposite(t.opposite),n.getEdge(0)}addNewFaces(e,t){let n,r;this.newFaces=[];for(let i=0;i<t.length;i+=1){const s=t[i],o=this.addAdjoiningFace(e,s);n?o.next.setOpposite(r):n=o,this.newFaces.push(o.face),r=o}n.next.setOpposite(r)}oppositeFaceDistance(e){return e.face.distanceToPlane(e.opposite.face.centroid)}doAdjacentMerge(e,t){let n=e.edge,r=!0,i=0;do{if(i>=e.nVertices)throw Error("merge recursion limit exceeded");const s=n.opposite.face;let o=!1;if(2===t?(this.oppositeFaceDistance(n)>-this.tolerance||this.oppositeFaceDistance(n.opposite)>-this.tolerance)&&(o=!0):e.area>s.area?this.oppositeFaceDistance(n)>-this.tolerance?o=!0:this.oppositeFaceDistance(n.opposite)>-this.tolerance&&(r=!1):this.oppositeFaceDistance(n.opposite)>-this.tolerance?o=!0:this.oppositeFaceDistance(n)>-this.tolerance&&(r=!1),o){const t=e.mergeAdjacentFaces(n,[]);for(let n=0;n<t.length;n+=1)this.deleteFaceVertices(t[n],e);return!0}n=n.next,i+=1}while(n!==e.edge);return r||(e.mark=h),!1}addVertexToHull(e){const t=[];this.unclaimed.clear(),this.removeVertexFromFace(e,e.face),this.computeHorizon(e.point,null,e.face,t),this.addNewFaces(e,t);for(let e=0;e<this.newFaces.length;e+=1){const t=this.newFaces[e];if(t.mark===c)for(;this.doAdjacentMerge(t,1););}for(let e=0;e<this.newFaces.length;e+=1){const t=this.newFaces[e];if(t.mark===h)for(t.mark=c;this.doAdjacentMerge(t,2););}this.resolveUnclaimedPoints(this.newFaces)}build(){let e;for(this.createInitialSimplex();e=this.nextVertexToAdd();)this.addVertexToHull(e);this.reindexFaceAndVertices()}}},73890:e=>{e.exports=class{constructor(e,t){this.point=e,this.index=t,this.next=null,this.prev=null,this.face=null}}},93942:e=>{e.exports=class{constructor(){this.head=null,this.tail=null}clear(){this.head=this.tail=null}insertBefore(e,t){t.prev=e.prev,t.next=e,t.prev?t.prev.next=t:this.head=t,e.prev=t}insertAfter(e,t){t.prev=e,t.next=e.next,t.next?t.next.prev=t:this.tail=t,e.next=t}add(e){this.head?this.tail.next=e:this.head=e,e.prev=this.tail,e.next=null,this.tail=e}addAll(e){for(this.head?this.tail.next=e:this.head=e,e.prev=this.tail;e.next;)e=e.next;this.tail=e}remove(e){e.prev?e.prev.next=e.next:this.head=e.next,e.next?e.next.prev=e.prev:this.tail=e.prev}removeChain(e,t){e.prev?e.prev.next=t.next:this.head=t.next,t.next?t.next.prev=e.prev:this.tail=e.prev}first(){return this.head}isEmpty(){return!this.head}}},77849:(e,t,n)=>{const r=n(64315),i=n(70996),s=n(88103);e.exports=(e,t,n,o)=>{const a=[0,0,0];return s(e,t,n),s(a,n,o),r(e,e,a),i(e,e)}},98814:(e,t,n)=>{const r=n(48378);e.exports=(e,t={})=>{const n=new r(e);return n.build(),n.collectFaces(t.skipTriangulation)}},971:(e,t,n)=>{const r=n(64315),i=n(88103),s=n(78550);e.exports=(e,t,n)=>Math.sqrt(((e,t,n)=>{const o=[],a=[];i(o,n,t),i(a,e,t);const l=s(r([],a,o)),c=s(o);if(0===c)throw Error("a and b are the same point");return l/c})(e,t,n))},84708:(e,t,n)=>{const r=n(97297),i=n(98618),s=n(39824);e.exports=e=>{const t=new Set,n=[],o=e=>{const r=e.toString();t.has(r)||(n.push(e),t.add(r))};return e.forEach((e=>{r.isA(e)?r.toPoints(e).forEach(o):i.isA(e)?i.toPoints(e).forEach((e=>e.forEach(o))):s.isA(e)&&s.toPoints(e).forEach(o)})),n}},34729:(e,t,n)=>{const r=n(95983),i=n(11307),s=n(97297),o=n(98618),a=n(39824),l=n(61916),c=n(9812),h=n(72759),u=n(67394);e.exports=(e,...t)=>{if(0===(t=r(t)).length)throw new Error("wrong number of arguments");const n=t.map((t=>{if(a.isA(t))return((e,t)=>t)(0,t);if(s.isA(t))return((e,t)=>t)(0,t);if(o.isA(t))return((e,t)=>{const{snap:n,simplify:r,triangulate:s}=Object.assign({},{snap:!1,simplify:!1,triangulate:!1},e),a=i(t);let d=o.toPolygons(t);n&&(d=l(a,d)),r&&(d=c(a,d)),s&&(d=h(d),d=u(a,d));const p=Object.assign({},t);return p.polygons=d,p})(e,t);throw new Error("invalid geometry")}));return 1===n.length?n[0]:n}},42463:(e,t,n)=>{e.exports={generalize:n(34729),snap:n(79927),retessellate:n(51966)}},72759:(e,t,n)=>{const r=n(31246),i=n(2215),s=n(9504),o=e=>`${e}`,a=(e,t,n,r,i,s)=>{const a=o(r),c=o(i),h=`${a}/${c}`,u=`${c}/${a}`;if(e.has(u))return l(e,t,n,i,r,null),null;const d={vertex0:r,vertex1:i,polygonindex:s};return e.has(h)?e.get(h).push(d):e.set(h,[d]),t.has(a)?t.get(a).push(h):t.set(a,[h]),n.has(c)?n.get(c).push(h):n.set(c,[h]),h},l=(e,t,n,r,i,s)=>{const a=o(r),l=o(i),c=`${a}/${l}`;let h=-1;const u=e.get(c);for(let e=0;e<u.length;e++){const t=u[e];let n=o(t.vertex0);if(n===a&&(n=o(t.vertex1),n===l&&(null===s||t.polygonindex===s))){h=e;break}}u.splice(h,1),0===u.length&&e.delete(c),h=t.get(a).indexOf(c),t.get(a).splice(h,1),0===t.get(a).length&&t.delete(a),h=n.get(l).indexOf(c),n.get(l).splice(h,1),0===n.get(l).length&&n.delete(l)};e.exports=e=>{const t=new Map;for(let n=0;n<e.length;n++){const r=e[n],i=r.vertices.length;if(i>=3){let e=r.vertices[0],s=o(e);for(let a=0;a<i;a++){let l=a+1;l===i&&(l=0);const c=r.vertices[l],h=o(c),u=`${s}/${h}`,d=`${h}/${s}`;if(t.has(d)){const e=t.get(d);e.splice(-1,1),0===e.length&&t.delete(d)}else{const r={vertex0:e,vertex1:c,polygonindex:n};t.has(u)?t.get(u).push(r):t.set(u,[r])}e=c,s=h}}else console.warn("warning: invalid polygon found during insertTjunctions")}if(t.size>0){const n=new Map,c=new Map,h=new Map;for(const[e,r]of t)h.set(e,!0),r.forEach((t=>{const r=o(t.vertex0),i=o(t.vertex1);n.has(r)?n.get(r).push(e):n.set(r,[e]),c.has(i)?c.get(i).push(e):c.set(i,[e])}));const u=e.slice(0);for(;0!==t.size;){for(const e of t.keys())h.set(e,!0);let e=!1;for(;;){const d=Array.from(h.keys());if(0===d.length)break;const p=d[0];let f=!0;if(t.has(p)){const d=t.get(p)[0];for(let p=0;p<2;p++){const m=0===p?d.vertex0:d.vertex1,g=0===p?d.vertex1:d.vertex0,v=o(m),x=o(g);let _=[];0===p?c.has(v)&&(_=c.get(v)):n.has(v)&&(_=n.get(v));for(let d=0;d<_.length;d++){const v=_[d],b=t.get(v)[0],y=0===p?b.vertex0:b.vertex1,E=0===p?b.vertex1:b.vertex0,S=o(y);if(o(E),S===x){l(t,n,c,m,g,null),l(t,n,c,g,m,null),f=!1,p=2,e=!0;break}{const d=m,v=g,x=y,_=i.subtract(i.create(),x,d),E=i.dot(i.subtract(i.create(),v,d),_)/i.dot(_,_);if(E>0&&E<1){const m=i.scale(i.create(),_,E);if(i.add(m,m,d),i.squaredDistance(m,v)<r.EPS*r.EPS){const r=b.polygonindex,i=u[r],d=o(b.vertex1);let m=-1;for(let e=0;e<i.vertices.length;e++)if(o(i.vertices[e])===d){m=e;break}const v=i.vertices.slice(0);v.splice(m,0,g);const x=s.create(v);u[r]=x,l(t,n,c,b.vertex0,b.vertex1,r);const _=a(t,n,c,b.vertex0,g,r),y=a(t,n,c,g,b.vertex1,r);null!==_&&h.set(_,!0),null!==y&&h.set(y,!0),f=!1,p=2,e=!0;break}}}}}}f&&h.delete(p)}if(!e)break}e=u}return t.clear(),e}},9812:(e,t,n)=>{const r=n(50456),i=n(2215),s=n(9504),o=e=>{const t=s.toPoints(e),n=[];for(let e=0;e<t.length;e++){const r=(e+1)%t.length,i={v1:t[e],v2:t[r]};n.push(i)}for(let e=0;e<n.length;e++){const r=(e+1)%t.length;n[e].next=n[r],n[r].prev=n[e]}return n},a=(e,t)=>{const n=`${t.v1}:${t.v2}`;e.set(n,t)},l=(e,t)=>{const n=`${t.v1}:${t.v2}`;e.delete(n)},c=(e,t)=>{const n=`${t.v2}:${t.v1}`;return e.get(n)},h=(e,t,n)=>{let r=e.prev.v1,i=e.prev.v2,s=t.next.v2;const o=p(r,i,s,n);return r=t.prev.v1,i=t.prev.v2,s=e.next.v2,[o,p(r,i,s,n)]},u=i.create(),d=i.create(),p=(e,t,n,r)=>{const s=i.subtract(u,t,e),o=i.subtract(d,n,t);return i.cross(s,s,o),i.dot(s,r)};e.exports=(e,t)=>{const n=[];t.forEach((e=>{const t=n.find((t=>{return n=t[0],i=s.plane(e),Math.abs(n[3]-i[3])<15e-8&&r(n,i);var n,i}));t?t[1].push(e):n.push([s.plane(e),[e]])}));let i=[];return n.forEach((e=>{const t=(e=>{if(e.length<2)return e;const t=e[0].plane,n=e.slice(),r=new Map;for(;n.length>0;){const e=n.shift(),i=o(e);for(let e=0;e<i.length;e++){const n=i[e],s=c(r,n);if(s){const e=h(n,s,t);if(e[0]>=0&&e[1]>=0){const t=s.next,i=n.next;n.prev.next=s.next,n.next.prev=s.prev,s.prev.next=n.next,s.next.prev=n.prev,n.v1=null,n.v2=null,n.next=null,n.prev=null,l(r,s),s.v1=null,s.v2=null,s.next=null,s.prev=null;const o=(e,t,n)=>{const r={v1:n.v1,v2:t.v2,next:t.next,prev:n.prev};n.prev.next=r,t.next.prev=r,l(e,t),t.v1=null,t.v2=null,t.next=null,t.prev=null,l(e,n),n.v1=null,n.v2=null,n.next=null,n.prev=null};0===e[0]&&o(r,t,t.prev),0===e[1]&&o(r,i,i.prev)}}else n.next&&a(r,n)}}const i=[];return r.forEach((e=>{const t=(e=>{let t;const n=[];for(;e.next;){const t=e.next;n.push(e.v1),e.v1=null,e.v2=null,e.next=null,e.prev=null,e=t}return n.length>0&&(t=s.create(n)),t})(e);t&&i.push(t)})),r.clear(),i})(e[1]);i=i.concat(t)})),i}},64509:(e,t,n)=>{const{EPS:r}=n(31246),i=n(50760),s=n(19936),o=n(40282),a=n(19735),{insertSorted:l,fnNumberSort:c}=n(38149),h=n(9504);e.exports=e=>{if(e.length<2)return e;const t=[],n=e.length,u=h.plane(e[0]),d=new o(u),p=[],f=[],m=new Map,g=new Map,v=new Map,x=10/r;for(let t=0;t<n;t++){const n=e[t];let r=[],i=n.vertices.length,o=-1;if(i>0){let e,a;for(let l=0;l<i;l++){let i=d.to2D(n.vertices[l]);const c=Math.floor(i[1]*x);let h;v.has(c)?h=v.get(c):v.has(c+1)?h=v.get(c+1):v.has(c-1)?h=v.get(c-1):(h=i[1],v.set(c,i[1])),i=s.fromValues(i[0],h),r.push(i);const u=i[1];(0===l||u<e)&&(e=u,o=l),(0===l||u>a)&&(a=u);let p=g.get(u);p||(p={},g.set(u,p)),p[t]=!0}if(e>=a)r=[],i=0,o=-1;else{let n=m.get(e);n||(n=[],m.set(e,n)),n.push(t)}}r.reverse(),o=i-o-1,p.push(r),f.push(o)}const _=[];g.forEach(((e,t)=>_.push(t))),_.sort(c);let b=[],y=[];for(let e=0;e<_.length;e++){const n=[],o=_[e],c=g.get(o);for(let e=0;e<b.length;++e){const t=b[e],n=t.polygonindex;if(c[n]){const r=p[n],i=r.length;let s=t.leftvertexindex,a=t.rightvertexindex;for(;;){let e=s+1;if(e>=i&&(e=0),r[e][1]!==o)break;s=e}let l=a-1;if(l<0&&(l=i-1),r[l][1]===o&&(a=l),s!==t.leftvertexindex&&s===a)b.splice(e,1),--e;else{t.leftvertexindex=s,t.rightvertexindex=a,t.topleft=r[s],t.topright=r[a];let e=s+1;e>=i&&(e=0),t.bottomleft=r[e];let n=a-1;n<0&&(n=i-1),t.bottomright=r[n]}}}let v;if(e>=_.length-1)b=[],v=null;else{v=Number(_[e+1]);const t=.5*(o+v),n=m.get(o);for(const e in n){const r=n[e],i=p[r],s=i.length,c=f[r];let h=c;for(;;){let e=h+1;if(e>=s&&(e=0),i[e][1]!==o)break;if(e===c)break;h=e}let u=c;for(;;){let e=u-1;if(e<0&&(e=s-1),i[e][1]!==o)break;if(e===h)break;u=e}let d=h+1;d>=s&&(d=0);let m=u-1;m<0&&(m=s-1);const g={polygonindex:r,leftvertexindex:h,rightvertexindex:u,topleft:i[h],topright:i[u],bottomleft:i[d],bottomright:i[m]};l(b,g,((e,n)=>{const r=a(e.topleft,e.bottomleft,t),i=a(n.topleft,n.bottomleft,t);return r>i?1:r<i?-1:0}))}}for(const e in b){const t=b[e];let l=a(t.topleft,t.bottomleft,o);const c=s.fromValues(l,o);l=a(t.topright,t.bottomright,o);const h=s.fromValues(l,o);l=a(t.topleft,t.bottomleft,v);const u=s.fromValues(l,v);l=a(t.topright,t.bottomright,v);const d=s.fromValues(l,v),p={topleft:c,topright:h,bottomleft:u,bottomright:d,leftline:i.fromPoints(i.create(),c,u),rightline:i.fromPoints(i.create(),d,h)};if(n.length>0){const e=n[n.length-1],t=s.distance(p.topleft,e.topright),i=s.distance(p.bottomleft,e.bottomright);t<r&&i<r&&(p.topleft=e.topleft,p.leftline=e.leftline,p.bottomleft=e.bottomleft,n.splice(n.length-1,1))}n.push(p)}if(e>0){const e=new Set,o=new Set;for(let t=0;t<n.length;t++){const a=n[t];for(let t=0;t<y.length;t++)if(!o.has(t)){const n=y[t];if(s.distance(n.bottomleft,a.topleft)<r&&s.distance(n.bottomright,a.topright)<r){o.add(t);const s=i.direction(a.leftline),l=i.direction(n.leftline),c=s[0]-l[0],h=i.direction(a.rightline),u=i.direction(n.rightline),d=h[0]-u[0],p=Math.abs(c)<r,f=Math.abs(d)<r;(p||c>=0)&&(f||d>=0)&&(a.outpolygon=n.outpolygon,a.leftlinecontinues=p,a.rightlinecontinues=f,e.add(t));break}}}for(let n=0;n<y.length;n++)if(!e.has(n)){const e=y[n];e.outpolygon.rightpoints.push(e.bottomright),s.distance(e.bottomright,e.bottomleft)>r&&e.outpolygon.leftpoints.push(e.bottomleft),e.outpolygon.leftpoints.reverse();const i=e.outpolygon.rightpoints.concat(e.outpolygon.leftpoints).map((e=>d.to3D(e))),o=h.fromPointsAndPlane(i,u);o.vertices.length&&t.push(o)}}for(let e=0;e<n.length;e++){const t=n[e];t.outpolygon?(t.leftlinecontinues||t.outpolygon.leftpoints.push(t.topleft),t.rightlinecontinues||t.outpolygon.rightpoints.push(t.topright)):(t.outpolygon={leftpoints:[],rightpoints:[]},t.outpolygon.leftpoints.push(t.topleft),s.distance(t.topleft,t.topright)>r&&t.outpolygon.rightpoints.push(t.topright))}y=n}return t}},51966:(e,t,n)=>{const r=n(98618),i=n(9504),{NEPS:s}=n(31246),o=n(64509),a=(e,t)=>(n,r)=>n.plane[e]-r.plane[e]>t?1:r.plane[e]-n.plane[e]>t?-1:0;e.exports=e=>{if(e.isRetesselated)return e;const t=(e=>{let t=[e];const n=[];for(let e=3;e>=0;e--){const r=[],i=3===e?15e-9:s;t.forEach((t=>{t.sort(a(e,i));let s=0;for(let o=1;o<t.length;o++)t[o].plane[e]-t[s].plane[e]>i&&(o-s==1?n.push(t[s]):r.push(t.slice(s,o)),s=o);t.length-s==1?n.push(t[s]):r.push(t.slice(s))})),t=r}const r=[];return t.forEach((e=>{e[0]&&(r[e[0].index]=e)})),n.forEach((e=>{r[e.index]=e})),r})(r.toPolygons(e).map(((e,t)=>({vertices:e.vertices,plane:i.plane(e),index:t})))),n=[];t.forEach((e=>{if(Array.isArray(e)){const t=o(e);n.push(...t)}else n.push(e)}));const l=r.create(n);return l.isRetesselated=!0,l}},79927:(e,t,n)=>{const r=n(95983),i=n(19936),s=n(97297),o=n(98618),a=n(39824),l=n(11307),c=n(61916);e.exports=(...e)=>{if(0===(e=r(e)).length)throw new Error("wrong number of arguments");const t=e.map((e=>a.isA(e)?(e=>{const t=l(e),n=a.toPoints(e).map((e=>i.snap(i.create(),e,t)));return a.create(n)})(e):s.isA(e)?(e=>{const t=l(e);let n=s.toSides(e).map((e=>[i.snap(i.create(),e[0],t),i.snap(i.create(),e[1],t)]));return n=n.filter((e=>!i.equals(e[0],e[1]))),s.create(n)})(e):o.isA(e)?(e=>{const t=l(e),n=o.toPolygons(e),r=c(t,n);return o.create(r)})(e):e));return 1===t.length?t[0]:t}},61916:(e,t,n)=>{const r=n(2215),i=n(9504);e.exports=(e,t)=>{let n=t.map((t=>{const n=t.vertices.map((t=>r.snap(r.create(),t,e))),s=[];for(let e=0;e<n.length;e++){const t=(e+1)%n.length;r.equals(n[e],n[t])||s.push(n[e])}const o=i.create(s);return t.color&&(o.color=t.color),o}));const s=e*e*Math.sqrt(3)/4;return n=n.filter((e=>((e,t)=>{const n=Math.abs(i.measureArea(t));return Number.isFinite(n)&&n>e})(s,e))),n}},67394:(e,t,n)=>{const r=n(2215),i=n(9504);e.exports=(e,t)=>{const n=[];return t.forEach((t=>{((e,t,n)=>{const s=t.vertices.length;if(s>3){if(s>4){const o=[0,0,0];t.vertices.forEach((e=>r.add(o,o,e))),r.snap(o,r.divide(o,o,[s,s,s]),e);for(let e=0;e<s;e++){const r=i.create([o,t.vertices[e],t.vertices[(e+1)%s]]);t.color&&(r.color=t.color),n.push(r)}return}const o=i.create([t.vertices[0],t.vertices[1],t.vertices[2]]),a=i.create([t.vertices[0],t.vertices[2],t.vertices[3]]);return t.color&&(o.color=t.color,a.color=t.color),void n.push(o,a)}n.push(t)})(e,t,n)})),n}},59883:(e,t,n)=>{const r=n(95983),i=n(95478),s=n(64713),{translate:o}=n(37148),a=(e,t,n)=>{const r=s(e),i=[0,0,0];for(let e=0;e<3;e++)"center"===t[e]?i[e]=n[e]-(r[0][e]+r[1][e])/2:"max"===t[e]?i[e]=n[e]-r[1][e]:"min"===t[e]&&(i[e]=n[e]-r[0][e]);return o(i,e)};e.exports=(e,...t)=>{e=(e=>{if(!Array.isArray(e.modes)||e.modes.length>3)throw new Error("align(): modes must be an array of length <= 3");if(e.modes=i(e.modes,"none",3),3!==e.modes.filter((e=>["center","max","min","none"].includes(e))).length)throw new Error('align(): all modes must be one of "center", "max" or "min"');if(!Array.isArray(e.relativeTo)||e.relativeTo.length>3)throw new Error("align(): relativeTo must be an array of length <= 3");if(e.relativeTo=i(e.relativeTo,0,3),3!==e.relativeTo.filter((e=>Number.isFinite(e)||null==e)).length)throw new Error("align(): all relativeTo values must be a number, or null.");if("boolean"!=typeof e.grouped)throw new Error("align(): grouped must be a boolean value.");return e})(e=Object.assign({},{modes:["center","center","min"],relativeTo:[0,0,0],grouped:!1},e));let{modes:n,relativeTo:o,grouped:l}=e;if(0===(t=r(t)).length)throw new Error("align(): No geometries were provided to act upon");if(o.filter((e=>null==e)).length){const e=s(t);o=((e,t,n)=>{for(let r=0;r<3;r++)null==e[r]&&("center"===t[r]?e[r]=(n[0][r]+n[1][r])/2:"max"===t[r]?e[r]=n[1][r]:"min"===t[r]&&(e[r]=n[0][r]));return e})(o,n,e)}return 1===(t=l?a(t,n,o):t.map((e=>a(e,n,o)))).length?t[0]:t}},33077:(e,t,n)=>{const r=n(95983),i=n(97297),s=n(98618),o=n(39824),a=n(38912),{translate:l}=n(37148),c=(e,...t)=>{const{axes:n,relativeTo:c}=Object.assign({},{axes:[!0,!0,!0],relativeTo:[0,0,0]},e);if(0===(t=r(t)).length)throw new Error("wrong number of arguments");if(3!==c.length)throw new Error("relativeTo must be an array of length 3");e={axes:n,relativeTo:c};const h=t.map((t=>o.isA(t)||i.isA(t)||s.isA(t)?((e,t)=>{const{axes:n,relativeTo:r}=Object.assign({},{axes:[!0,!0,!0],relativeTo:[0,0,0]},e),i=a(t),s=[0,0,0];return n[0]&&(s[0]=r[0]-(i[0][0]+(i[1][0]-i[0][0])/2)),n[1]&&(s[1]=r[1]-(i[0][1]+(i[1][1]-i[0][1])/2)),n[2]&&(s[2]=r[2]-(i[0][2]+(i[1][2]-i[0][2])/2)),l(s,t)})(e,t):t));return 1===h.length?h[0]:h};e.exports={center:c,centerX:(...e)=>c({axes:[!0,!1,!1]},e),centerY:(...e)=>c({axes:[!1,!0,!1]},e),centerZ:(...e)=>c({axes:[!1,!1,!0]},e)}},79686:(e,t,n)=>{e.exports={align:n(59883),center:n(33077).center,centerX:n(33077).centerX,centerY:n(33077).centerY,centerZ:n(33077).centerZ,mirror:n(86083).mirror,mirrorX:n(86083).mirrorX,mirrorY:n(86083).mirrorY,mirrorZ:n(86083).mirrorZ,rotate:n(99971).rotate,rotateX:n(99971).rotateX,rotateY:n(99971).rotateY,rotateZ:n(99971).rotateZ,scale:n(97892).scale,scaleX:n(97892).scaleX,scaleY:n(97892).scaleY,scaleZ:n(97892).scaleZ,transform:n(19882),translate:n(37148).translate,translateX:n(37148).translateX,translateY:n(37148).translateY,translateZ:n(37148).translateZ}},86083:(e,t,n)=>{const r=n(95983),i=n(15118),s=n(2758),o=n(97297),a=n(98618),l=n(39824),c=(e,...t)=>{const{origin:n,normal:c}=Object.assign({},{origin:[0,0,0],normal:[0,0,1]},e);if(0===(t=r(t)).length)throw new Error("wrong number of arguments");const h=s.fromNormalAndPoint(s.create(),c,n);if(Number.isNaN(h[0]))throw new Error("the given origin and normal do not define a proper plane");const u=i.mirrorByPlane(i.create(),h),d=t.map((e=>l.isA(e)?l.transform(u,e):o.isA(e)?o.transform(u,e):a.isA(e)?a.transform(u,e):e));return 1===d.length?d[0]:d};e.exports={mirror:c,mirrorX:(...e)=>c({normal:[1,0,0]},e),mirrorY:(...e)=>c({normal:[0,1,0]},e),mirrorZ:(...e)=>c({normal:[0,0,1]},e)}},99971:(e,t,n)=>{const r=n(95983),i=n(15118),s=n(97297),o=n(98618),a=n(39824),l=(e,...t)=>{if(!Array.isArray(e))throw new Error("angles must be an array");if(0===(t=r(t)).length)throw new Error("wrong number of arguments");for(e=e.slice();e.length<3;)e.push(0);const n=e[2],l=e[1],c=e[0],h=i.fromTaitBryanRotation(i.create(),n,l,c),u=t.map((e=>a.isA(e)?a.transform(h,e):s.isA(e)?s.transform(h,e):o.isA(e)?o.transform(h,e):e));return 1===u.length?u[0]:u};e.exports={rotate:l,rotateX:(e,...t)=>l([e,0,0],t),rotateY:(e,...t)=>l([0,e,0],t),rotateZ:(e,...t)=>l([0,0,e],t)}},97892:(e,t,n)=>{const r=n(95983),i=n(15118),s=n(97297),o=n(98618),a=n(39824),l=(e,...t)=>{if(!Array.isArray(e))throw new Error("factors must be an array");if(0===(t=r(t)).length)throw new Error("wrong number of arguments");for(e=e.slice();e.length<3;)e.push(1);if(e[0]<=0||e[1]<=0||e[2]<=0)throw new Error("factors must be positive");const n=i.fromScaling(i.create(),e),l=t.map((e=>a.isA(e)?a.transform(n,e):s.isA(e)?s.transform(n,e):o.isA(e)?o.transform(n,e):e));return 1===l.length?l[0]:l};e.exports={scale:l,scaleX:(e,...t)=>l([e,1,1],t),scaleY:(e,...t)=>l([1,e,1],t),scaleZ:(e,...t)=>l([1,1,e],t)}},19882:(e,t,n)=>{const r=n(95983),i=n(97297),s=n(98618),o=n(39824);e.exports=(e,...t)=>{if(0===(t=r(t)).length)throw new Error("wrong number of arguments");const n=t.map((t=>o.isA(t)?o.transform(e,t):i.isA(t)?i.transform(e,t):s.isA(t)?s.transform(e,t):t));return 1===n.length?n[0]:n}},37148:(e,t,n)=>{const r=n(95983),i=n(15118),s=n(97297),o=n(98618),a=n(39824),l=(e,...t)=>{if(!Array.isArray(e))throw new Error("offset must be an array");if(0===(t=r(t)).length)throw new Error("wrong number of arguments");for(e=e.slice();e.length<3;)e.push(0);const n=i.fromTranslation(i.create(),e),l=t.map((e=>a.isA(e)?a.transform(n,e):s.isA(e)?s.transform(n,e):o.isA(e)?o.transform(n,e):e));return 1===l.length?l[0]:l};e.exports={translate:l,translateX:(e,...t)=>l([e,0,0],t),translateY:(e,...t)=>l([0,e,0],t),translateZ:(e,...t)=>l([0,0,e],t)}},65014:(e,t,n)=>{const{EPS:r,TAU:i}=n(31246),s=n(19936),o=n(39824),{isGT:a,isGTE:l,isNumberArray:c}=n(30664);e.exports=e=>{const t={center:[0,0],radius:1,startAngle:0,endAngle:i,makeTangent:!1,segments:32};let{center:n,radius:h,startAngle:u,endAngle:d,makeTangent:p,segments:f}=Object.assign({},t,e);if(!c(n,2))throw new Error("center must be an array of X and Y values");if(!a(h,0))throw new Error("radius must be greater than zero");if(!l(u,0))throw new Error("startAngle must be positive");if(!l(d,0))throw new Error("endAngle must be positive");if(!l(f,4))throw new Error("segments must be four or more");u%=i,d%=i;let m=i;u<d&&(m=d-u),u>d&&(m=d+(i-u));const g=Math.acos((h*h+h*h-r*r)/(2*h*h)),v=s.clone(n);let x;const _=[];if(m<g)x=s.fromAngleRadians(s.create(),u),s.scale(x,x,h),s.add(x,x,v),_.push(x);else{const e=Math.max(1,Math.floor(f*(m/i)))+1;let t=.5*e/m;t>.25&&(t=.25);const n=p?e+2:e;for(let r=0;r<=n;r++){let n=r;p&&(n=(r-1)*(e-2*t)/e+t,n<0&&(n=0),n>e&&(n=e));const i=u+n*(m/e);x=s.fromAngleRadians(s.create(),i),s.scale(x,x,h),s.add(x,x,v),_.push(x)}}return o.fromPoints({closed:!1},_)}},79040:(e,t,n)=>{const{TAU:r}=n(31246),i=n(86244),{isGTE:s}=n(30664);e.exports=e=>{const t={center:[0,0],radius:1,startAngle:0,endAngle:r,segments:32};let{center:n,radius:o,startAngle:a,endAngle:l,segments:c}=Object.assign({},t,e);if(!s(o,0))throw new Error("radius must be positive");return o=[o,o],i({center:n,radius:o,startAngle:a,endAngle:l,segments:c})}},30664:e=>{e.exports={isNumberArray:(e,t)=>!!(Array.isArray(e)&&e.length>=t)&&e.every((e=>Number.isFinite(e))),isGT:(e,t)=>Number.isFinite(e)&&e>t,isGTE:(e,t)=>Number.isFinite(e)&&e>=t}},18801:(e,t,n)=>{const r=n(26366),{isGTE:i}=n(30664);e.exports=e=>{let{center:t,size:n}=Object.assign({},{center:[0,0,0],size:2},e);if(!i(n,0))throw new Error("size must be positive");return n=[n,n,n],r({center:t,size:n})}},26366:(e,t,n)=>{const r=n(98618),i=n(9504),{isNumberArray:s}=n(30664);e.exports=e=>{const{center:t,size:n}=Object.assign({},{center:[0,0,0],size:[2,2,2]},e);if(!s(t,3))throw new Error("center must be an array of X, Y and Z values");if(!s(n,3))throw new Error("size must be an array of width, depth and height values");if(!n.every((e=>e>=0)))throw new Error("size values must be positive");return 0===n[0]||0===n[1]||0===n[2]?r.create():r.create([[[0,4,6,2],[-1,0,0]],[[1,3,7,5],[1,0,0]],[[0,1,5,4],[0,-1,0]],[[2,6,7,3],[0,1,0]],[[0,2,3,1],[0,0,-1]],[[4,5,7,6],[0,0,1]]].map((e=>{const r=e[0].map((e=>[t[0]+n[0]/2*(2*!!(1&e)-1),t[1]+n[1]/2*(2*!!(2&e)-1),t[2]+n[2]/2*(2*!!(4&e)-1)]));return i.create(r)})))}},29794:(e,t,n)=>{const r=n(98618),i=n(93628),{isGTE:s}=n(30664);e.exports=e=>{const{center:t,height:n,radius:o,segments:a}=Object.assign({},{center:[0,0,0],height:2,radius:1,segments:32},e);if(!s(o,0))throw new Error("radius must be positive");return 0===n||0===o?r.create():i({center:t,height:n,startRadius:[o,o],endRadius:[o,o],segments:a})}},93628:(e,t,n)=>{const{EPS:r,TAU:i}=n(31246),s=n(2215),o=n(98618),a=n(9504),{sin:l,cos:c}=n(53978),{isGT:h,isGTE:u,isNumberArray:d}=n(30664);e.exports=e=>{const t={center:[0,0,0],height:2,startRadius:[1,1],startAngle:0,endRadius:[1,1],endAngle:i,segments:32};let{center:n,height:p,startRadius:f,startAngle:m,endRadius:g,endAngle:v,segments:x}=Object.assign({},t,e);if(!d(n,3))throw new Error("center must be an array of X, Y and Z values");if(!h(p,0))throw new Error("height must be greater then zero");if(!d(f,2))throw new Error("startRadius must be an array of X and Y values");if(!f.every((e=>e>=0)))throw new Error("startRadius values must be positive");if(!d(g,2))throw new Error("endRadius must be an array of X and Y values");if(!g.every((e=>e>=0)))throw new Error("endRadius values must be positive");if(g.every((e=>0===e))&&f.every((e=>0===e)))throw new Error("at least one radius must be positive");if(!u(m,0))throw new Error("startAngle must be positive");if(!u(v,0))throw new Error("endAngle must be positive");if(!u(x,4))throw new Error("segments must be four or more");m%=i,v%=i;let _=i;m<v&&(_=v-m),m>v&&(_=v+(i-m));const b=Math.min(f[0],f[1],g[0],g[1]),y=Math.acos((b*b+b*b-r*r)/(2*b*b));if(_<y)throw new Error("startAngle and endAngle do not define a significant rotation");const E=Math.floor(x*(_/i)),S=s.fromValues(0,0,-p/2),M=s.fromValues(0,0,p/2),A=s.subtract(s.create(),M,S),T=s.fromValues(1,0,0),w=s.fromValues(0,1,0),C=s.create(),R=s.create(),P=s.create(),D=(e,t,n)=>{const r=t*_+m;return s.scale(C,T,n[0]*c(r)),s.scale(R,w,n[1]*l(r)),s.add(C,C,R),s.scale(P,A,e),s.add(P,P,S),s.add(s.create(),C,P)},L=(...e)=>{const t=e.map((e=>s.add(s.create(),e,n)));return a.create(t)},I=[];for(let e=0;e<E;e++){const t=e/E;let n=(e+1)/E;_===i&&e===E-1&&(n=0),g[0]===f[0]&&g[1]===f[1]?(I.push(L(S,D(0,n,g),D(0,t,g))),I.push(L(D(0,n,g),D(1,n,g),D(1,t,g),D(0,t,g))),I.push(L(M,D(1,t,g),D(1,n,g)))):(f[0]>0&&f[1]>0&&I.push(L(S,D(0,n,f),D(0,t,f))),(f[0]>0||f[1]>0)&&I.push(L(D(0,t,f),D(0,n,f),D(1,t,g))),g[0]>0&&g[1]>0&&I.push(L(M,D(1,t,g),D(1,n,g))),(g[0]>0||g[1]>0)&&I.push(L(D(1,t,g),D(0,n,f),D(1,n,g))))}return _<i&&(I.push(L(S,D(0,0,f),M)),I.push(L(D(0,0,f),D(1,0,g),M)),I.push(L(S,M,D(0,1,f))),I.push(L(D(0,1,f),M,D(1,1,g)))),o.create(I)}},86244:(e,t,n)=>{const{EPS:r,TAU:i}=n(31246),s=n(19936),o=n(97297),{sin:a,cos:l}=n(53978),{isGTE:c,isNumberArray:h}=n(30664);e.exports=e=>{const t={center:[0,0],radius:[1,1],startAngle:0,endAngle:i,segments:32};let{center:n,radius:u,startAngle:d,endAngle:p,segments:f}=Object.assign({},t,e);if(!h(n,2))throw new Error("center must be an array of X and Y values");if(!h(u,2))throw new Error("radius must be an array of X and Y values");if(!u.every((e=>e>=0)))throw new Error("radius values must be positive");if(!c(d,0))throw new Error("startAngle must be positive");if(!c(p,0))throw new Error("endAngle must be positive");if(!c(f,3))throw new Error("segments must be three or more");if(0===u[0]||0===u[1])return o.create();d%=i,p%=i;let m=i;d<p&&(m=p-d),d>p&&(m=p+(i-d));const g=Math.min(u[0],u[1]);if(m<Math.acos((g*g+g*g-r*r)/(2*g*g)))throw new Error("startAngle and endAngle do not define a significant rotation");f=Math.floor(f*(m/i));const v=s.clone(n),x=m/f,_=[];f=m<i?f+1:f;for(let e=0;e<f;e++){const t=x*e+d,n=s.fromValues(u[0]*l(t),u[1]*a(t));s.add(n,v,n),_.push(n)}return m<i&&_.push(v),o.fromPoints(_)}},27527:(e,t,n)=>{const{TAU:r}=n(31246),i=n(2215),s=n(98618),o=n(9504),{sin:a,cos:l}=n(53978),{isGTE:c,isNumberArray:h}=n(30664);e.exports=e=>{const{center:t,radius:n,segments:u,axes:d}=Object.assign({},{center:[0,0,0],radius:[1,1,1],segments:32,axes:[[1,0,0],[0,-1,0],[0,0,1]]},e);if(!h(t,3))throw new Error("center must be an array of X, Y and Z values");if(!h(n,3))throw new Error("radius must be an array of X, Y and Z values");if(!n.every((e=>e>=0)))throw new Error("radius values must be positive");if(!c(u,4))throw new Error("segments must be four or more");if(0===n[0]||0===n[1]||0===n[2])return s.create();const p=i.scale(i.create(),i.normalize(i.create(),d[0]),n[0]),f=i.scale(i.create(),i.normalize(i.create(),d[1]),n[1]),m=i.scale(i.create(),i.normalize(i.create(),d[2]),n[2]),g=Math.round(u/4);let v;const x=[],_=i.create(),b=i.create();for(let e=0;e<=u;e++){const n=r*e/u,s=i.add(i.create(),i.scale(_,p,l(n)),i.scale(b,f,a(n)));if(e>0){let e,n;for(let c=0;c<=g;c++){const h=r/4*c/g,u=l(h),d=a(h);if(c>0){let r,a=[];r=i.subtract(i.create(),i.scale(_,v,e),i.scale(b,m,n)),a.push(i.add(r,r,t)),r=i.subtract(i.create(),i.scale(_,s,e),i.scale(b,m,n)),a.push(i.add(r,r,t)),c<g&&(r=i.subtract(i.create(),i.scale(_,s,u),i.scale(b,m,d)),a.push(i.add(r,r,t))),r=i.subtract(i.create(),i.scale(_,v,u),i.scale(b,m,d)),a.push(i.add(r,r,t)),x.push(o.create(a)),a=[],r=i.add(i.create(),i.scale(_,v,e),i.scale(b,m,n)),a.push(i.add(i.create(),t,r)),r=i.add(r,i.scale(_,s,e),i.scale(b,m,n)),a.push(i.add(i.create(),t,r)),c<g&&(r=i.add(r,i.scale(_,s,u),i.scale(b,m,d)),a.push(i.add(i.create(),t,r))),r=i.add(r,i.scale(_,v,u),i.scale(b,m,d)),a.push(i.add(i.create(),t,r)),a.reverse(),x.push(o.create(a))}e=u,n=d}}v=s}return s.create(x)}},15594:(e,t,n)=>{const r=n(15118),i=n(2215),s=n(98618),o=n(15202),{isGTE:a}=n(30664);e.exports=e=>{let{radius:t,frequency:n}=Object.assign({},{radius:1,frequency:6},e);if(!a(t,0))throw new Error("radius must be positive");if(!a(n,6))throw new Error("frequency must be six or more");if(0===t)return s.create();n=Math.floor(n/6);const l=[[.850651,0,-.525731],[.850651,-0,.525731],[-.850651,-0,.525731],[-.850651,0,-.525731],[0,-.525731,.850651],[0,.525731,.850651],[0,.525731,-.850651],[0,-.525731,-.850651],[-.525731,-.850651,-0],[.525731,-.850651,-0],[.525731,.850651,0],[-.525731,.850651,0]],c=[[0,9,1],[1,10,0],[6,7,0],[10,6,0],[7,9,0],[5,1,4],[4,1,9],[5,10,1],[2,8,3],[3,11,2],[2,5,4],[4,8,2],[2,11,5],[3,7,6],[6,11,3],[8,7,3],[9,8,4],[11,10,5],[10,11,6],[8,9,7]],h=(e,t,n)=>{const r=e[0],s=e[1],o=e[2];let a=n;const l=[],c=[];for(let e=0;e<t;e++)for(let n=0;n<t-e;n++){const h=e/t,d=(e+1)/t,p=n/(t-e),f=(n+1)/(t-e),m=t-e-1?n/(t-e-1):1,g=[];g[0]=u(u(r,s,p),o,h),g[1]=u(u(r,s,f),o,h),g[2]=u(u(r,s,m),o,d);for(let e=0;e<3;e++){const t=i.length(g[e]);for(let n=0;n<3;n++)g[e][n]/=t}if(l.push(g[0],g[1],g[2]),c.push([a,a+1,a+2]),a+=3,n<t-e-1){const p=t-e-1?(n+1)/(t-e-1):1;g[0]=u(u(r,s,f),o,h),g[1]=u(u(r,s,p),o,d),g[2]=u(u(r,s,m),o,d);for(let e=0;e<3;e++){const t=i.length(g[e]);for(let n=0;n<3;n++)g[e][n]/=t}l.push(g[0],g[1],g[2]),c.push([a,a+1,a+2]),a+=3}}return{points:l,triangles:c,offset:a}},u=(e,t,n)=>{const r=1-n,i=[];for(let s=0;s<3;s++)i[s]=e[s]*r+t[s]*n;return i};let d=[],p=[],f=0;for(let e=0;e<c.length;e++){const t=h([l[c[e][0]],l[c[e][1]],l[c[e][2]]],n,f);d=d.concat(t.points),p=p.concat(t.triangles),f=t.offset}let m=o({points:d,faces:p,orientation:"inward"});return 1!==t&&(m=s.transform(r.fromScaling(r.create(),[t,t,t]),m)),m}},68066:(e,t,n)=>{e.exports={arc:n(65014),circle:n(79040),cube:n(18801),cuboid:n(26366),cylinder:n(29794),cylinderElliptic:n(93628),ellipse:n(86244),ellipsoid:n(27527),geodesicSphere:n(15594),line:n(58362),polygon:n(12360),polyhedron:n(15202),rectangle:n(43247),roundedCuboid:n(28125),roundedCylinder:n(16913),roundedRectangle:n(48502),sphere:n(87753),square:n(1651),star:n(72020),torus:n(73103),triangle:n(55284)}},58362:(e,t,n)=>{const r=n(39824);e.exports=e=>{if(!Array.isArray(e))throw new Error("points must be an array");return r.fromPoints({},e)}},12360:(e,t,n)=>{const r=n(97297);e.exports=e=>{const{points:t,paths:n,orientation:i}=Object.assign({},{points:[],paths:[],orientation:"counterclockwise"},e);if(!Array.isArray(t)||!Array.isArray(n))throw new Error("points and paths must be arrays");let s=t;Array.isArray(t[0])&&(Array.isArray(t[0][0])||(s=[t])),s.forEach(((e,t)=>{if(!Array.isArray(e))throw new Error("list of points "+t+" must be an array");if(e.length<3)throw new Error("list of points "+t+" must contain three or more points");e.forEach(((e,n)=>{if(!Array.isArray(e))throw new Error("list of points "+t+", point "+n+" must be an array");if(e.length<2)throw new Error("list of points "+t+", point "+n+" must contain by X and Y values")}))}));let o=n;if(0===n.length){let e=0;o=s.map((t=>t.map((t=>e++))))}const a=[];s.forEach((e=>e.forEach((e=>a.push(e)))));let l=[];o.forEach((e=>{const t=e.map((e=>a[e])),n=r.fromPoints(t);l=l.concat(r.toSides(n))}));let c=r.create(l);return"clockwise"===i&&(c=r.reverse(c)),c}},15202:(e,t,n)=>{const r=n(98618),i=n(9504),{isNumberArray:s}=n(30664);e.exports=e=>{const{points:t,faces:n,colors:o,orientation:a}=Object.assign({},{points:[],faces:[],colors:void 0,orientation:"outward"},e);if(!Array.isArray(t)||!Array.isArray(n))throw new Error("points and faces must be arrays");if(t.length<3)throw new Error("three or more points are required");if(n.length<1)throw new Error("one or more faces are required");if(o){if(!Array.isArray(o))throw new Error("colors must be an array");if(o.length!==n.length)throw new Error("faces and colors must have the same length")}t.forEach(((e,t)=>{if(!s(e,3))throw new Error(`point ${t} must be an array of X, Y, Z values`)})),n.forEach(((e,t)=>{if(e.length<3)throw new Error(`face ${t} must contain 3 or more indexes`);if(!s(e,e.length))throw new Error(`face ${t} must be an array of numbers`)})),"outward"!==a&&n.forEach((e=>e.reverse()));const l=n.map(((e,n)=>{const r=i.create(e.map((e=>t[e])));return o&&o[n]&&(r.color=o[n]),r}));return r.create(l)}},43247:(e,t,n)=>{const r=n(19936),i=n(97297),{isNumberArray:s}=n(30664);e.exports=e=>{const{center:t,size:n}=Object.assign({},{center:[0,0],size:[2,2]},e);if(!s(t,2))throw new Error("center must be an array of X and Y values");if(!s(n,2))throw new Error("size must be an array of X and Y values");if(!n.every((e=>e>=0)))throw new Error("size values must be positive");if(0===n[0]||0===n[1])return i.create();const o=[n[0]/2,n[1]/2],a=[o[0],-o[1]],l=[r.subtract(r.create(),t,o),r.add(r.create(),t,a),r.add(r.create(),t,o),r.subtract(r.create(),t,a)];return i.fromPoints(l)}},28125:(e,t,n)=>{const{EPS:r,TAU:i}=n(31246),s=n(19936),o=n(2215),a=n(98618),l=n(9504),{sin:c,cos:h}=n(53978),{isGTE:u,isNumberArray:d}=n(30664),p=n(26366),f=(e,t,n,a,l,u)=>{const d=i/4*l/a,p=h(d),f=c(d),m=a-l;let g=n*p,v=t[2]-(n-n*f);u||(v=n-n*f-t[2]),g=g>r?g:0;const x=o.add(o.create(),e,[t[0]-n,t[1]-n,v]),_=o.add(o.create(),e,[n-t[0],t[1]-n,v]),b=o.add(o.create(),e,[n-t[0],n-t[1],v]),y=o.add(o.create(),e,[t[0]-n,n-t[1],v]),E=[],S=[],M=[],A=[];for(let e=0;e<=m;e++){const t=m>0?i/4*e/m:0,n=s.fromAngleRadians(s.create(),t);s.scale(n,n,g);const r=o.fromVec2(o.create(),n);E.push(o.add(o.create(),x,r)),o.rotateZ(r,r,[0,0,0],i/4),S.push(o.add(o.create(),_,r)),o.rotateZ(r,r,[0,0,0],i/4),M.push(o.add(o.create(),b,r)),o.rotateZ(r,r,[0,0,0],i/4),A.push(o.add(o.create(),y,r))}return u?[E,S,M,A]:(E.reverse(),S.reverse(),M.reverse(),A.reverse(),[A,M,S,E])},m=(e,t)=>{const n=[];for(let r=0;r<e.length;r++){const i=e[r],s=t[r];for(let e=0;e<i.length-1;e++)n.push(l.create([i[e],i[e+1],s[e]])),e<s.length-1&&n.push(l.create([s[e],i[e+1],s[e+1]]))}return n},g=(e,t)=>{const n=[];for(let r=0;r<e.length;r++){let i=e[r],s=t[r];const o=i[i.length-1],a=s[s.length-1],c=(r+1)%e.length;i=e[c],s=t[c];const h=i[0],u=s[0];n.push(l.create([o,h,u,a]))}return n},v=(e,t)=>{e=(e=[e[3],e[2],e[1],e[0]]).map((e=>e.slice().reverse()));const n=[];e.forEach((e=>{e.forEach((e=>n.push(e)))}));const r=[];t.forEach((e=>{e.forEach((e=>r.push(e)))}));const i=[];for(let e=0;e<r.length;e++){const t=(e+1)%r.length;i.push(l.create([n[e],n[t],r[t],r[e]]))}return i};e.exports=e=>{let{center:t,size:n,roundRadius:i,segments:s}=Object.assign({},{center:[0,0,0],size:[2,2,2],roundRadius:.2,segments:32},e);if(!d(t,3))throw new Error("center must be an array of X, Y and Z values");if(!d(n,3))throw new Error("size must be an array of X, Y and Z values");if(!n.every((e=>e>=0)))throw new Error("size values must be positive");if(!u(i,0))throw new Error("roundRadius must be positive");if(!u(s,4))throw new Error("segments must be four or more");if(0===n[0]||0===n[1]||0===n[2])return a.create();if(0===i)return p({center:t,size:n});if(n=n.map((e=>e/2)),i>n[0]-r||i>n[1]-r||i>n[2]-r)throw new Error("roundRadius must be smaller than the radius of all dimensions");s=Math.floor(s/4);let o=null,c=null,h=[];for(let e=0;e<=s;e++){const r=f(t,n,i,s,e,!0),a=f(t,n,i,s,e,!1);if(0===e&&(h=h.concat(v(a,r))),o&&(h=h.concat(m(o,r),g(o,r))),c&&(h=h.concat(m(c,a),g(c,a))),e===s){let e=r.map((e=>e[0]));h.push(l.create(e)),e=a.map((e=>e[0])),h.push(l.create(e))}o=r,c=a}return a.create(h)}},16913:(e,t,n)=>{const{EPS:r,TAU:i}=n(31246),s=n(2215),o=n(98618),a=n(9504),{sin:l,cos:c}=n(53978),{isGTE:h,isNumberArray:u}=n(30664),d=n(29794);e.exports=e=>{const{center:t,height:n,radius:p,roundRadius:f,segments:m}=Object.assign({},{center:[0,0,0],height:2,radius:1,roundRadius:.2,segments:32},e);if(!u(t,3))throw new Error("center must be an array of X, Y and Z values");if(!h(n,0))throw new Error("height must be positive");if(!h(p,0))throw new Error("radius must be positive");if(!h(f,0))throw new Error("roundRadius must be positive");if(f>p)throw new Error("roundRadius must be smaller than the radius");if(!h(m,4))throw new Error("segments must be four or more");if(0===n||0===p)return o.create();if(0===f)return d({center:t,height:n,radius:p});const g=[0,0,-n/2],v=[0,0,n/2],x=s.subtract(s.create(),v,g);if(2*f>s.length(x)-r)throw new Error("height must be larger than twice roundRadius");let _;_=Math.abs(x[0])>Math.abs(x[1])?s.fromValues(0,1,0):s.fromValues(1,0,0);const b=s.scale(s.create(),s.normalize(s.create(),x),f),y=s.scale(s.create(),s.normalize(s.create(),s.cross(s.create(),b,_)),p),E=s.scale(s.create(),s.normalize(s.create(),s.cross(s.create(),y,b)),p);s.add(g,g,b),s.subtract(v,v,b);const S=Math.floor(.25*m),M=e=>{const n=e.map((e=>s.add(e,e,t)));return a.create(n)},A=[],T=s.create(),w=s.create();let C;for(let e=0;e<=m;e++){const t=i*e/m,n=s.add(s.create(),s.scale(T,y,c(t)),s.scale(w,E,l(t)));if(e>0){let e,t,r=[];r.push(s.add(s.create(),g,n)),r.push(s.add(s.create(),g,C)),r.push(s.add(s.create(),v,C)),r.push(s.add(s.create(),v,n)),A.push(M(r));for(let o=0;o<=S;o++){const a=i/4*o/S,h=c(a),u=l(a);if(o>0){let i;r=[],i=s.add(s.create(),g,s.subtract(T,s.scale(T,C,e),s.scale(w,b,t))),r.push(i),i=s.add(s.create(),g,s.subtract(T,s.scale(T,n,e),s.scale(w,b,t))),r.push(i),o<S&&(i=s.add(s.create(),g,s.subtract(T,s.scale(T,n,h),s.scale(w,b,u))),r.push(i)),i=s.add(s.create(),g,s.subtract(T,s.scale(T,C,h),s.scale(w,b,u))),r.push(i),A.push(M(r)),r=[],i=s.add(s.create(),s.scale(T,C,e),s.scale(w,b,t)),s.add(i,i,v),r.push(i),i=s.add(s.create(),s.scale(T,n,e),s.scale(w,b,t)),s.add(i,i,v),r.push(i),o<S&&(i=s.add(s.create(),s.scale(T,n,h),s.scale(w,b,u)),s.add(i,i,v),r.push(i)),i=s.add(s.create(),s.scale(T,C,h),s.scale(w,b,u)),s.add(i,i,v),r.push(i),r.reverse(),A.push(M(r))}e=h,t=u}}C=n}return o.create(A)}},48502:(e,t,n)=>{const{EPS:r,TAU:i}=n(31246),s=n(19936),o=n(97297),{isGTE:a,isNumberArray:l}=n(30664),c=n(43247);e.exports=e=>{let{center:t,size:n,roundRadius:h,segments:u}=Object.assign({},{center:[0,0],size:[2,2],roundRadius:.2,segments:32},e);if(!l(t,2))throw new Error("center must be an array of X and Y values");if(!l(n,2))throw new Error("size must be an array of X and Y values");if(!n.every((e=>e>=0)))throw new Error("size values must be positive");if(!a(h,0))throw new Error("roundRadius must be positive");if(!a(u,4))throw new Error("segments must be four or more");if(0===n[0]||0===n[1])return o.create();if(0===h)return c({center:t,size:n});if(n=n.map((e=>e/2)),h>n[0]-r||h>n[1]-r)throw new Error("roundRadius must be smaller than the radius of all dimensions");const d=Math.floor(u/4),p=s.add(s.create(),t,[n[0]-h,n[1]-h]),f=s.add(s.create(),t,[h-n[0],n[1]-h]),m=s.add(s.create(),t,[h-n[0],h-n[1]]),g=s.add(s.create(),t,[n[0]-h,h-n[1]]),v=[],x=[],_=[],b=[];for(let e=0;e<=d;e++){const t=i/4*e/d,n=s.fromAngleRadians(s.create(),t);s.scale(n,n,h),v.push(s.add(s.create(),p,n)),s.rotate(n,n,s.create(),i/4),x.push(s.add(s.create(),f,n)),s.rotate(n,n,s.create(),i/4),_.push(s.add(s.create(),m,n)),s.rotate(n,n,s.create(),i/4),b.push(s.add(s.create(),g,n))}return o.fromPoints(v.concat(x,_,b))}},87753:(e,t,n)=>{const r=n(27527),{isGTE:i}=n(30664);e.exports=e=>{let{center:t,radius:n,segments:s,axes:o}=Object.assign({},{center:[0,0,0],radius:1,segments:32,axes:[[1,0,0],[0,-1,0],[0,0,1]]},e);if(!i(n,0))throw new Error("radius must be positive");return n=[n,n,n],r({center:t,radius:n,segments:s,axes:o})}},1651:(e,t,n)=>{const r=n(43247),{isGTE:i}=n(30664);e.exports=e=>{let{center:t,size:n}=Object.assign({},{center:[0,0],size:2},e);if(!i(n,0))throw new Error("size must be positive");return n=[n,n],r({center:t,size:n})}},72020:(e,t,n)=>{const{TAU:r}=n(31246),i=n(19936),s=n(97297),{isGT:o,isGTE:a,isNumberArray:l}=n(30664),c=(e,t,n,s)=>{const o=r/e,a=[];for(let r=0;r<e;r++){const e=i.fromAngleRadians(i.create(),o*r+n);i.scale(e,e,t),i.add(e,s,e),a.push(e)}return a};e.exports=e=>{let{center:t,vertices:n,outerRadius:h,innerRadius:u,density:d,startAngle:p}=Object.assign({},{center:[0,0],vertices:5,outerRadius:1,innerRadius:0,density:2,startAngle:0},e);if(!l(t,2))throw new Error("center must be an array of X and Y values");if(!a(n,2))throw new Error("vertices must be two or more");if(!o(h,0))throw new Error("outerRadius must be greater than zero");if(!a(u,0))throw new Error("innerRadius must be greater than zero");if(!a(p,0))throw new Error("startAngle must be greater than zero");if(n=Math.floor(n),d=Math.floor(d),p%=r,0===u){if(!a(d,2))throw new Error("density must be two or more");u=h*((e,t)=>e>0&&t>1&&t<e/2?Math.cos(Math.PI*t/e)/Math.cos(Math.PI*(t-1)/e):0)(n,d)}const f=i.clone(t),m=c(n,h,p,f),g=c(n,u,p+Math.PI/n,f),v=[];for(let e=0;e<n;e++)v.push(m[e]),v.push(g[e]);return s.fromPoints(v)}},73103:(e,t,n)=>{const{TAU:r}=n(31246),i=n(32005),{rotate:s}=n(99971),{translate:o}=n(37148),a=n(79040),{isGT:l,isGTE:c}=n(30664);e.exports=e=>{const t={innerRadius:1,innerSegments:32,outerRadius:4,outerSegments:32,innerRotation:0,startAngle:0,outerRotation:r},{innerRadius:n,innerSegments:h,outerRadius:u,outerSegments:d,innerRotation:p,startAngle:f,outerRotation:m}=Object.assign({},t,e);if(!l(n,0))throw new Error("innerRadius must be greater than zero");if(!c(h,3))throw new Error("innerSegments must be three or more");if(!l(u,0))throw new Error("outerRadius must be greater than zero");if(!c(d,3))throw new Error("outerSegments must be three or more");if(!c(f,0))throw new Error("startAngle must be positive");if(!l(m,0))throw new Error("outerRotation must be greater than zero");if(n>=u)throw new Error("inner circle is two large to rotate about the outer circle");let g=a({radius:n,segments:h});return 0!==p&&(g=s([0,0,p],g)),g=o([u,0],g),i({startAngle:f,angle:m,segments:d},g)}},55284:(e,t,n)=>{const{NEPS:r}=n(31246),i=n(19936),s=n(97297),{isNumberArray:o}=n(30664),a=(e,t,n)=>Math.acos((e*e+t*t-n*n)/(2*e*t)),l=(e,t,n,r,o,a)=>{const l=i.fromValues(0,0),c=i.fromValues(a,0),h=i.fromValues(r,0);return i.add(h,i.rotate(h,h,[0,0],Math.PI-t),c),s.fromPoints([l,c,h])};e.exports=e=>{let{type:t,values:n}=Object.assign({},{type:"SSS",values:[1,1,1]},e);if("string"!=typeof t)throw new Error("triangle type must be a string");if(t=t.toUpperCase(),"A"!==t[0]&&"S"!==t[0]||"A"!==t[1]&&"S"!==t[1]||"A"!==t[2]&&"S"!==t[2])throw new Error("triangle type must contain three letters; A or S");if(!o(n,3))throw new Error("triangle values must contain three values");if(!n.every((e=>e>0)))throw new Error("triangle values must be greater than zero");switch(t){case"AAA":return(e=>{if(Math.abs(e[0]+e[1]+e[2]-Math.PI)>r)throw new Error("AAA triangles require angles that sum to PI");const t=e[0],n=e[1],i=Math.PI-t-n,s=1/Math.sin(i)*Math.sin(t),o=1/Math.sin(i)*Math.sin(n);return l(t,n,i,s,o,1)})(n);case"AAS":return(e=>{const t=e[0],n=e[1],i=Math.PI+r-t-n;if(i<r)throw new Error("AAS triangles require angles that sum to PI");const s=e[2],o=s/Math.sin(t)*Math.sin(n),a=s/Math.sin(t)*Math.sin(i);return l(t,n,i,s,o,a)})(n);case"ASA":return(e=>{const t=e[0],n=e[2],i=Math.PI+r-t-n;if(i<r)throw new Error("ASA triangles require angles that sum to PI");const s=e[1],o=s/Math.sin(i)*Math.sin(t),a=s/Math.sin(i)*Math.sin(n);return l(t,n,i,o,a,s)})(n);case"SAS":return(e=>{const t=e[0],n=e[1],i=e[2],s=((e,t,n)=>t>r?Math.sqrt(e*e+n*n-2*e*n*Math.cos(t)):Math.sqrt((e-n)*(e-n)+e*n*t*t*(1-t*t/12)))(t,n,i),o=a(s,t,i),c=Math.PI-o-n;return l(o,n,c,i,s,t)})(n);case"SSA":return(e=>{const t=e[0],n=e[1],r=e[2],i=Math.asin(n*Math.sin(r)/t),s=Math.PI-i-r,o=t/Math.sin(r)*Math.sin(s);return l(i,s,r,n,o,t)})(n);case"SSS":return(e=>{const t=e[1],n=e[2],r=e[0];if(t+n<=r||n+r<=t||r+t<=n)throw new Error("SSS triangle is incorrect, as the longest side is longer than the sum of the other sides");const i=a(n,r,t),s=a(r,t,n),o=Math.PI-i-s;return l(i,s,o,t,n,r)})(n);default:throw new Error("invalid triangle type, try again")}}},64807:e=>{e.exports={height:14,32:[16],33:[10,5,21,5,7,void 0,5,2,4,1,5,0,6,1,5,2],34:[16,4,21,4,14,void 0,12,21,12,14],35:[21,11,25,4,-7,void 0,17,25,10,-7,void 0,4,12,18,12,void 0,3,6,17,6],36:[20,8,25,8,-4,void 0,12,25,12,-4,void 0,17,18,15,20,12,21,8,21,5,20,3,18,3,16,4,14,5,13,7,12,13,10,15,9,16,8,17,6,17,3,15,1,12,0,8,0,5,1,3,3],37:[24,21,21,3,0,void 0,8,21,10,19,10,17,9,15,7,14,5,14,3,16,3,18,4,20,6,21,8,21,10,20,13,19,16,19,19,20,21,21,void 0,17,7,15,6,14,4,14,2,16,0,18,0,20,1,21,3,21,5,19,7,17,7],38:[26,23,12,23,13,22,14,21,14,20,13,19,11,17,6,15,3,13,1,11,0,7,0,5,1,4,2,3,4,3,6,4,8,5,9,12,13,13,14,14,16,14,18,13,20,11,21,9,20,8,18,8,16,9,13,11,10,16,3,18,1,20,0,22,0,23,1,23,2],39:[10,5,19,4,20,5,21,6,20,6,18,5,16,4,15],40:[14,11,25,9,23,7,20,5,16,4,11,4,7,5,2,7,-2,9,-5,11,-7],41:[14,3,25,5,23,7,20,9,16,10,11,10,7,9,2,7,-2,5,-5,3,-7],42:[16,8,21,8,9,void 0,3,18,13,12,void 0,13,18,3,12],43:[26,13,18,13,0,void 0,4,9,22,9],44:[10,6,1,5,0,4,1,5,2,6,1,6,-1,5,-3,4,-4],45:[26,4,9,22,9],46:[10,5,2,4,1,5,0,6,1,5,2],47:[22,20,25,2,-7],48:[20,9,21,6,20,4,17,3,12,3,9,4,4,6,1,9,0,11,0,14,1,16,4,17,9,17,12,16,17,14,20,11,21,9,21],49:[20,6,17,8,18,11,21,11,0],50:[20,4,16,4,17,5,19,6,20,8,21,12,21,14,20,15,19,16,17,16,15,15,13,13,10,3,0,17,0],51:[20,5,21,16,21,10,13,13,13,15,12,16,11,17,8,17,6,16,3,14,1,11,0,8,0,5,1,4,2,3,4],52:[20,13,21,3,7,18,7,void 0,13,21,13,0],53:[20,15,21,5,21,4,12,5,13,8,14,11,14,14,13,16,11,17,8,17,6,16,3,14,1,11,0,8,0,5,1,4,2,3,4],54:[20,16,18,15,20,12,21,10,21,7,20,5,17,4,12,4,7,5,3,7,1,10,0,11,0,14,1,16,3,17,6,17,7,16,10,14,12,11,13,10,13,7,12,5,10,4,7],55:[20,17,21,7,0,void 0,3,21,17,21],56:[20,8,21,5,20,4,18,4,16,5,14,7,13,11,12,14,11,16,9,17,7,17,4,16,2,15,1,12,0,8,0,5,1,4,2,3,4,3,7,4,9,6,11,9,12,13,13,15,14,16,16,16,18,15,20,12,21,8,21],57:[20,16,14,15,11,13,9,10,8,9,8,6,9,4,11,3,14,3,15,4,18,6,20,9,21,10,21,13,20,15,18,16,14,16,9,15,4,13,1,10,0,8,0,5,1,4,3],58:[10,5,14,4,13,5,12,6,13,5,14,void 0,5,2,4,1,5,0,6,1,5,2],59:[10,5,14,4,13,5,12,6,13,5,14,void 0,6,1,5,0,4,1,5,2,6,1,6,-1,5,-3,4,-4],60:[24,20,18,4,9,20,0],61:[26,4,12,22,12,void 0,4,6,22,6],62:[24,4,18,20,9,4,0],63:[18,3,16,3,17,4,19,5,20,7,21,11,21,13,20,14,19,15,17,15,15,14,13,13,12,9,10,9,7,void 0,9,2,8,1,9,0,10,1,9,2],64:[27,18,13,17,15,15,16,12,16,10,15,9,14,8,11,8,8,9,6,11,5,14,5,16,6,17,8,void 0,12,16,10,14,9,11,9,8,10,6,11,5,void 0,18,16,17,8,17,6,19,5,21,5,23,7,24,10,24,12,23,15,22,17,20,19,18,20,15,21,12,21,9,20,7,19,5,17,4,15,3,12,3,9,4,6,5,4,7,2,9,1,12,0,15,0,18,1,20,2,21,3,void 0,19,16,18,8,18,6,19,5],65:[18,9,21,1,0,void 0,9,21,17,0,void 0,4,7,14,7],66:[21,4,21,4,0,void 0,4,21,13,21,16,20,17,19,18,17,18,15,17,13,16,12,13,11,void 0,4,11,13,11,16,10,17,9,18,7,18,4,17,2,16,1,13,0,4,0],67:[21,18,16,17,18,15,20,13,21,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5],68:[21,4,21,4,0,void 0,4,21,11,21,14,20,16,18,17,16,18,13,18,8,17,5,16,3,14,1,11,0,4,0],69:[19,4,21,4,0,void 0,4,21,17,21,void 0,4,11,12,11,void 0,4,0,17,0],70:[18,4,21,4,0,void 0,4,21,17,21,void 0,4,11,12,11],71:[21,18,16,17,18,15,20,13,21,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5,18,8,void 0,13,8,18,8],72:[22,4,21,4,0,void 0,18,21,18,0,void 0,4,11,18,11],73:[8,4,21,4,0],74:[16,12,21,12,5,11,2,10,1,8,0,6,0,4,1,3,2,2,5,2,7],75:[21,4,21,4,0,void 0,18,21,4,7,void 0,9,12,18,0],76:[17,4,21,4,0,void 0,4,0,16,0],77:[24,4,21,4,0,void 0,4,21,12,0,void 0,20,21,12,0,void 0,20,21,20,0],78:[22,4,21,4,0,void 0,4,21,18,0,void 0,18,21,18,0],79:[22,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5,19,8,19,13,18,16,17,18,15,20,13,21,9,21],80:[21,4,21,4,0,void 0,4,21,13,21,16,20,17,19,18,17,18,14,17,12,16,11,13,10,4,10],81:[22,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5,19,8,19,13,18,16,17,18,15,20,13,21,9,21,void 0,12,4,18,-2],82:[21,4,21,4,0,void 0,4,21,13,21,16,20,17,19,18,17,18,15,17,13,16,12,13,11,4,11,void 0,11,11,18,0],83:[20,17,18,15,20,12,21,8,21,5,20,3,18,3,16,4,14,5,13,7,12,13,10,15,9,16,8,17,6,17,3,15,1,12,0,8,0,5,1,3,3],84:[16,8,21,8,0,void 0,1,21,15,21],85:[22,4,21,4,6,5,3,7,1,10,0,12,0,15,1,17,3,18,6,18,21],86:[18,1,21,9,0,void 0,17,21,9,0],87:[24,2,21,7,0,void 0,12,21,7,0,void 0,12,21,17,0,void 0,22,21,17,0],88:[20,3,21,17,0,void 0,17,21,3,0],89:[18,1,21,9,11,9,0,void 0,17,21,9,11],90:[20,17,21,3,0,void 0,3,21,17,21,void 0,3,0,17,0],91:[14,4,25,4,-7,void 0,5,25,5,-7,void 0,4,25,11,25,void 0,4,-7,11,-7],92:[14,0,21,14,-3],93:[14,9,25,9,-7,void 0,10,25,10,-7,void 0,3,25,10,25,void 0,3,-7,10,-7],94:[16,6,15,8,18,10,15,void 0,3,12,8,17,13,12,void 0,8,17,8,0],95:[16,0,-2,16,-2],96:[10,6,21,5,20,4,18,4,16,5,15,6,16,5,17],97:[19,15,14,15,0,void 0,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],98:[19,4,21,4,0,void 0,4,11,6,13,8,14,11,14,13,13,15,11,16,8,16,6,15,3,13,1,11,0,8,0,6,1,4,3],99:[18,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],100:[19,15,21,15,0,void 0,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],101:[18,3,8,15,8,15,10,14,12,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],102:[12,10,21,8,21,6,20,5,17,5,0,void 0,2,14,9,14],103:[19,15,14,15,-2,14,-5,13,-6,11,-7,8,-7,6,-6,void 0,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],104:[19,4,21,4,0,void 0,4,10,7,13,9,14,12,14,14,13,15,10,15,0],105:[8,3,21,4,20,5,21,4,22,3,21,void 0,4,14,4,0],106:[10,5,21,6,20,7,21,6,22,5,21,void 0,6,14,6,-3,5,-6,3,-7,1,-7],107:[17,4,21,4,0,void 0,14,14,4,4,void 0,8,8,15,0],108:[8,4,21,4,0],109:[30,4,14,4,0,void 0,4,10,7,13,9,14,12,14,14,13,15,10,15,0,void 0,15,10,18,13,20,14,23,14,25,13,26,10,26,0],110:[19,4,14,4,0,void 0,4,10,7,13,9,14,12,14,14,13,15,10,15,0],111:[19,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3,16,6,16,8,15,11,13,13,11,14,8,14],112:[19,4,14,4,-7,void 0,4,11,6,13,8,14,11,14,13,13,15,11,16,8,16,6,15,3,13,1,11,0,8,0,6,1,4,3],113:[19,15,14,15,-7,void 0,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],114:[13,4,14,4,0,void 0,4,8,5,11,7,13,9,14,12,14],115:[17,14,11,13,13,10,14,7,14,4,13,3,11,4,9,6,8,11,7,13,6,14,4,14,3,13,1,10,0,7,0,4,1,3,3],116:[12,5,21,5,4,6,1,8,0,10,0,void 0,2,14,9,14],117:[19,4,14,4,4,5,1,7,0,10,0,12,1,15,4,void 0,15,14,15,0],118:[16,2,14,8,0,void 0,14,14,8,0],119:[22,3,14,7,0,void 0,11,14,7,0,void 0,11,14,15,0,void 0,19,14,15,0],120:[17,3,14,14,0,void 0,14,14,3,0],121:[16,2,14,8,0,void 0,14,14,8,0,6,-4,4,-6,2,-7,1,-7],122:[17,14,14,3,0,void 0,3,14,14,14,void 0,3,0,14,0],123:[14,9,25,7,24,6,23,5,21,5,19,6,17,7,16,8,14,8,12,6,10,void 0,7,24,6,22,6,20,7,18,8,17,9,15,9,13,8,11,4,9,8,7,9,5,9,3,8,1,7,0,6,-2,6,-4,7,-6,void 0,6,8,8,6,8,4,7,2,6,1,5,-1,5,-3,6,-5,7,-6,9,-7],124:[8,4,25,4,-7],125:[14,5,25,7,24,8,23,9,21,9,19,8,17,7,16,6,14,6,12,8,10,void 0,7,24,8,22,8,20,7,18,6,17,5,15,5,13,6,11,10,9,6,7,5,5,5,3,6,1,7,0,8,-2,8,-4,7,-6,void 0,8,8,6,6,6,4,7,2,8,1,9,-1,9,-3,8,-5,7,-6,5,-7],126:[24,3,6,3,8,4,11,6,12,8,12,10,11,14,8,16,7,18,7,20,8,21,10,void 0,3,8,4,10,6,11,8,11,10,10,14,7,16,6,18,6,20,7,21,10,21,12]}},15803:(e,t,n)=>{e.exports={vectorChar:n(10028),vectorText:n(50583)}},10028:(e,t,n)=>{const r=n(69006);e.exports=(e,t)=>{const{xOffset:n,yOffset:i,input:s,font:o,height:a,extrudeOffset:l}=r(e,t);let c=s.charCodeAt(0);c&&o[c]||(c=63);const h=[].concat(o[c]),u=(a-l)/o.height,d=l/2,p=h.shift()*u,f=[];let m=[];for(let e=0,t=h.length;e<t;e+=2){const t=u*h[e]+n,r=u*h[e+1]+i+d;void 0===h[e]?(f.push(m),m=[],e--):m.push([t,r])}return m.length&&f.push(m),{width:p,height:a,segments:f}}},69006:(e,t,n)=>{const r={xOffset:0,yOffset:0,input:"?",align:"left",font:n(64807),height:14,lineSpacing:2.142857142857143,letterSpacing:1,extrudeOffset:0};e.exports=(e,t)=>{t||"string"!=typeof e||(e={input:e}),e=e||{};const n=Object.assign({},r,e);return n.input=t||n.input,n}},50583:(e,t,n)=>{const r=n(10028),i=n(69006),s=(e,t)=>{const{x:n,y:r}=Object.assign({x:0,y:0},e||{}),i=t.segments;let s=null,o=null;for(let e=0,t=i.length;e<t;e++){s=i[e];for(let e=0,t=s.length;e<t;e++)o=s[e],s[e]=[o[0]+n,o[1]+r]}return t};e.exports=(e,t)=>{const{xOffset:n,yOffset:o,input:a,font:l,height:c,align:h,extrudeOffset:u,lineSpacing:d,letterSpacing:p}=i(e,t);let f,m,g,v,x,_,[b,y]=[n,o],E={width:0,segments:[]};const S=[];let M=[],A=0;const T=b,w=()=>{S.push(E),A=Math.max(A,E.width),E={width:0,segments:[]}};for(f=0,m=a.length;f<m;f++)g=a[f],v=r({xOffset:b,yOffset:y,font:l,height:c,extrudeOffset:u},g),"\n"!==g?(x=v.width*p,E.width+=x,b+=x," "!==g&&(E.segments=E.segments.concat(v.segments))):(b=T,y-=v.height*d,w());for(E.segments.length&&w(),f=0,m=S.length;f<m;f++)E=S[f],A>E.width&&(_=A-E.width,"right"===h?E=s({x:_},E):"center"===h&&(E=s({x:_/2},E))),M=M.concat(E.segments);return M}},79413:(e,t,n)=>{const r=n(97297),i=n(98618),s=n(39824);e.exports=e=>{let t;for(const n of e){let e=0;if(r.isA(n)&&(e=1),i.isA(n)&&(e=2),s.isA(n)&&(e=3),t&&e!==t)return!1;t=e}return!0}},32797:e=>{e.exports=e=>.017453292519943295*e},95983:e=>{const t=e=>e.reduce(((e,n)=>Array.isArray(n)?e.concat(t(n)):e.concat(n)),[]);e.exports=t},94308:e=>{e.exports=(e,t)=>e-t},38149:(e,t,n)=>{e.exports={areAllShapesTheSameType:n(79413),degToRad:n(32797),flatten:n(95983),fnNumberSort:n(94308),insertSorted:n(23161),radiusToSegments:n(71484),radToDeg:n(83979)}},23161:e=>{e.exports=(e,t,n)=>{let r=0,i=e.length;for(;i>r;){const s=Math.floor((r+i)/2);n(t,e[s])>0?r=s+1:i=s}e.splice(r,0,t)}},95478:e=>{e.exports=(e,t,n)=>{for(e=e.slice();e.length<n;)e.push(t);return e}},83979:e=>{e.exports=e=>57.29577951308232*e},71484:(e,t,n)=>{const{TAU:r}=n(31246);e.exports=(e,t,n)=>{const i=t>0?e*r/t:0,s=n>0?r/n:0;return Math.ceil(Math.max(i,s,4))}},11954:(e,t,n)=>{const{colors:r,primitives:i}=n(80715),{ensureString:s}=n(39569),o=n(80741).rE;e.exports={deserialize:(e,t)=>{const n={filename:"obj",output:"script",orientation:"outward",version:o,addMetaData:!0};e=Object.assign({},n,e);const{output:a}=e;t=s(t),e&&e.statusCallback&&e.statusCallback({progress:0});const{positions:l,groups:c}=(e=>{let t=[];const n=[];let i=null;t.push({faces:[],colors:[],name:"default",line:0});const s=(e,n)=>{const r={faces:[],colors:[],name:""};n&&n.length>0&&(r.name=n.join(" ")),t.push(r)},o=(e,t)=>{const r=parseFloat(t[0]),i=parseFloat(t[1]),s=parseFloat(t[2]);n.push([r,i,s])},a=(e,r)=>{const s=r.map((e=>{const t=e.match(/[0-9+\-eE]+/g);let r=parseInt(t[0]);return r<0?r=n.length+r:r--,r})),o=t.pop();o.faces.push(s),o.colors.push(i),t.push(o)},l=(e,t)=>{if(i=null,t&&t.length>0){const e=r.colorNameToRgb(t[0]);e&&(i=[e[0],e[1],e[2],1])}},c=e.split(/\n/);for(let e=0;e<c.length;e++){const t=c[e].trim();if(t&&t.length>0){let e=t.match(/\S+/g);if(e){const t=e[0];switch(e=e.slice(1),t){case"g":s(0,e);break;case"v":o(0,e);break;case"f":a(0,e);break;case"usemtl":l(0,e)}}}}return t=t.filter((e=>e.faces.length>0)),{positions:n,groups:t}})(t),h="script"===a?((e,t,n)=>{const{filename:r,addMetaData:i,version:s}=n;let o=i?`//\n// Produced by JSCAD IO Library : OBJ Deserializer (${s})\n// date: ${new Date}\n// source: ${r}\n//\n  `:"";return o+=`const {primitives} = require('@jscad/modeling')\n\n// groups: ${t.length}\n// points: ${e.length}\nconst main = () => {\n  // points are common to all geometries\n${(e=>{let t="  let points = [\n";return e.forEach((e=>t+=`    [${e}],\n`)),t+="  ]",t})(e)}\n\n  let geometries = [\n${(e=>{let t="";return e.forEach(((e,n)=>t+=`    group${n}(points), // ${e.name}\n`)),t})(t)}  ]\n  return geometries\n}\n\n${((e,t)=>{let n="";return e.forEach(((e,r)=>{const i=e.faces,s=e.colors;n+=`\n// group : ${e.name}\n// faces: ${i.length}\n`,n+=`const group${r} = (points) => {\n${(e=>{let t="  let faces = [\n";return e.forEach((e=>t+=`    [${e}],\n`)),t+="  ]",t})(i)}\n${(e=>{let t="  let colors = [\n";return e.forEach((e=>{t+=e?`    [${e}],\n`:"    null,\n"})),t+="  ]",t})(s)}\n  return primitives.polyhedron({ orientation: '${t.orientation}', points, faces, colors })\n}\n`})),n})(t,n)}\nmodule.exports = {main}\n`,o})(l,c,e):((e,t,n)=>t.map((t=>i.polyhedron({orientation:n.orientation,points:e,faces:t.faces,colors:t.colors}))))(l,c,e);return e&&e.statusCallback&&e.statusCallback({progress:100}),h},extension:"obj"}},2713:(e,t,n)=>{const{colors:r,geometries:i,modifiers:s}=n(80715),{flatten:o,toArray:a}=n(10047),l=e=>`v ${e[0]} ${e[1]} ${e[2]}`,c=e=>{let t;if(e.color){const n=e.color[0],i=e.color[1],s=e.color[2];let o=765;for(const e in r.cssColors){const a=r.cssColors[e],l=Math.abs(n-a[0])+Math.abs(i-a[1])+Math.abs(s-a[2]);if(l<o){if(t=e,0===l)break;o=l}}}return t};e.exports={serialize:(e,...t)=>{e=Object.assign({},{statusCallback:null,triangulate:!0},e);let n=(t=o(t)).filter((e=>i.geom3.isA(e)));if(0===n.length)throw new Error("only 3D geometries can be serialized to OBJ");t.length!==n.length&&console.warn("some objects could not be serialized to OBJ"),n=a(s.generalize({snap:!0,triangulate:e.triangulate},n)),e.statusCallback&&e.statusCallback({progress:0});let r="# Wavefront OBJ file generated by JSCAD\n";const h=[];let u="default";return n.forEach(((t,s)=>{e.statusCallback&&e.statusCallback({progress:100*s/n.length}),r+="\n";const o=c(t),a=i.geom3.toPolygons(t).filter((e=>e.vertices.length>=3));a.forEach((e=>{e.vertices.forEach((e=>{const t=l(e);h.indexOf(t)<0&&(h.push(t),r+=`${t}\n`)}))})),r+="\n",a.forEach((e=>{const t=e.vertices.map((e=>h.indexOf(l(e))+1)),n=c(e)||o||"default";n!==u&&(r+=`usemtl ${n}\n`,u=n),r+=`f ${t.join(" ")}\n`}))})),e.statusCallback&&e.statusCallback({progress:100}),[r]},mimeType:"application/object"}},41050:(e,t,n)=>{const{maths:r,primitives:i}=n(80715),{BinaryReader:s}=n(39569),o=n(59197).rE,a=(e,t,n,r)=>{let i="";return t&&(i=`\n  //\n  // producer: JSCAD STL Deserializer ${n}\n  // date: ${new Date}\n  // source: ${r}\n  // objects: ${e.length}\n  //\n  `),i+="const {primitives} = require('@jscad/modeling')\n",i+=e.join("\n"),i+=`\nconst main = () => {\n return [${e.map(((e,t)=>`solid${t+1}()`))}]\n}\n\nmodule.exports = {main}\n`,i},l=e=>e,c=(e,t,n,i)=>{const o=[],a=[],l=[],c=[];let h=0,u=0,d=null;const p=parseInt("01000000000000000",2),f=parseInt("00000000000011111",2),m=parseInt("00000001111100000",2),g=parseInt("00111110000000000",2),v=new s(e);let x=0,_=0,b=0,y=0,E=0,S=0;for(let e=0;e<80;e++)switch(x){case 6:b=v.readUInt8(),x+=1;continue;case 7:y=v.readUInt8(),x+=1;continue;case 8:E=v.readUInt8(),x+=1;continue;case 9:S=v.readUInt8(),x+=1;continue;default:switch(_=v.readChar(),_){case"C":case"O":case"L":case"R":case"=":x+=1}}10===x&&(d=[b/255,y/255,E/255,S/255]);const M=v.readUInt32();for(let e=0;e<M;e++){const e=[];e.push(v.readFloat()),e.push(v.readFloat()),e.push(v.readFloat());let t=[];t.push(v.readFloat()),t.push(v.readFloat()),t.push(v.readFloat());const n=[];n.push(v.readFloat()),n.push(v.readFloat()),n.push(v.readFloat());let i=[];i.push(v.readFloat()),i.push(v.readFloat()),i.push(v.readFloat());let s=0;for(let r=0;r<3;r++)isNaN(t[r])&&s++,isNaN(n[r])&&s++,isNaN(i[r])&&s++,isNaN(e[r])&&s++;s>0&&console.log("bad triangle vertice coords/normal: ",s),u+=s;const _=[];_.push(h++),_.push(h++),_.push(h++);const b=v.readUInt16();let y=null;if(10===x&&(y=b&p?d:[(b&f)/31,((b&m)>>>5)/31,((b&g)>>>10)/31,255],c.push(y)),0===s){const s=r.vec3.subtract(r.vec3.create(),n,t),o=r.vec3.subtract(r.vec3.create(),i,t),a=r.vec3.cross(r.vec3.create(),s,o);if(r.vec3.dot(e,a)>0){const e=i;i=t,t=e}}o.push(t),o.push(n),o.push(i),a.push(_),l.push(e)}return u&&console.warn(`WARNING: import errors: ${u} (some triangles might be misaligned or missing)`),[i({vertices:o,triangles:a,normals:l,colors:c,index:1})]},h=(e,t,n,i)=>{let s=0;const o=e.split("endsolid"),a=[];for(let t=1;t<o.length;t++){const n=/\bfacet[\s\S]*?endloop/gim,o=[],l=[],c=[],h=[];let u=0,d=0;const p=e.match(n);if(null!=p){for(let e=0;e<p.length;e++){const t=/\bfacet\s+normal\s+(\S+)\s+(\S+)\s+(\S+)\s+outer\s+loop\s+vertex\s+(\S+)\s+(\S+)\s+(\S+)\s+vertex\s+(\S+)\s+(\S+)\s+(\S+)\s+vertex\s+(\S+)\s+(\S+)\s+(\S+)\s*/gim.exec(p[e]);if(null==t)continue;if(13!==t.length){console.log("Failed to parse "+p[e]);break}let n=0;for(let e=0;e<t.length;e++)"NaN"===t[e]&&(console.log("bad normal or triangle vertice #"+s+" "+e+": '"+t[e]+"', skipped"),n++);if(d+=n,n)continue;let i=1;const a=[];a.push(parseFloat(t[i++])),a.push(parseFloat(t[i++])),a.push(parseFloat(t[i++]));let h=[];h.push(parseFloat(t[i++])),h.push(parseFloat(t[i++])),h.push(parseFloat(t[i++]));const f=[];f.push(parseFloat(t[i++])),f.push(parseFloat(t[i++])),f.push(parseFloat(t[i++]));let m=[];m.push(parseFloat(t[i++])),m.push(parseFloat(t[i++])),m.push(parseFloat(t[i++]));const g=[];if(g.push(u++),g.push(u++),g.push(u++),0===n){const e=r.vec3.subtract(r.vec3.create(),f,h),t=r.vec3.subtract(r.vec3.create(),m,h),n=r.vec3.cross(r.vec3.create(),e,t);if(r.vec3.dot(a,n)>0){const e=m;m=h,h=e}}o.push(h),o.push(f),o.push(m),c.push(a),l.push(g),s++}d&&console.warn(`WARNING: import errors: ${d} (some triangles might be misaligned or missing)`),a.push(i({vertices:o,triangles:l,colors:h,index:t}))}}return a};e.exports={deserialize:(e,t)=>{const n={filename:"stl",version:o,addMetaData:!0,output:"script"};(e=Object.assign({},n,e))&&e.statusCallback&&e.statusCallback({progress:0});const{filename:r,version:s,output:u,addMetaData:d}=e;var p;const f=(e=>{const t=(e=>{if("string"!=typeof e){const t=new Uint8Array(e);let n="";for(let r=0;r<e.byteLength;r++)n+=String.fromCharCode(t[r]);return n}return e})(e);return null===/vertex[\s]+([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g.exec(t)})(t=void 0!==(p=t).byteLength&&"function"==typeof p.slice?(e=>{let t="";const n=new Uint8Array(e),r=n.byteLength;for(let e=0;e<r;e++)t+=String.fromCharCode(n[e]);return t})(t):t);e&&e.statusCallback&&e.statusCallback({progress:33}),e&&e.statusCallback&&e.statusCallback({progress:66});const m=("script"===u?a:l)((f?c:h)(t,r,s,"script"===u?({vertices:e,triangles:t,normals:n,colors:r,index:i})=>((e,t,n,r,i)=>{let s=`\n//\n// solid ${i} : ${e.length} points, ${t.length} faces, ${r.length} colors\n//\nconst solid${i} = () => {\n`;s+="  const points = [\n";for(let t=0;t<e.length;t++)s+=`    [${e[t]}],\n`;s+="  ]\n",s+="  const faces = [\n";for(let e=0;e<t.length;e++)s+=`    [${t[e]}],\n`;if(s+="  ]\n",r&&t.length===r.length){s+="  const colors = [\n";for(let e=0;e<r.length;e++)s+=`    [${r[e]}],\n`;s+="  ]\n"}else s+="  const colors = null\n";return s+="  return primitives.polyhedron({points, faces, colors, orientation: 'inside'})\n}\n",s})(e,t,0,r,i):({vertices:e,triangles:t,normals:n,colors:r})=>((e,t,n,r)=>{r&&t.length!==r.length&&(r=void 0);const s={orientation:"inward",points:e,faces:t,colors:r};return i.polyhedron(s)})(e,t,0,r)),d,s,r);return e&&e.statusCallback&&e.statusCallback({progress:100}),m},extension:"stl"}},97243:(e,t,n)=>{const{geometries:r}=n(80715),i=(e,t)=>{const n=[];return r.geom3.toPolygons(e).forEach(((e,t)=>{n.push(a(e))})),n.join("\n")},s=e=>`${e[0]} ${e[1]} ${e[2]}`,o=e=>`vertex ${s(e)}`,a=e=>{const t=[];if(e.vertices.length>=3){const n=o(e.vertices[0]);for(let i=0;i<e.vertices.length-2;i++){const a=`facet normal ${s(r.poly3.plane(e))}\nouter loop\n${n}\n${o(e.vertices[i+1])}\n${o(e.vertices[i+2])}\nendloop\nendfacet`;t.push(a)}}return t.join("\n")};e.exports={serializeText:(e,t)=>{t.statusCallback&&t.statusCallback({progress:0});const n=`solid JSCAD\n${((e,t)=>{const n=[];return e.forEach(((r,s)=>{n.push(i(r,t)),t.statusCallback&&t.statusCallback({progress:100*s/e.length})})),n.join("\n")})(e,t)}\nendsolid JSCAD\n`;return t.statusCallback&&t.statusCallback({progress:100}),[n]}}},12094:(e,t,n)=>{const{geometries:r}=n(80715);e.exports={serializeBinary:(e,t)=>{t.statusCallback&&t.statusCallback({progress:0});const n=new ArrayBuffer(4),i=new Int32Array(n,0,1),s=new Int8Array(n,0,4);if(i[0]=287454020,68!==s[0])throw new Error("Binary STL output is currently only supported on little-endian (Intel) processors");let o=0,a=0;e.forEach(((e,t)=>{r.geom3.toPolygons(e).forEach((e=>{const t=e.vertices.length;o+=t>=3?t-2:0,a+=1}))}));const l=new Uint8Array(80);for(let e=0;e<80;e++)l[e]=65;const c=new Uint32Array(1);c[0]=o;const h=new ArrayBuffer(50*o),u=new Int8Array(h),d=new ArrayBuffer(50),p=new Int8Array(d),f=new Float32Array(d,0,12),m=new Uint16Array(d,48,1);let g=0;return e.forEach((e=>{r.geom3.toPolygons(e).forEach(((e,n)=>{const i=e.vertices,s=i.length,o=r.poly3.plane(e);for(let e=0;e<s-2;e++){f[0]=o[0],f[1]=o[1],f[2]=o[2];let t=3;for(let n=0;n<3;n++){const r=i[n+(n>0?e:0)];f[t++]=r[0],f[t++]=r[1],f[t++]=r[2]}m[0]=0,u.set(p,g),g+=50}t.statusCallback&&t.statusCallback({progress:100*n/a})}))})),t.statusCallback&&t.statusCallback({progress:100}),[l.buffer,c.buffer,h]}}},54081:(e,t,n)=>{const{geometries:r,modifiers:i}=n(80715),{flatten:s,toArray:o}=n(10047),{serializeBinary:a}=n(12094),{serializeText:l}=n(97243);e.exports={mimeType:"application/sla",serialize:(e,...t)=>{e=Object.assign({},{binary:!0,statusCallback:null},e);let n=(t=s(t)).filter((e=>r.geom3.isA(e)));if(0===n.length)throw new Error("only 3D geometries can be serialized to STL");return t.length!==n.length&&console.warn("some objects could not be serialized to STL"),n=o(i.generalize({snap:!0,triangulate:!0},n)),e.binary?a(n,e):l(n,e)}}},9935:e=>{e.exports={pxPmm:1/.2822222,inchMM:.03937,ptMM:1/(1/.03937/72),pcMM:.23622,cssPxUnit:.2822222,svgColors:{aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],grey:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}}},43711:(e,t,n)=>{const{inchMM:r,ptMM:i,pcMM:s,svgColors:o}=n(9935),a=(e,t)=>{let n=parseFloat(e);return isNaN(n)?0:(0===n||e.search(/EM/i)>0||e.search(/EX/i)>0||e.search(/MM/i)>0||(e.search(/CM/i)>0?n*=10:e.search(/IN/i)>0?n/=r:e.search(/PT/i)>0?n/=i:e.search(/PC/i)>0?n/=s:n/=t),n)};e.exports={svg2cag:(e,t)=>[e[0]/t[0],0-e[1]/t[1]],cagLengthX:(e,t,n)=>{if(e.indexOf("%")<0)return a(e,t[0]);let r=parseFloat(e);return isNaN(r)?0:0===r?r:(r=r/100*n,r/=t[0],Math.round(1e5*r)/1e5)},cagLengthY:(e,t,n)=>{if(e.indexOf("%")<0)return a(e,t[1]);let r=parseFloat(e);return isNaN(r)?0:0===r?r:(r=r/100*n,r/=t[1],Math.round(1e5*r)/1e5)},cagLengthP:(e,t,n)=>{if(e.indexOf("%")<0)return a(e,t[1]);let r=parseFloat(e);return isNaN(r)?0:(0===r||(r=r/100*n,r/=t[0]),r)},css2cag:a,cagColor:e=>{let t;if((e=e.toLowerCase())in o)t=o[e],t=[t[0]/255,t[1]/255,t[2]/255];else if("#"===e[0])4===e.length&&(e="#"+e[1]+e[1]+e[2]+e[2]+e[3]+e[3]),7===e.length&&(t=[parseInt("0x"+e.slice(1,3))/255,parseInt("0x"+e.slice(3,5))/255,parseInt("0x"+e.slice(5,7))/255]);else{let n=/rgb\(.+,.+,.+\)/.exec(e);null!==n&&(n=n[0],n=n.slice(n.indexOf("(")+1,n.indexOf(")")),t=n.split(","),n.indexOf("%")>0?(t=[parseInt(t[0]),parseInt(t[1]),parseInt(t[2])],t=[t[0]/100,t[1]/100,t[2]/100]):(t=[parseInt(t[0]),parseInt(t[1]),parseInt(t[2])],t=[t[0]/255,t[1]/255,t[2]/255]))}return t},cssStyle:(e,t)=>{if("style"in e){const n=e.style+";";let r=new RegExp(t+"\\s*:\\s*(\\S+);","i").exec(n);if(null!==r){r=r[0];let e=r.indexOf(":")+1;for(;" "===r[e];)e++;return r=r.slice(e,r.indexOf(";")),r}}},reflect:(e,t,n,r)=>{const i=e-n,s=t-r;return e===n&&t===n?[e,t]:e===n?[e,r+-s]:t===r?[n+-i,t]:[n+-i,r+-s]},groupValue:(e,t)=>{let n=e.length;for(;n>0;){const r=e[n-1];if(t in r)return r[t];n--}},svgColorForTarget:(e,t)=>{let n=null;return"path"===e?t.stroke?n=[t.stroke[0],t.stroke[1],t.stroke[2],1]:t.fill&&(n=[t.fill[0],t.fill[1],t.fill[2],1]):t.fill?n=[t.fill[0],t.fill[1],t.fill[2],1]:t.stroke&&(n=[t.stroke[0],t.stroke[1],t.stroke[2],1]),n}}},86846:(e,t,n)=>{const r=n(38223),{colors:i,transforms:s}=n(80715),{toArray:o}=n(10047),{ensureString:a}=n(39569),l=n(72812).rE,{cagLengthX:c,cagLengthY:h,svgColorForTarget:u}=n(43711),{svgSvg:d,svgRect:p,svgCircle:f,svgGroup:m,svgLine:g,svgPath:v,svgEllipse:x,svgPolygon:_,svgPolyline:b,svgUse:y}=n(29965),E=n(98706),S=n(17537);let M,A,T;const w=[],C=[],R=[];let P,D=!1,L=[1,1];const I=(e,t)=>{const{target:n,segments:r,pathSelfClosed:a}=e,l=C.length;C.push(t);let d=l;for(;d>0;)d--;let p=[];const f={svgUnitsPmm:L,svgUnitsX:M,svgUnitsY:A,svgUnitsV:T,level:l,target:n,svgGroups:C,segments:r,pathSelfClosed:a};for(d=0;d<t.objects.length;d++){const e=t.objects[d];let r=o(E(e,I,f));r=r.map((t=>{if("transforms"in e){let n=null,r=null,i=null;for(let t=0;t<e.transforms.length;t++){const s=e.transforms[t];"rotate"in s&&(n=s),"scale"in s&&(r=s),"translate"in s&&(i=s)}if(null!==r){let e=Math.abs(r.scale[0]),n=Math.abs(r.scale[1]);t=s.scale([e,n,1],t),e=r.scale[0],n=r.scale[1],e<0&&(t=s.mirrorX(t)),n<0&&(t=s.mirrorY(t))}if(null!==n){const e=0-.017453292519943295*n.rotate;t=s.rotateZ(e,t)}if(null!==i){const e=c(i.translate[0],L,M),n=0-h(i.translate[1],L,A);t=s.translate([e,n,0],t)}}const r=u(n,e);return r&&(t=i.colorize(r,t)),t})),p=p.concat(r)}return C.pop(),p},N=(e,t)=>{const{target:n,segments:r}=e,i=C.length;C.push(t);let s="  ",o=i;for(;o>0;)s+="  ",o--;let a="";0===i&&(a+="function main(params) {\n  let levels = {}\n  let paths = {}\n  let parts\n");const l="levels.l"+i;for(a+=`${s}${l} = []\n`,o=0;o<t.objects.length;o++){const e=t.objects[o],d="paths.p"+o;if(a+=S(e,N,{level:i,indent:s,ln:l,on:d,svgUnitsPmm:L,svgUnitsX:M,svgUnitsY:A,svgUnitsV:T,svgGroups:C,target:n,segments:r}),"transforms"in e){let t=null,n=null,r=null;for(let i=0;i<e.transforms.length;i++){const s=e.transforms[i];"rotate"in s&&(t=s),"scale"in s&&(n=s),"translate"in s&&(r=s)}if(null!==n){let e=Math.abs(n.scale[0]),t=Math.abs(n.scale[1]);a+=`${s}${d} = transforms.scale([${e}, ${t}, 1], ${d})\n`,e=n.scale[0],t=n.scale[1],e<0&&(a+=`${s}${d} = transforms.mirrorX(${d})\n`),t<0&&(a+=`${s}${d} = transforms.mirrorY(${d})\n`)}null!==t&&(a+=`${s}${d} = transforms.rotateZ(${0-.017453292519943295*t.rotate}, ${d})\n`),null!==r&&(a+=`${s}${d} = transforms.translate([${c(r.translate[0],L,M)}, ${0-h(r.translate[1],L,A)}, 0], ${d})\n`)}const p=u(n,e);p&&(a+=`${s}${d} = colors.colorize([${p}], ${d})\n`),a+=`${s}${l} = ${l}.concat(${d})\n\n`}return 0===i&&(a+=s+"return "+l+"\n",a+="}\n"),C.pop(),a},O=(e,t)=>{const n=new r.SaxesParser;return void 0!==t&&t>n.pxPmm&&(n.pxPmm=t),n.on("error",(e=>{console.log(`ERROR: SVG file, line ${n.line}, column ${n.column}`),console.log(e)})),n.on("opentag",(e=>{const r={SVG:d,G:m,RECT:p,CIRCLE:f,ELLIPSE:x,LINE:g,POLYLINE:b,POLYGON:_,PATH:v,USE:y,DEFS:()=>{D=!0},DESC:()=>{},TITLE:()=>{},STYLE:()=>{},undefined:()=>console.log("WARNING: unsupported SVG element: "+e.name)};e.attributes.position=[n.line+1,n.column+1];const i=e.name.toUpperCase(),s=r[i]?r[i](e.attributes,{svgObjects:w,customPxPmm:t}):void 0;if(s)if("id"in s&&(w[s.id]=s),"svg"===s.type)C.push(s),L=s.unitsPmm,M=s.viewW,A=s.viewH,T=s.viewP;else if(!0===D){if(R.length>0){const e=R.pop();"objects"in e&&e.objects.push(s),R.push(e)}"group"===s.type&&R.push(s)}else{if(C.length>0){const e=C.pop();"objects"in e&&e.objects.push(s),C.push(e)}"group"===s.type&&C.push(s)}})),n.on("closetag",(e=>{const t=()=>!0===D?R.pop():C.pop(),n={SVG:t,DEFS:()=>{D=!1},USE:t,G:t,undefined:()=>{}},r=e.name.toUpperCase(),i=n[r]?n[r]():void 0;0===C.length&&(P=i)})),n.on("end",(()=>{})),n.write(e).close(),n};e.exports={deserialize:(e,t)=>{const r={addMetaData:!0,filename:"svg",output:"script",pxPmm:n(9935).pxPmm,segments:32,target:"path",pathSelfClosed:"error",version:l};return e=Object.assign({},r,e),t=a(t),"script"===e.output?((e,t)=>{const{filename:n,version:r,pxPmm:i,addMetaData:s}=t;if(t&&t.statusCallback&&t.statusCallback({progress:0}),O(e,i),!P)throw new Error("SVG parsing failed, no valid SVG data retrieved");let o=s?`//\n  // producer: JSCAD SVG Deserializer ${r}\n  // date: ${new Date}\n  // source: ${n}\n  //\n`:"";return o+="const { colors, geometries, primitives, transforms } = require('@jscad/modeling')\n\n",t&&t.statusCallback&&t.statusCallback({progress:50}),o+=N(t,P),o+="\nmodule.exports = { main }",t&&t.statusCallback&&t.statusCallback({progress:100}),o})(t,e):((e,t)=>{const{pxPmm:n}=t;if(t&&t.statusCallback&&t.statusCallback({progress:0}),O(e,n),!P)throw new Error("SVG parsing failed, no valid SVG data retrieved");t&&t.statusCallback&&t.statusCallback({progress:50});const r=I(t,P);return t&&t.statusCallback&&t.statusCallback({progress:100}),r})(t,e)},extension:"svg"}},98706:(e,t,n)=>{const{geometries:r,primitives:i}=n(80715),{svg2cag:s,cagLengthX:o,cagLengthY:a,cagLengthP:l,reflect:c}=n(43711);e.exports=(e,t,n)=>{const{svgUnitsPmm:s,svgUnitsX:c,svgUnitsY:h,svgUnitsV:d,svgGroups:p,target:f,segments:m,pathSelfClosed:g}=n,v={group:e=>t({target:f,segments:m},e),rect:(e,t,n,s,l,c,h)=>{let u=o(e.x,t,n),d=0-a(e.y,t,s);const p=o(e.width,t,n),m=a(e.height,t,s),g=o(e.rx,t,n);let v;return p>0&&m>0&&(u+=p/2,d-=m/2,v=0===g?i.rectangle({center:[u,d],size:[p,m]}):i.roundedRectangle({center:[u,d],segments:h,size:[p,m],roundRadius:g}),"path"===f&&(v=r.path2.fromPoints({closed:!0},r.geom2.toPoints(v)))),v},circle:(e,t,n,s,c,h,u)=>{const d=o(e.x,t,n),p=0-a(e.y,t,s),m=l(e.radius,t,c);let g;return m>0&&(g=i.circle({center:[d,p],segments:u,radius:m}),"path"===f&&(g=r.path2.fromPoints({closed:!0},r.geom2.toPoints(g)))),g},ellipse:(e,t,n,s,l,c,h)=>{const u=o(e.rx,t,n),d=a(e.ry,t,s),p=o(e.cx,t,n),m=0-a(e.cy,t,s);let g;return u>0&&d>0&&(g=i.ellipse({center:[p,m],segments:h,radius:[u,d]}),"path"===f&&(g=r.path2.fromPoints({closed:!0},r.geom2.toPoints(g)))),g},line:(e,t,n,r,s)=>{const l=o(e.x1,t,n),c=0-a(e.y1,t,r),h=o(e.x2,t,n),u=0-a(e.y2,t,r);return i.line([[l,c],[h,u]])},polygon:(e,t,n,i)=>{const s=[];for(let r=0;r<e.points.length;r++){const l=e.points[r];if("x"in l&&"y"in l){const e=o(l.x,t,n),r=0-a(l.y,t,i);s.push([e,r])}}return"geom2"===f?r.geom2.fromPoints(s):r.path2.fromPoints({},s)},polyline:(e,t,n,r,s)=>{const l=[];for(let i=0;i<e.points.length;i++){const s=e.points[i];if("x"in s&&"y"in s){const e=o(s.x,t,n),i=0-a(s.y,t,r);l.push([e,i])}}return i.line(l)},path:(e,t,n,i,s,o,a)=>{const l=u(e,t,n,i,s,o,a,g);return Object.entries(l).sort(((e,t)=>e[0].localeCompare(t[0]))).map((e=>{const t=e[1];if("geom2"===f&&t.isClosed){const e=r.path2.toPoints(t).slice();return e.push(e[0]),r.geom2.fromPoints(e)}return t}))}};return v[e.type](e,s,c,h,d,p,m)};const h=(e,t)=>t?r.path2.appendPoints(e,t):r.path2.fromPoints({},e),u=(e,t,n,i,o,a,l,u)=>{const d={},p="path";let f=0,m=0,g=0,v=0,x=0,_=p+x,b=!1,y=0,E=0,S=0,M=0;const A=()=>{x++,_=p+x,b=!1},T=()=>{d[_]||(d[_]=r.path2.fromPoints({},[]))};for(let n=0;n<e.commands.length;n++){const i=e.commands[n],o=i.p;let a=0;switch(i.c){case"m":for(0===n&&(g=0,v=0),o.length>=a+2&&(g+=parseFloat(o[a++]),v+=parseFloat(o[a++]),A(),d[_]=h([s([g,v],t)]),f=g,m=v);o.length>=a+2;)g+=parseFloat(o[a++]),v+=parseFloat(o[a++]),d[_]=h([s([g,v],t)],d[_]);break;case"M":for(o.length>=a+2&&(g=parseFloat(o[a++]),v=parseFloat(o[a++]),A(),d[_]=h([s([g,v],t)]),f=g,m=v);o.length>=a+2;)g=parseFloat(o[a++]),v=parseFloat(o[a++]),d[_]=h([s([g,v],t)],d[_]);break;case"a":for(;o.length>=a+7;){const e=parseFloat(o[a++]),n=parseFloat(o[a++]),i=0-.017453292519943295*parseFloat(o[a++]),c="1"===o[a++],h="1"===o[a++];g+=parseFloat(o[a++]),v+=parseFloat(o[a++]),T(),d[_]=r.path2.appendArc({segments:l,endpoint:s([g,v],t),radius:s([e,n],t),xaxisrotation:i,clockwise:h,large:c},d[_])}break;case"A":for(;o.length>=a+7;){const e=parseFloat(o[a++]),n=parseFloat(o[a++]),i=0-.017453292519943295*parseFloat(o[a++]),c="1"===o[a++],h="1"===o[a++];g=parseFloat(o[a++]),v=parseFloat(o[a++]),T(),d[_]=r.path2.appendArc({segments:l,endpoint:s([g,v],t),radius:s([e,n],t),xaxisrotation:i,clockwise:h,large:c},d[_])}break;case"c":for(;o.length>=a+6;){const e=g+parseFloat(o[a++]),n=v+parseFloat(o[a++]);y=g+parseFloat(o[a++]),E=v+parseFloat(o[a++]),g+=parseFloat(o[a++]),v+=parseFloat(o[a++]),T(),d[_]=r.path2.appendBezier({segments:l,controlPoints:[s([e,n],t),s([y,E],t),s([g,v],t)]},d[_]);const i=c(y,E,g,v);y=i[0],E=i[1]}break;case"C":for(;o.length>=a+6;){const e=parseFloat(o[a++]),n=parseFloat(o[a++]);y=parseFloat(o[a++]),E=parseFloat(o[a++]),g=parseFloat(o[a++]),v=parseFloat(o[a++]),T(),d[_]=r.path2.appendBezier({segments:l,controlPoints:[s([e,n],t),s([y,E],t),s([g,v],t)]},d[_]);const i=c(y,E,g,v);y=i[0],E=i[1]}break;case"q":for(;o.length>=a+4;){const e=[g,v];S=g+parseFloat(o[a++]),M=v+parseFloat(o[a++]),g+=parseFloat(o[a++]),v+=parseFloat(o[a++]);const n=[e[0]+2/3*(S-e[0]),e[1]+2/3*(M-e[1])],i=[n[0]+1/3*(g-e[0]),n[1]+1/3*(v-e[1])];T(),d[_]=r.path2.appendBezier({segments:l,controlPoints:[s(n,t),s(i,t),s([g,v],t)]},d[_]);const h=c(S,M,g,v);S=h[0],M=h[1]}break;case"Q":for(;o.length>=a+4;){const e=[g,v];S=parseFloat(o[a++]),M=parseFloat(o[a++]),g=parseFloat(o[a++]),v=parseFloat(o[a++]);const n=[e[0]+2/3*(S-e[0]),e[1]+2/3*(M-e[1])],i=[n[0]+1/3*(g-e[0]),n[1]+1/3*(v-e[1])];T(),d[_]=r.path2.appendBezier({segments:l,controlPoints:[s(n,t),s(i,t),s([g,v],t)]},d[_]);const h=c(S,M,g,v);S=h[0],M=h[1]}break;case"t":for(;o.length>=a+2;){const e=[g,v];g+=parseFloat(o[a++]),v+=parseFloat(o[a++]);const n=[e[0]+2/3*(S-e[0]),e[1]+2/3*(M-e[1])],i=[n[0]+1/3*(g-e[0]),n[1]+1/3*(v-e[1])];T(),d[_]=r.path2.appendBezier({segments:l,controlPoints:[s(n,t),s(i,t),s([g,v],t)]},d[_]);const h=c(S,M,g,v);S=h[0],M=h[1]}break;case"T":for(;o.length>=a+2;){const e=[g,v];g=parseFloat(o[a++]),v=parseFloat(o[a++]);const n=[e[0]+2/3*(S-e[0]),e[1]+2/3*(M-e[1])],i=[n[0]+1/3*(g-e[0]),n[1]+1/3*(v-e[1])];T(),d[_]=r.path2.appendBezier({segments:l,controlPoints:[s(n,t),s(i,t),s([g,v],t)]},d[_]);const h=c(S,M,g,v);S=h[0],M=h[1]}break;case"s":for(;o.length>=a+4;){const e=y,n=E;y=g+parseFloat(o[a++]),E=v+parseFloat(o[a++]),g+=parseFloat(o[a++]),v+=parseFloat(o[a++]),T(),d[_]=r.path2.appendBezier({segments:l,controlPoints:[s([e,n],t),s([y,E],t),s([g,v],t)]},d[_]);const i=c(y,E,g,v);y=i[0],E=i[1]}break;case"S":for(;o.length>=a+4;){const e=y,n=E;y=parseFloat(o[a++]),E=parseFloat(o[a++]),g=parseFloat(o[a++]),v=parseFloat(o[a++]),T(),d[_]=r.path2.appendBezier({segments:l,controlPoints:[s([e,n],t),s([y,E],t),s([g,v],t)]},d[_]);const i=c(y,E,g,v);y=i[0],E=i[1]}break;case"h":for(;o.length>=a+1;)g+=parseFloat(o[a++]),d[_]=h([s([g,v],t)],d[_]);break;case"H":for(;o.length>=a+1;)g=parseFloat(o[a++]),d[_]=h([s([g,v],t)],d[_]);break;case"l":for(;o.length>=a+2;)g+=parseFloat(o[a++]),v+=parseFloat(o[a++]),d[_]=h([s([g,v],t)],d[_]);break;case"L":for(;o.length>=a+2;)g=parseFloat(o[a++]),v=parseFloat(o[a++]),d[_]=h([s([g,v],t)],d[_]);break;case"v":for(;o.length>=a+1;)v+=parseFloat(o[a++]),d[_]=h([s([g,v],t)],d[_]);break;case"V":for(;o.length>=a+1;)v=parseFloat(o[a++]),d[_]=h([s([g,v],t)],d[_]);break;case"z":case"Z":d[_]=r.path2.close(d[_]),g=f,v=m,b=!0;break;default:console.log("Warning: Unknow PATH command ["+i.c+"]")}const p=e=>"z"===e||"Z"===e;if(!0!==b&&d[_]&&d[_].isClosed){let t=e.commands[n+1];if(t&&!p(t.c))if("trim"===u)for(;t&&!p(t.c);)n++,t=e.commands[n+1];else{if("split"!==u)throw new Error(`Malformed svg path at ${e.position[0]}:${i.pos}. Path closed itself with command #${n} ${i.c}${o.join(" ")}`);A()}}}return d}},17537:(e,t,n)=>{const{svg2cag:r,cagLengthX:i,cagLengthY:s,cagLengthP:o,reflect:a}=n(43711);e.exports=(e,t,n)=>{const{level:r,indent:a,on:c,svgUnitsPmm:h,svgUnitsX:u,svgUnitsY:d,svgUnitsV:p,svgGroups:f,target:m,segments:g}=n,v={group:e=>{let n=t({target:m,segments:g},e);return n+=`${a}${c} = levels.l${r+1}\n`,n},rect:(e,t,n,r,o,l,h,u)=>{let d=i(e.x,t,n),p=0-s(e.y,t,r);const f=i(e.width,t,n),g=s(e.height,t,r),v=i(e.rx,t,n);let x;return f>0&&g>0&&(d=(d+f/2).toFixed(4),p=(p-g/2).toFixed(4),x=0===v?`${a}${c} = primitives.rectangle({center: [${d}, ${p}], size: [${f}, ${g}]}) // line ${e.position}\n`:`${a}${c} = primitives.roundedRectangle({center: [${d}, ${p}], segments: ${u}, size: [${f}, ${g}], roundRadius: ${v}}) // line ${e.position}\n`,"path"===m&&(x+=`${a}${c} = geometries.path2.fromPoints({closed: true}, geometries.geom2.toPoints(${c}))\n`)),x},circle:(e,t,n,r,l,h,u,d)=>{const p=i(e.x,t,n),f=0-s(e.y,t,r),g=o(e.radius,t,l);let v;return g>0&&(v=`${a}${c} = primitives.circle({center: [${p}, ${f}], segments: ${d}, radius: ${g}}) // line ${e.position}\n`,"path"===m&&(v+=`${a}${c} = geometries.path2.fromPoints({closed: true}, geometries.geom2.toPoints(${c}))\n`)),v},ellipse:(e,t,n,r,o,l,h,u)=>{const d=i(e.rx,t,n),p=s(e.ry,t,r),f=i(e.cx,t,n),g=0-s(e.cy,t,r);let v;return d>0&&p>0&&(v=`${a}${c} = primitives.ellipse({center: [${f}, ${g}], segments: ${u}, radius: [${d}, ${p}]}) // line ${e.position}\n`,"path"===m&&(v+=`${a}${c} = geometries.path2.fromPoints({closed: true}, geometries.geom2.toPoints(${c}))\n`)),v},line:(e,t,n,r,o)=>{const l=i(e.x1,t,n),h=0-s(e.y1,t,r),u=i(e.x2,t,n),d=0-s(e.y2,t,r);return`${a}${c} = primitives.line([[${l}, ${h}], [${u}, ${d}]]) // line ${e.position}\n`},polygon:(e,t,n,r)=>{let o=`${a}${c} = primitives.polygon({points: [\n`;for(let l=0;l<e.points.length;l++){const c=e.points[l];if("x"in c&&"y"in c){const e=i(c.x,t,n),l=0-s(c.y,t,r);o+=`${a}  [${e}, ${l}],\n`}}return o+=`${a}]}) // line ${e.position}\n`,"path"===m&&(o+=`${a}${c} = geometries.path2.fromPoints({closed: true}, geometries.geom2.toPoints(${c}))\n`),o},polyline:(e,t,n,r,o)=>{let l=`${a}${c} = geometries.path2.fromPoints({}, [\n`;for(let o=0;o<e.points.length;o++){const c=e.points[o];if("x"in c&&"y"in c){const e=i(c.x,t,n),o=0-s(c.y,t,r);l+=`${a}  [${e}, ${o}],\n`}}return l+=`${a}]) // line ${e.position}\n`,l},path:l};return v[e.type](e,h,u,d,p,n,f,g)};const l=(e,t,n,i,s,o,l,c)=>{const{indent:h,on:u,target:d}=o;let p=`${h}parts = [] // line ${e.position}\n`,f=0,m=0,g=0,v=0,x=0,_=u+x,b=!1,y=0,E=0,S=0,M=0;for(let n=0;n<e.commands.length;n++){const i=e.commands[n],s=i.p;switch(i.c){case"m":for(0===n&&(g=0,v=0),x>0&&!1===b&&(p+=`${h}parts.push(${_})\n`),s.length>=2&&(g+=parseFloat(s.shift()),v+=parseFloat(s.shift()),x++,b=!1,_=u+x,p+=`${h}${_} = geometries.path2.fromPoints({}, [[${r([g,v],t)}]])\n`,f=g,m=v);s.length>=2;)g+=parseFloat(s.shift()),v+=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendPoints([${r([g,v],t)}], ${_})\n`;break;case"M":for(x>0&&!1===b&&(p+=`${h}parts.push(${_})\n`),s.length>=2&&(g=parseFloat(s.shift()),v=parseFloat(s.shift()),x++,b=!1,_=u+x,p+=`${h}${_} = geometries.path2.fromPoints({}, [[${r([g,v],t)}]])\n`,f=g,m=v);s.length>=2;)g=parseFloat(s.shift()),v=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendPoints([${r([g,v],t)}], ${_})\n`;break;case"a":for(;s.length>=7;){const e=parseFloat(s.shift()),n=parseFloat(s.shift()),i=0-.017453292519943295*parseFloat(s.shift()),o="1"===s.shift(),a="1"===s.shift();g+=parseFloat(s.shift()),v+=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendArc({segments: ${c}, endpoint: [${r([g,v],t)}], radius: [${r([e,n],t)}], xaxisrotation: ${i}, clockwise: ${a}, large: ${o}}, ${_})\n`}break;case"A":for(;s.length>=7;){const e=parseFloat(s.shift()),n=parseFloat(s.shift()),i=0-.017453292519943295*parseFloat(s.shift()),o="1"===s.shift(),a="1"===s.shift();g=parseFloat(s.shift()),v=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendArc({segments: ${c}, endpoint: [${r([g,v],t)}], radius: [${r([e,n],t)}], xaxisrotation: ${i}, clockwise: ${a}, large: ${o}}, ${_})\n`}break;case"c":for(;s.length>=6;){const e=g+parseFloat(s.shift()),n=v+parseFloat(s.shift());y=g+parseFloat(s.shift()),E=v+parseFloat(s.shift()),g+=parseFloat(s.shift()),v+=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendBezier({segments: ${c}, controlPoints: [[${r([e,n],t)}], [${r([y,E],t)}], [${r([g,v],t)}]]}, ${_})\n`;const i=a(y,E,g,v);y=i[0],E=i[1]}break;case"C":for(;s.length>=6;){const e=parseFloat(s.shift()),n=parseFloat(s.shift());y=parseFloat(s.shift()),E=parseFloat(s.shift()),g=parseFloat(s.shift()),v=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendBezier({segments: ${c}, controlPoints: [[${r([e,n],t)}], [${r([y,E],t)}], [${r([g,v],t)}]]}, ${_})\n`;const i=a(y,E,g,v);y=i[0],E=i[1]}break;case"q":for(;s.length>=4;){const e=[g,v];S=g+parseFloat(s.shift()),M=v+parseFloat(s.shift()),g+=parseFloat(s.shift()),v+=parseFloat(s.shift());const n=[e[0]+2/3*(S-e[0]),e[1]+2/3*(M-e[1])],i=[n[0]+1/3*(g-e[0]),n[1]+1/3*(v-e[1])];p+=`${h}${_} = geometries.path2.appendBezier({segments: ${c}, controlPoints: [[${r(n,t)}], [${r(i,t)}], [${r([g,v],t)}]]}, ${_})\n`;const o=a(S,M,g,v);S=o[0],M=o[1]}break;case"Q":for(;s.length>=4;){const e=[g,v];S=parseFloat(s.shift()),M=parseFloat(s.shift()),g=parseFloat(s.shift()),v=parseFloat(s.shift());const n=[e[0]+2/3*(S-e[0]),e[1]+2/3*(M-e[1])],i=[n[0]+1/3*(g-e[0]),n[1]+1/3*(v-e[1])];p+=`${h}${_} = geometries.path2.appendBezier({segments: ${c}, controlPoints: [[${r(n,t)}], [${r(i,t)}], [${r([g,v],t)}]]}, ${_})\n`;const o=a(S,M,g,v);S=o[0],M=o[1]}break;case"t":for(;s.length>=2;){const e=[g,v];g+=parseFloat(s.shift()),v+=parseFloat(s.shift());const n=[e[0]+2/3*(S-e[0]),e[1]+2/3*(M-e[1])],i=[n[0]+1/3*(g-e[0]),n[1]+1/3*(v-e[1])];p+=`${h}${_} = geometries.path2.appendBezier({segments: ${c}, controlPoints: [[[${r(n,t)}], [${r(i,t)}], [${r([g,v],t)}]]}, ${_})\n`;const o=a(S,M,g,v);S=o[0],M=o[1]}break;case"T":for(;s.length>=2;){const e=[g,v];g=parseFloat(s.shift()),v=parseFloat(s.shift());const n=[e[0]+2/3*(S-e[0]),e[1]+2/3*(M-e[1])],i=[n[0]+1/3*(g-e[0]),n[1]+1/3*(v-e[1])];p+=`${h}${_} = geometries.path2.appendBezier({segments: ${c}, controlPoints: [[[${r(n,t)}], [${r(i,t)}], [${r([g,v],t)}]]}, ${_})\n`;const o=a(S,M,g,v);S=o[0],M=o[1]}break;case"s":for(;s.length>=4;){const e=y,n=E;y=g+parseFloat(s.shift()),E=v+parseFloat(s.shift()),g+=parseFloat(s.shift()),v+=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendBezier({segments: ${c}, controlPoints: [[${r([e,n],t)}], [${r([y,E],t)}], [${r([g,v],t)}]]}, ${_})\n`;const i=a(y,E,g,v);y=i[0],E=i[1]}break;case"S":for(;s.length>=4;){const e=y,n=E;y=parseFloat(s.shift()),E=parseFloat(s.shift()),g=parseFloat(s.shift()),v=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendBezier({segments: ${c}, controlPoints: [[${r([e,n],t)}], [${r([y,E],t)}], [${r([g,v],t)}]]}, ${_})\n`;const i=a(y,E,g,v);y=i[0],E=i[1]}break;case"h":for(;s.length>=1;)g+=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendPoints([[${r([g,v],t)}]], ${_})\n`;break;case"H":for(;s.length>=1;)g=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendPoints([[${r([g,v],t)}]], ${_})\n`;break;case"l":for(;s.length>=2;)g+=parseFloat(s.shift()),v+=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendPoints([[${r([g,v],t)}]], ${_})\n`;break;case"L":for(;s.length>=2;)g=parseFloat(s.shift()),v=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendPoints([[${r([g,v],t)}]], ${_})\n`;break;case"v":for(;s.length>=1;)v+=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendPoints([[${r([g,v],t)}]], ${_})\n`;break;case"V":for(;s.length>=1;)v=parseFloat(s.shift()),p+=`${h}${_} = geometries.path2.appendPoints([[${r([g,v],t)}]], ${_})\n`;break;case"z":case"Z":p+=`${h}${_} = geometries.path2.close(${_})\n`,"geom2"===d&&(p+=`${h}${_} = geometries.geom2.fromPoints(geometries.path2.toPoints(${_}))\n`),p+=`${h}parts.push(${_})\n`,g=f,v=m,b=!0;break;default:console.log("Warning: Unknow PATH command ["+i.c+"]")}}return x>0&&!1===b&&(p+=`${h}parts.push(${_})\n`),p+=`${h}${u} = parts\n`,p}},29965:(e,t,n)=>{const{cagColor:r,cssStyle:i,css2cag:s}=n(43711),{pxPmm:o}=n(9935),a=(e,t)=>{"id"in t&&(e.id=t.id),"position"in t&&(e.position=t.position)},l=(e,t)=>{if("display"in t&&(e.visible=t.display),"color"in t&&(e.fill=r(t.color),e.stroke=e.fill),"opacity"in t&&(e.opacity=t.opacity),"fill"in t)e.fill=r(t.fill);else{const n=i(t,"fill");n&&(e.fill=r(n))}if("fill-opacity"in t&&(e.opacity=t["fill-opacity"]),"stroke-width"in t)e.strokeWidth=t["stroke-width"];else{const n=i(t,"stroke-width");n&&(e.strokeWidth=n)}if("stroke"in t)e.stroke=r(t.stroke);else{const n=i(t,"stroke");n&&(e.stroke=r(n))}"stroke-opacity"in t&&(e.strokeOpacity=t["stroke-opacity"])},c=/\w+\(.+\)/i,h=(e,t)=>{let n=null;if("transform"in t)n=t.transform;else{const e=i(t,"transform");e&&(n=e)}if(null!==n){e.transforms=[];let t=c.exec(n);for(;null!==t;){const r=c.lastIndex,i=n.indexOf(")")+1;let s=n.slice(r,i);s=s.trim();const o=s.slice(0,s.indexOf("("));let a,l=s.slice(s.indexOf("(")+1,s.indexOf(")")).trim();switch(l=l.indexOf(",")>0?l.split(","):l.split(" "),o){case"translate":1===l.length&&l.push(0),a={translate:[l[0],l[1]]},e.transforms.push(a);break;case"scale":1===l.length&&l.push(l[0]),a={scale:[l[0],l[1]]},e.transforms.push(a);break;case"rotate":a={rotate:l},e.transforms.push(a)}n=n.slice(i,n.length),t=c.exec(n)}}},u=/([\d.-]+)[\s,]+([\d.-]+)[\s,]+([\d.-]+)[\s,]+([\d.-]+)/i,d=e=>{const t=[],n=/([\d\-+.]+)[\s,]+([\d\-+.]+)[\s,]*/i;e=e.trim();let r=n.exec(e);for(;null!==r;){let i=r[0];const s=n.lastIndex+i.length;i={x:r[1],y:r[2]},t.push(i),e=e.slice(s,e.length),r=n.exec(e)}return t};e.exports={svgCore:a,svgPresentation:l,svgSvg:(e,{customPxPmm:t})=>{const n={type:"svg",x:0,y:0,width:"100%",height:"100%",strokeWidth:"1"};if(n.unitsPmm=[o,o],"pxpmm"in e&&(n.pxPmm=e.pxpmm,n.unitsPmm=[n.pxPmm,n.pxPmm]),"width"in e&&(n.width=e.width),"height"in e&&(n.height=e.height),"viewBox"in e){const r=e.viewBox.trim(),i=u.exec(r);if(null!==i&&(n.viewX=parseFloat(i[1]),n.viewY=parseFloat(i[2]),n.viewW=parseFloat(i[3]),n.viewH=parseFloat(i[4])),n.width.indexOf("%")<0){let e=s(n.width,t);e=n.viewW/e,n.unitsPmm[0]=e}else{const e=n.unitsPmm[0]*(parseFloat(n.width)/100);n.unitsPmm[0]=e}if(n.height.indexOf("%")<0){let e=s(n.height,o);e=n.viewH/e,n.unitsPmm[1]=e}else{const e=n.unitsPmm[1]*(parseFloat(n.height)/100);n.unitsPmm[1]=e}}else n.viewX=0,n.viewY=0,n.viewW=1920/n.unitsPmm[0],n.viewH=1080/n.unitsPmm[1];return n.viewP=Math.sqrt(n.viewW*n.viewW+n.viewH*n.viewH)/Math.SQRT2,a(n,e),l(n,e),n.objects=[],n},svgRect:e=>{const t={type:"rect",x:"0",y:"0",rx:"0",ry:"0",width:"0",height:"0"};return"x"in e&&(t.x=e.x),"y"in e&&(t.y=e.y),"rx"in e&&(t.rx=e.rx,"ry"in e||(t.ry=t.rx)),"ry"in e&&(t.ry=e.ry,"rx"in e||(t.rx=t.ry)),t.rx!==t.ry&&console.log("Warning: Unsupported RECT with rx and ry radius"),"width"in e&&(t.width=e.width),"height"in e&&(t.height=e.height),h(t,e),a(t,e),l(t,e),t},svgCircle:e=>{const t={type:"circle",x:"0",y:"0",radius:"0"};return"cx"in e&&(t.x=e.cx),"cy"in e&&(t.y=e.cy),"r"in e&&(t.radius=e.r),h(t,e),a(t,e),l(t,e),t},svgEllipse:e=>{const t={type:"ellipse",cx:"0",cy:"0",rx:"0",ry:"0"};return"cx"in e&&(t.cx=e.cx),"cy"in e&&(t.cy=e.cy),"rx"in e&&(t.rx=e.rx),"ry"in e&&(t.ry=e.ry),h(t,e),a(t,e),l(t,e),t},svgLine:e=>{const t={type:"line",x1:"0",y1:"0",x2:"0",y2:"0"};return"x1"in e&&(t.x1=e.x1),"y1"in e&&(t.y1=e.y1),"x2"in e&&(t.x2=e.x2),"y2"in e&&(t.y2=e.y2),h(t,e),a(t,e),l(t,e),t},svgPolyline:e=>{const t={type:"polyline"};return h(t,e),a(t,e),l(t,e),"points"in e&&(t.points=d(e.points)),t},svgPolygon:e=>{const t={type:"polygon"};return h(t,e),a(t,e),l(t,e),"points"in e&&(t.points=d(e.points)),t},svgGroup:e=>{const t={type:"group"};if(h(t,e),a(t,e),l(t,e),"x"in e||"y"in e){let n="0",r="0";"x"in e&&(n=e.x),"y"in e&&(r=e.y),"transforms"in t||(t.transforms=[]);const i={translate:[n,r]};t.transforms.push(i)}return t.objects=[],t},svgPath:e=>{const t={type:"path"};if(h(t,e),a(t,e),l(t,e),t.commands=[],"d"in e){let n=null,r="",i=0;const s=e.d.length,o=e.position[1]-s-2;for(;i<s;){const s=e.d[i];switch(s){case"-":r.length>0&&(n.p.push(r),r=""),r+=s;break;case".":r.length>0&&r.indexOf(".")>=0&&(n.p.push(r),r=""),r+=s;break;case"0":case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":r+=s;break;case"a":case"A":case"c":case"C":case"h":case"H":case"l":case"L":case"v":case"V":case"m":case"M":case"q":case"Q":case"s":case"S":case"t":case"T":case"z":case"Z":null!==n&&(r.length>0&&(n.p.push(r),r=""),t.commands.push(n)),n={c:s,p:[],pos:i+o};break;case",":case" ":case"\n":null!==n&&r.length>0&&(n.p.push(r),r="")}i++}i===s&&null!==n&&(r.length>0&&n.p.push(r),t.commands.push(n))}return t},svgUse:(e,{svgObjects:t})=>{const n={type:"group"};if(h(n,e),a(n,e),l(n,e),"x"in e||"y"in e){let t="0",r="0";"x"in e&&(t=e.x),"y"in e&&(r=e.y),"transforms"in n||(n.transforms=[]);const i={translate:[t,r]};n.transforms.push(i)}if(n.objects=[],"xlink:href"in e){let r=e["xlink:href"];"#"===r[0]&&(r=r.slice(1,r.length)),void 0!==t[r]&&(r=t[r],r=JSON.parse(JSON.stringify(r)),n.objects.push(r))}return n}}},5936:(e,t,n)=>{const{geometries:r,maths:i,measurements:s,utils:o}=n(80715),a=n(95717),l=n(40619).rE,c=(e,t,n,r)=>{const i=e-n,s=t-r;return e===n&&t===n?[e,t]:e===n?[e,r-s]:t===r?[n- -i,t]:[n- -i,r-s]},h=(e,t,n)=>{const i=r.geom2.toOutlines(e).map((e=>r.path2.fromPoints({closed:!0},e)));return n.color="black",e.color&&(n.color=f(e.color)),n.id=null,e.id&&(n.id=e.id),n.class=null,e.class&&(n.class=e.class),u(i,t,n)},u=(e,t,n)=>{let r="";e.forEach((e=>r+=p(e,t,n)));const i={fill:n.color,d:r};return n.id&&(i.id=n.id),n.class&&(i.class=n.class),["g",["path",i]]},d=(e,t,n)=>e.reduce(((e,r,i)=>{const s={d:p(r,t,n)};return r.color&&(s.stroke=f(r.color)),r.id&&(s.id=r.id),r.class&&(s.class=r.class),e.concat([["path",s]])}),["g"]),p=(e,t,n)=>{let r="";const i=e.points.length+(e.isClosed?1:0);for(let s=0;s<i;s++){let i=s;i>=e.points.length&&(i-=e.points.length);const o=e.points[i],a=[o[0]+t[0],o[1]+t[1]],l=c(a[0],a[1],0,0),h=Math.round(l[0]*n.decimals)/n.decimals,u=Math.round(l[1]*n.decimals)/n.decimals;r+=s>0?`L${h} ${u}`:`M${h} ${u}`}return r},f=e=>`rgba(${255*e[0]},${255*e[1]},${255*e[2]},${e[3]})`;e.exports={serialize:(e,...t)=>{const n={unit:"mm",decimals:1e4,version:l,statusCallback:null};e=Object.assign({},n,e);const c=(t=o.flatten(t)).filter((e=>r.geom2.isA(e)||r.path2.isA(e)));if(0===c.length)throw new Error("only 2D geometries can be serialized to SVG");t.length!==c.length&&console.warn("some objects could not be serialized to SVG"),e.statusCallback&&e.statusCallback({progress:0});const u=(e=>{const t=s.measureBoundingBox(e);return 1===e.length?t:t.reduce(((e,t)=>(i.vec3.min(e[0],e[0],t[0]),i.vec3.max(e[1],e[1],t[1]),e)),[[0,0,0],[0,0,0]])})(c);let p=0,f=0;u&&(p=Math.round((u[1][0]-u[0][0])*e.decimals)/e.decimals,f=Math.round((u[1][1]-u[0][1])*e.decimals)/e.decimals);let m=["svg",{width:p+e.unit,height:f+e.unit,viewBox:"0 0 "+p+" "+f,fill:"none","fill-rule":"evenodd","stroke-width":"0.1px",version:"1.1",baseProfile:"tiny",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink"}];u&&(m=m.concat(((e,t,n)=>{const i=0-t[0][0],s=0-t[1][1],o=[];return e.forEach(((t,a)=>{n.statusCallback&&n.statusCallback({progress:100*a/e.length}),r.geom2.isA(t)&&o.push(h(t,[i,s],n)),r.path2.isA(t)&&o.push(d([t],[i,s],n))})),o})(c,u,e)));const g=`<?xml version="1.0" encoding="UTF-8"?>\n\x3c!-- Created by JSCAD SVG Serializer --\x3e\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1 Tiny//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11-tiny.dtd">\n${a(m,2)}`;return e.statusCallback&&e.statusCallback({progress:100}),[g]},mimeType:"image/svg+xml"}},95717:e=>{"use strict";e.exports=function(e,t){const n=t>0?"\n":"",r=function(e){if(!(e>0))return e=>e;var t=" ".repeat(e);return e=>{if("string"!=typeof e)return e;const n=e.split("\n");return 1===n.length?t+e:n.map((e=>""===e.trim()?e:t+e)).join("\n")}}(t);return function e(t){let i,s="",o=!0;return t.some(((t,r,a)=>{if(0===r)return i="<"+t,1===a.length;if(1===r){if((l=t)&&"[object Object]"===Object.prototype.toString.call(l))return Object.keys(t).map((e=>{let n=t[e];Array.isArray(n)&&(n=n.join(" ")),i+=" "+e+'="'+n+'"'})),2===a.length||void(i+=">");i+=">"}var l;switch(typeof t){case"string":case"number":case"boolean":case"undefined":return void(s+=t+n)}o=!1,s+=e(t)}))?i+"/>"+n:o?i+s.split("\n").filter((e=>""!==e.trim())).join("\n")+"</"+t[0]+">"+n:i+n+r(s)+"</"+t[0]+">"+n}(e)}},12800:e=>{e.exports={inchMM:1/.03937}},39513:(e,t,n)=>{const{maths:r}=n(80715);e.exports=(e,t,n,i,s)=>{const o=r.mat4.create(),a=r.mat4.create();return r.mat4.multiply(o,o,r.mat4.fromTranslation(a,s)),r.mat4.multiply(o,o,r.mat4.fromTranslation(a,e)),r.mat4.multiply(o,o,r.mat4.fromRotation(a,t[3],t)),r.mat4.multiply(o,o,r.mat4.fromRotation(a,i[3],i)),r.mat4.multiply(o,o,r.mat4.fromScaling(a,n)),r.mat4.multiply(o,o,r.mat4.fromRotation(a,i[3],r.vec3.negate(r.vec3.create(),i))),r.mat4.multiply(o,o,r.mat4.fromTranslation(a,r.vec3.negate(r.vec3.create(),e))),o}},45269:(e,t,n)=>{const{extrusions:r,geometries:i,maths:s}=n(80715),{mat4:o,vec3:a,utils:l}=s,{extrudeFromSlices:c,slice:h}=r,u=e=>e[0]+0===0&&e[1]+0===0&&e[2]+0===0,d=(e,t,n,r)=>{const i=a.subtract(a.create(),r,n),s=a.subtract(a.create(),t,n);return a.normalize(e,a.cross(e,i,s))};e.exports=e=>{let{beginCap:t,endCap:n,crossSection:r,orientations:s,scales:p,spine:f}=Object.assign({},e);if(l.area(r)<0&&r.reverse(),1===p.length&&(p=f.map((e=>p[0]))),1===s.length&&(s=f.map((e=>s[0]))),f.length!==p.length||f.length!==s.length)throw new Error(`invalid X3D specification; spine scale orientaion length must be the same; ${f.length}`);const m=i.geom2.fromPoints(r),g=h.fromSides(i.geom2.toSides(m));let v=(e=>{const t=e.length,n=a.equals(e[0],e[t-1]),r=[];for(let i=0;i<t;i++){const s=a.create();0===i?n?a.normalize(s,a.subtract(s,e[1],e[t-2])):a.normalize(s,a.subtract(s,e[1],e[0])):i===t-1?n?a.normalize(s,a.subtract(s,e[1],e[t-2])):a.normalize(s,a.subtract(s,e[t-1],e[t-2])):a.normalize(s,a.subtract(s,e[i+1],e[i-1])),r.push(s)}return r})(f),x=(e=>{const t=e.length,n=a.equals(e[0],e[t-1]),r=[];let i;for(let s=0;s<t;s++){const o=a.create();0===s?n?d(o,e[t-2],e[0],e[1]):t>2&&d(o,e[0],e[1],e[2]):s===t-1?n?d(o,e[t-2],e[0],e[1]):t>2&&d(o,e[t-3],e[t-2],e[t-1]):d(o,e[s-1],e[s],e[s+1]),i&&a.dot(i,o)<0&&a.negate(o,o),r.push(o),i=o}if(u(r[0]))for(let e=1;e<r.length;e++)if(!u(r[e])){r[0]=r[e];break}for(let e=1;e<r.length;e++)u(r[e])&&!u(r[e-1])&&a.clone(r[e],r[e-1]);return r})(f),_=((e,t)=>{const n=[];for(let r=0;r<e.length;r++){const i=a.create();n.push(a.normalize(i,a.cross(i,e[r],t[r])))}return n})(v,x);const b=[0,1,0],y=o.fromVectorRotation(o.create(),a.fromValues(0,0,1),b);return x.reduce(((e,t)=>e&&u(t)),!0)&&(a.subtract(b,f[1],f[0]),o.fromVectorRotation(y,a.fromValues(0,0,1),b),_=_.map((e=>[1,0,0])),v=v.map((e=>[0,1,0])),x=x.map((e=>[0,0,1]))),c({numberOfSlices:f.length,capStart:t,capEnd:n,callback:function(e,t,n){const r=f[t],i=a.fromVec2(a.create(),p[t],1),l=s[t],c=_[t],u=v[t],d=x[t],m=o.fromTranslation(o.create(),r),g=o.fromScaling(o.create(),i),b=((e,t,n,r)=>(e[0]=t[0],e[1]=n[0],e[2]=r[0],e[3]=0,e[4]=t[1],e[5]=n[1],e[6]=r[1],e[7]=0,e[8]=t[2],e[9]=n[2],e[10]=r[2],e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e))(o.create(),c,u,d),E=o.fromRotation(o.create(),l[3],l),S=o.create();o.multiply(S,y,S),o.multiply(S,b,S),o.multiply(S,E,S),o.multiply(S,m,S);let M=n;return M=h.transform(g,M),M=h.transform(S,M),M}},g)}},82745:(e,t,n)=>{const{ensureString:r}=n(39569),i=n(86587).rE,s=n(18135),o=n(389);e.exports={deserialize:(e,t)=>{const n={filename:"x3d",output:"script",version:i,flatten:!0,addMetaData:!0};return e=Object.assign({},n,e),t=r(t),"script"===e.output?s(e,t):o(e,t)},extension:"x3d"}},389:(e,t,n)=>{const{flatten:r}=n(10047),i=n(59966),s=n(5711),{x3dTypes:o}=n(69777);e.exports=(e,t)=>{const a={pxPmm:n(12800).pxPmm};e=Object.assign({},a,e);const{pxPmm:l}=e;e&&e.statusCallback&&e.statusCallback({progress:0});const{x3dObj:c}=i(t,l);if(c.definition!==o.X3D||!c.objects)throw new Error("X3D malformed");if(c.objects.length<1||c.objects[0].definition!==o.SCENE)throw new Error("X3D did not define a SCENE");e&&e.statusCallback&&e.statusCallback({progress:50});const h=c.objects[0].objects;let u=s(e,h);return e.flatten&&(u=r(u)),e&&e.statusCallback&&e.statusCallback({progress:100}),u}},5711:(e,t,n)=>{const{colors:r,transforms:i}=n(80715),s=n(39513),{x3dTypes:o}=n(69777),{findColor:a}=n(40362),l=n(24692),{instantiateLine:c}=n(22775),{instantiateMesh:h}=n(21632),u=new Map,d=(e,t)=>{let n;switch(t.definition){case o.TRANSFORM:n=((e,t)=>{const n=t.objects.map((t=>d(e,t))).filter((e=>null!=e));if(0===n.length)return null;const r=s(t.center,t.rotation,t.scale,t.scaleOrientation,t.translation);return n.map((e=>{const t=e.color;return e=i.transform(r,e),t&&(e.color=t),e}))})(e,t);break;case o.SHAPE:n=((e,t)=>{const n=t.objects,i=a(n,e);let s=l(e,n);return s||(s=h(e,n)),s||(s=c(e,n)),s||(s=null),s&&i&&(s=r.colorize(i,s)),s})(e,t);break;case o.GROUP:n=((e,t)=>{const n=t.objects.map((t=>d(e,t))).filter((e=>null!=e));return 0===n.length?null:n})(e,t);break;default:console.log("WARNING: unknown definition: "+t.definition)}return n};e.exports=(e,t)=>{const n=t.map((t=>d(e,t))).filter((e=>null!=e));return u.clear(),n}},22775:(e,t,n)=>{const r=n(80715),{createColors:i,findNode:s}=n(40362),{x3dTypes:o}=n(69777),a=(e,t)=>{let n=s(o.INDEXEDLINESET,t);if(n){const e=s(o.COORDINATE,n.objects),t=n.indexes,r=s(o.COLOR,n.objects);if(e&&t){const s=t.map((t=>{let n=t.map((t=>e.points[t]));return n.findIndex((e=>0!==e[2]))>=0&&(console.warn("WARNING: unsupported 3D indexed line set was ignored"),n=[]),n}));return!0===n.colorPerVertex?n.colorIndex=t:n.colorIndex=t.map(((e,t)=>t)),{pointsSet:s,colors:i(n,r)}}}if(n=s(o.LINESET,t),n){const e=s(o.COORDINATE,n.objects),t=s(o.COLOR,n.objects),r=n.vertexCount;if(e&&r){let s=0;const o=r.map((t=>{let n=[];for(let r=0;r<t;r++)n.push(e.points[s]),s++;return n.findIndex((e=>0!==e[2]))>=0&&(console.warn("WARNING: unsupported 3D line set was ignored"),n=[]),n}));if(!0===n.colorPerVertex){let e=0;n.colorIndex=r.map((t=>{const n=[];for(let r=0;r<t;r++)n.push(e),e++;return n}))}else n.colorIndex=o.map(((e,t)=>t));return{pointsSet:o,colors:i(n,t)}}}return null};e.exports={convertLine:a,instantiateLine:(e,t)=>{let n;const i=a(0,t);if(i){const{pointsSet:e,colors:t}=i;n=e.map(((e,n)=>{let i;return i=t?r.colors.colorize(t[n],r.primitives.line(e)):r.primitives.line(e),i}))}return n}}},21632:(e,t,n)=>{const{primitives:r}=n(80715),{x3dTypes:i}=n(69777),{findNode:s,createColors:o}=n(40362),a=(e,t)=>{let n=s(i.TRIANGLESET,t);if(n){const e=s(i.COORDINATE,n.objects),t=s(i.COLOR,n.objects);if(e){const r=e.points,i=r.length,s=Math.trunc(i/3),a=[];for(let e=0;e<s;e++){const t=3*e;a.push([t,t+1,t+2])}const l=n.ccw?"outward":"inward";return n.colorIndex=a,{type:"triangles",points:r,faces:a,colors:o(n,t),orientation:l}}}if(n=s(i.TRIANGLEFANSET,t),n){const e=n.fanCount,t=s(i.COORDINATE,n.objects),r=s(i.COLOR,n.objects);if(t){const i=t.points,s=e.length,a=[];let l=0;for(let t=0;t<s;t++){const n=Math.trunc(e[t]);for(let e=1;e<n-1;e++)a.push([l,l+e,l+e+1]);l+=n}const c=n.ccw?"outward":"inward";return n.colorIndex=a,{type:`triangle fans (${s})`,points:i,faces:a,colors:o(n,r),orientation:c}}}if(n=s(i.TRIANGLESTRIPSET,t),n){const e=n.stripCount,t=s(i.COORDINATE,n.objects),r=s(i.COLOR,n.objects);if(t){const i=t.points,s=e.length,a=[];let l=0;for(let t=0;t<s;t++){const n=Math.trunc(e[t]);for(let e=0;e<n-2;e++){const t=[l+e,l+e+1,l+e+2];e%2==1&&t.reverse(),a.push(t)}l+=n}return n.colorIndex=a,{type:`triangle strip (${s})`,points:i,faces:a,colors:o(n,r),orientation:n.ccw?"outward":"inward"}}}if(n=s(i.QUADSET,t),n){const e=s(i.COORDINATE,n.objects),t=s(i.COLOR,n.objects);if(e){const r=e.points,i=r.length,s=Math.trunc(i/4),a=[];for(let e=0;e<s;e++){const t=4*e;a.push([t,t+1,t+2,t+3])}return n.colorIndex=a,{type:`quad (${s})`,points:r,faces:a,colors:o(n,t),orientation:n.ccw?"outward":"inward"}}}if(n=s(i.INDEXEDTRIANGLESET,t),n){const e=s(i.COORDINATE,n.objects),t=s(i.COLOR,n.objects),r=n.index;if(e&&r&&r.length>2){const i=e.points,s=Math.trunc(r.length/3),a=[];for(let e=0;e<s;e++){const t=3*e;a.push([r[t],r[t+1],r[t+2]])}return n.colorIndex=a,{type:"indexed triangle",points:i,faces:a,colors:o(n,t),orientation:n.ccw?"outward":"inward"}}}if(n=s(i.INDEXEDTRIANGLEFANSET,t),n){const e=s(i.COORDINATE,n.objects),t=s(i.COLOR,n.objects),r=n.fans;if(e&&r&&r.length>0){const i=e.points,s=r.length,a=[];for(let e=0;e<s;e++){const t=r[e],n=t.length;for(let e=1;e<n-1;e++)a.push([t[0],t[e],t[e+1]])}return n.colorIndex=a,{type:`indexed triangle fan (${s})`,points:i,faces:a,colors:o(n,t),orientation:n.ccw?"outward":"inward"}}}if(n=s(i.INDEXEDTRIANGLESTRIPSET,t),n){const e=s(i.COORDINATE,n.objects),t=s(i.COLOR,n.objects),r=n.strips;if(e&&r&&r.length>0){const i=e.points,s=r.length,a=[];for(let e=0;e<s;e++){const t=r[e],n=t.length;for(let e=0;e<n-2;e++){const n=[t[e],t[e+1],t[e+2]];e%2==1&&n.reverse(),a.push(n)}}return n.colorIndex=a,{type:`indexed triangle strip (${s})`,points:i,faces:a,colors:o(n,t),orientation:n.ccw?"outward":"inward"}}}if(n=s(i.INDEXEDQUADSET,t),n){const e=s(i.COORDINATE,n.objects),t=s(i.COLOR,n.objects),r=n.index;if(e&&r&&r.length>3){const i=e.points,s=Math.trunc(r.length/4),a=[];for(let e=0;e<s;e++){const t=4*e;a.push([r[t],r[t+1],r[t+2],r[t+3]])}return n.colorIndex=a,{type:`indexed quad (${s})`,points:i,faces:a,colors:o(n,t),orientation:n.ccw?"outward":"inward"}}}if(n=s(i.INDEXEDFACESET,t),n){const e=s(i.COORDINATE,n.objects),t=n.faces,r=s(i.COLOR,n.objects);if(e&&t&&t.length>0){const i=e.points;return{type:`indexed faces (${t.length})`,points:i,faces:t,colors:o(n,r),orientation:n.ccw?"outward":"inward"}}}if(n=s(i.ELEVATIONGRID,t),n){const e=n.height,t=s(i.COLOR,n.objects);if(e&&e.length>0){const r=n.xDimension,i=n.xSpacing,s=n.zDimension,a=n.zSpacing,l=[];let c=0;for(let t=0;t<s;++t)for(let n=0;n<r;++n){const r=n*i,s=t*a,o=e[c];c++,l.push([r,o,s])}const h=[];for(let t=0;t<s-1;++t)for(let n=0;n<r-1;++n){const i=n+t*r,s=n+1+t*r,o=n+(t+1)*r,a=n+1+(t+1)*r,l=[Math.abs(e[i]),Math.abs(e[s]),Math.abs(e[o]),Math.abs(e[a])];let c=0;l[1]>=l[0]&&l[1]>=l[2]&&l[1]>=l[3]&&(c=1),l[2]>=l[0]&&l[2]>=l[1]&&l[2]>=l[3]&&(c=2),l[3]>=l[0]&&l[3]>=l[1]&&l[3]>=l[2]&&(c=3),0===c&&h.push([i,a,s],[i,o,a]),1===c&&h.push([s,o,a],[s,i,o]),2===c&&h.push([o,s,i],[o,a,s]),3===c&&h.push([a,i,o],[a,s,i])}const u=n.ccw?"outward":"inward";return!0===n.colorPerVertex&&(n.colorIndex=h),{type:`elevation grid (${r} X ${s})`,points:l,faces:h,colors:o(n,t),orientation:u}}}return null};e.exports={convertMesh:a,instantiateMesh:(e,t)=>{let n;const i=a(0,t);return i&&(n=r.polyhedron(i)),n}}},24692:(e,t,n)=>{const{booleans:r,geometries:i,primitives:s,transforms:o}=n(80715),{x3dTypes:a}=n(69777),{findNode:l}=n(40362),c=n(45269);e.exports=(e,t)=>{let n,h=l(a.BOX,t);if(h)return n=s.cuboid({size:h.size}),n;if(h=l(a.CONE,t),h)return n=o.rotateX(-Math.PI/2,s.cylinderElliptic({startRadius:[h.bottomRadius,h.bottomRadius],height:h.height,segments:h.subdivision,endRadius:[h.topRadius,h.topRadius]})),n;if(h=l(a.CYLINDER,t),h)return n=o.rotateX(-Math.PI/2,s.cylinder({radius:h.radius,height:h.height,segments:h.subdivision})),n;if(h=l(a.SPHERE,t),h)return n=s.sphere({radius:h.radius,segments:h.subdivision}),n;if(h=l(a.EXTRUSION,t),h)return n=c(h),n;if(h=l(a.ARC2D,t),h)return n=s.arc({radius:h.radius,startAngle:h.startAngle,endAngle:h.endAngle,segments:h.subdivision}),n;if(h=l(a.ARCCLOSE2D,t),h)return n="PIE"===h.closureType?s.circle({radius:h.radius,startAngle:h.startAngle,endAngle:h.endAngle,segments:h.subdivision}):i.geom2.fromPoints(i.path2.toPoints(i.path2.close(s.arc({radius:h.radius,startAngle:h.startAngle,endAngle:h.endAngle,segments:h.subdivision})))),n;if(h=l(a.CIRCLE2D,t),h)return n=s.arc({radius:h.radius,segments:h.subdivision}),n;if(h=l(a.DISK2D,t),h)return n=h.innerRadius===h.outerRadius?s.arc({radius:h.outerRadius,segments:h.subdivision}):0===h.innerRadius?s.circle({radius:h.outerRadius,segments:h.subdivision}):r.subtract(s.circle({radius:h.outerRadius,segments:h.subdivision}),s.circle({radius:h.innerRadius,segments:h.subdivision})),n;if(h=l(a.POLYLINE2D,t),h)return n=s.line([h.lineSegments]),n;if(h=l(a.RECTANGLE2D,t),h)return n=s.rectangle({size:h.size}),n;if(h=l(a.TRIANGLESET2D,t),h){const e=h.vertices,t=e.length,r=Math.trunc(t/3);n=[];for(let t=0;t<r;t+=3)n.push(i.geom2.fromPoints([e[t],e[t+1],e[t+2]]));return n}return n}},69777:(e,t,n)=>{const{maths:r}=n(80715),i={X3D:0,UNIT:1,META:2,SCENE:3,TRANSFORM:4,SHAPE:5,GROUP:6,APPEARANCE:7,TRIANGLESET:10,TRIANGLEFANSET:11,TRIANGLESTRIPSET:12,QUADSET:13,INDEXEDTRIANGLESET:14,INDEXEDTRIANGLEFANSET:15,INDEXEDTRIANGLESTRIPSET:16,INDEXEDQUADSET:17,ELEVATIONGRID:18,INDEXEDFACESET:19,LINESET:20,INDEXEDLINESET:21,BOX:50,CONE:51,CYLINDER:52,SPHERE:53,EXTRUSION:54,ARC2D:61,ARCCLOSE2D:62,CIRCLE2D:63,DISK2D:64,POLYLINE2D:65,RECTANGLE2D:66,TRIANGLESET2D:67,COLOR:91,COORDINATE:92,MATERIAL:93},s=e=>e.trim().replace(/,/g," ").split(/ +/).map((e=>parseFloat(e))),o=e=>e.replace(/,/g," ").trim().split(/ -1/).map((e=>s(e)));e.exports={x3dTypes:i,x3dX3D:e=>({definition:i.X3D,objects:[]}),x3dUnit:e=>{const t={definition:i.UNIT,category:"",name:"",conversionFactor:1};return e.category&&(t.category=e.category),e.name&&(t.name=e.name),e.conversionfactor&&(t.conversionFactor=e.conversionfactor),t},x3dMeta:e=>{const t={definition:i.META,content:"",name:""};return e.content&&(t.content=e.content),e.name&&(t.name=e.name),t},x3dScene:e=>({definition:i.SCENE,objects:[]}),x3dTransform:e=>{const t={definition:i.TRANSFORM,center:[0,0,0],rotation:[0,0,1,0],scale:[1,1,1],scaleOrientation:[0,0,1,0],translation:[0,0,0]};if(e.center){const n=s(e.center);n.length>2&&(t.center=n)}if(e.rotation){const n=s(e.rotation);n.length>3&&(t.rotation=n)}if(e.scale){const n=s(e.scale);n.length>2&&(t.scale=n)}if(e.scaleorientation){const n=s(e.scaleorientation);n.length>3&&(t.scaleOrientation=n)}if(e.translation){const n=s(e.translation);n.length>2&&(t.translation=n)}return t.objects=[],t},x3dShape:e=>({definition:i.SHAPE,objects:[]}),x3dGroup:e=>({definition:i.GROUP,objects:[]}),x3dBox:e=>{const t={definition:i.BOX,size:[2,2,2]};if(e.size){const n=s(e.size);n.length>2&&(t.size=n)}return t},x3dCone:e=>{const t=1e-5,n={definition:i.CONE,bottomRadius:1,height:2,subdivision:32,topRadius:t};return e.bottomRadius&&(n.bottomRadius=Math.max(parseFloat(e.bottomRadius),t)),e.height&&(n.height=parseFloat(e.height)),e.subdivision&&(n.subdivision=parseFloat(e.subdivision)),e.topRadius&&(n.topRadius=Math.max(parseFloat(e.topRadius),t)),n},x3dCylinder:e=>{const t={definition:i.CYLINDER,height:2,radius:1,subdivision:32};return e.height&&(t.height=parseFloat(e.height)),e.radius&&(t.radius=parseFloat(e.radius)),e.subdivision&&(t.subdivision=parseFloat(e.subdivision)),t},x3dSphere:e=>{const t={definition:i.SPHERE,radius:1,subdivision:24};if(e.radius&&(t.radius=parseFloat(e.radius)),e.subdivision){const n=s(e.subdivision);n.length>1&&(t.subdivision=Math.max(...n))}return t},x3dExtrusion:e=>{const t={definition:i.EXTRUSION,ccw:!0,beginCap:!0,endCap:!0,crossSection:[[1,1],[1,-1],[-1,-1],[-1,1],[1,1]],orientations:[[0,0,1,0]],scales:[[1,1]],spine:[[0,0,0],[0,1,0]]};if(e.ccw&&(t.ccw=e.ccw.includes("TRUE")||e.ccw.includes("true")),e.beginCap&&(t.beginCap=e.beginCap.includes("TRUE")||e.beginCap.includes("true")),e.endCap&&(t.endCap=e.endCap.includes("TRUE")||e.endCap.includes("true")),e.crossSection){const n=s(e.crossSection),i=Math.trunc(n.length/2),o=[];for(let e=0;e<i;e++){const t=2*e;o.push([n[t],n[t+1]])}t.ccw=r.utils.area(o)<0,t.crossSection=o}if(e.orientation){const n=s(e.orientation),r=Math.trunc(n.length/4),i=[];for(let e=0;e<r;e++){const t=4*e;i.push([n[t],n[t+1],n[t+2],n[t+3]])}t.orientations=i}if(e.scale){const n=s(e.scale),r=Math.trunc(n.length/2),i=[];for(let e=0;e<r;e++){const t=2*e;0===n[t]&&(n[t]=1e-6),0===n[t+1]&&(n[t+1]=1e-6),i.push([n[t],n[t+1]])}t.scales=i}if(e.spine){const n=s(e.spine),r=Math.trunc(n.length/3),i=[];for(let e=0;e<r;e++){const t=3*e;i.push([n[t],n[t+1],n[t+2]])}t.spine=i}return t},x3dArc2D:e=>{const t={definition:i.ARC2D,endAngle:Math.PI/2,radius:1,startAngle:0,subdivision:32};return e.endAngle&&(t.endAngle=parseFloat(e.endAngle)),e.radius&&(t.radius=parseFloat(e.radius)),e.startAngle&&(t.startAngle=parseFloat(e.startAngle)),e.subdivision&&(t.subdivision=parseFloat(e.subdivision)),t},x3dArcClose2D:e=>{const t={definition:i.ARCCLOSE2D,closureType:"PIE",endAngle:Math.PI/2,radius:1,startAngle:0,subdivision:32};return e.closureType&&(t.closureType=e.closureType),e.endAngle&&(t.endAngle=parseFloat(e.endAngle)),e.radius&&(t.radius=parseFloat(e.radius)),e.startAngle&&(t.startAngle=parseFloat(e.startAngle)),e.subdivision&&(t.subdivision=parseFloat(e.subdivision)),t},x3dCircle2D:e=>{const t={definition:i.CIRCLE2D,radius:1,subdivision:32};return e.radius&&(t.radius=parseFloat(e.radius)),e.subdivision&&(t.subdivision=parseFloat(e.subdivision)),t},x3dDisk2D:e=>{const t={definition:i.DISK2D,innerRadius:0,outerRadius:1,subdivision:32};return e.innerRadius&&(t.innerRadius=parseFloat(e.innerRadius)),e.outerRadius&&(t.outerRadius=parseFloat(e.outerRadius)),e.subdivision&&(t.subdivision=parseFloat(e.subdivision)),t},x3dPolyline2D:e=>{const t={definition:i.POLYLINE2D,lineSegments:[]};if(e.lineSegments){const n=s(e.lineSegments);for(let e=0;e<n.length;e+=2){const r=[n[e],n[e+1]];t.lineSegments.push(r)}}return t},x3dRectangle2D:e=>{const t={definition:i.RECTANGLE2D,size:[2,2]};if(e.size){const n=s(e.size);n.length>1&&(t.size=n)}return t},x3dTriangleSet2D:e=>{const t={definition:i.TRIANGLESET2D,vertices:[]};if(e.vertices){const n=s(e.vertices);for(let e=0;e<n.length;e+=2){const r=[n[e],n[e+1]];t.vertices.push(r)}}return t},x3dColor:e=>{const t={definition:i.COLOR,colors:[]};if(e.color){const n=s(e.color),r=n.length,i=Math.trunc(r/3);for(let e=0;e<i;e++){const r=3*e;t.colors.push([n[r],n[r+1],n[r+2]])}}return t},x3dCoordinate:e=>{const t={definition:i.COORDINATE,points:[]};if(e.point){const n=s(e.point),r=n.length,i=Math.trunc(r/3);for(let e=0;e<i;e++){const r=3*e;t.points.push([n[r],n[r+1],n[r+2]])}}return t},x3dTriangleSet:e=>{const t={definition:i.TRIANGLESET,ccw:!0,colorPerVertex:!0};return e.ccw&&(t.ccw=e.ccw.includes("TRUE")||e.ccw.includes("true")),t.objects=[],t},x3dTriangleFanSet:e=>{const t={definition:i.TRIANGLEFANSET,ccw:!0,fanCount:[],colorPerVertex:!0};return e.ccw&&(t.ccw=e.ccw.includes("TRUE")||e.ccw.includes("true")),e.fanCount&&(t.fanCount=s(e.fanCount)),t.objects=[],t},x3dTriangleStripSet:e=>{const t={definition:i.TRIANGLESTRIPSET,ccw:!0,stripCount:[],colorPerVertex:!0};return e.ccw&&(t.ccw=e.ccw.includes("TRUE")||e.ccw.includes("true")),e.stripCount&&(t.stripCount=s(e.stripCount)),t.objects=[],t},x3dQuadSet:e=>{const t={definition:i.QUADSET,ccw:!0,colorPerVertex:!0};return e.ccw&&(t.ccw=e.ccw.includes("TRUE")||e.ccw.includes("true")),t.objects=[],t},x3dIndexedTriangleSet:e=>{const t={definition:i.INDEXEDTRIANGLESET,ccw:!0,index:[],colorPerVertex:!0};return e.ccw&&(t.ccw=e.ccw.includes("TRUE")||e.ccw.includes("true")),e.index&&(t.index=s(e.index)),t.objects=[],t},x3dIndexedTriangleFanSet:e=>{const t={definition:i.INDEXEDTRIANGLEFANSET,ccw:!0,fans:[],colorPerVertex:!0};if(e.ccw&&(t.ccw=e.ccw.includes("TRUE")||e.ccw.includes("true")),e.index){const n=o(e.index);t.fans=n.filter((e=>e.length>2))}return t.objects=[],t},x3dIndexedTriangleStripSet:e=>{const t={definition:i.INDEXEDTRIANGLESTRIPSET,ccw:!0,strips:[],colorPerVertex:!0,objects:[]};if(e.ccw&&(t.ccw=e.ccw.includes("TRUE")||e.ccw.includes("true")),e.index){const n=o(e.index);t.strips=n.filter((e=>e.length>2))}return t},x3dIndexedQuadSet:e=>{const t={definition:i.INDEXEDQUADSET,ccw:!0,index:[],colorPerVertex:!0};return e.ccw&&(t.ccw=e.ccw.includes("TRUE")||e.ccw.includes("true")),e.index&&(t.index=s(e.index)),t.objects=[],t},x3dIndexedFaceSet:e=>{const t={definition:i.INDEXEDFACESET,ccw:!0,convex:!0,faces:[],colorPerVertex:!0,colorIndex:null};if(e.ccw&&(t.ccw=e.ccw.includes("TRUE")||e.ccw.includes("true")),e.convex&&(t.convex=e.convex.includes("TRUE")||e.convex.includes("true")),e.coordIndex){const n=o(e.coordIndex);t.faces=n.filter((e=>e.length>2))}if(e.colorPerVertex&&(t.colorPerVertex=e.colorPerVertex.includes("TRUE")||e.colorPerVertex.includes("true")),e.colorIndex)if(t.colorPerVertex){const n=o(e.colorIndex);t.colorIndex=n.filter((e=>e.length>2))}else t.colorIndex=s(e.colorIndex);else t.colorIndex=t.faces;return t.objects=[],t},x3dElevationGrid:e=>{const t={definition:i.ELEVATIONGRID,xDimension:2,zDimension:2,xSpacing:1,zSpacing:1,height:[0,0,0,0],ccw:!0,solid:!1,colorPerVertex:!0};return e.xDimension&&(t.xDimension=parseFloat(e.xDimension)),e.zDimension&&(t.zDimension=parseFloat(e.zDimension)),e.xSpacing&&(t.xSpacing=parseFloat(e.xSpacing)),e.zSpacing&&(t.zSpacing=parseFloat(e.zSpacing)),e.height&&(t.height=s(e.height)),e.ccw&&(t.ccw=e.ccw.includes("TRUE")||e.ccw.includes("true")),e.solid&&(t.solid=e.solid.includes("TRUE")||e.solid.includes("true")),e.colorPerVertex&&(t.colorPerVertex=e.colorPerVertex.includes("TRUE")||e.colorPerVertex.includes("true")),t.objects=[],t},x3dLineSet:e=>{const t={definition:i.LINESET,vertexCount:[],colorPerVertex:!0};return e.vertexCount&&(t.vertexCount=s(e.vertexCount)),e.colorPerVertex&&(t.colorPerVertex=e.colorPerVertex.includes("TRUE")||e.colorPerVertex.includes("true")),t.objects=[],t},x3dIndexedLineSet:e=>{const t={definition:i.INDEXEDLINESET,indexes:[],colorPerVertex:!0};if(e.coordIndex){const n=o(e.coordIndex);t.indexes=n.filter((e=>e.length>1))}return e.colorPerVertex&&(t.colorPerVertex=e.colorPerVertex.includes("TRUE")||e.colorPerVertex.includes("true")),t.objects=[],t},x3dAppearance:e=>({definition:i.APPEARANCE,objects:[]}),x3dMaterial:e=>{const t={definition:i.MATERIAL,color:[.8,.8,.8,1]};let n=1;if(e.transparency&&(n=1-e.transparency),e.diffuseColor){const r=s(e.diffuseColor);r.length>2&&(r.length<4&&r.push(n),t.color=r)}if(e.emissiveColor){const r=s(e.emissiveColor);r.length>2&&(r.length<4&&r.push(n),t.color=r)}return t}}},59966:(e,t,n)=>{const r=n(38223),{x3dTypes:i,x3dX3D:s,x3dUnit:o,x3dMeta:a,x3dScene:l,x3dTransform:c,x3dShape:h,x3dGroup:u,x3dBox:d,x3dCone:p,x3dCylinder:f,x3dSphere:m,x3dExtrusion:g,x3dArc2D:v,x3dArcClose2D:x,x3dCircle2D:_,x3dDisk2D:b,x3dPolyline2D:y,x3dRectangle2D:E,x3dTriangleSet2D:S,x3dColor:M,x3dCoordinate:A,x3dTriangleSet:T,x3dTriangleFanSet:w,x3dTriangleStripSet:C,x3dQuadSet:R,x3dIndexedTriangleSet:P,x3dIndexedTriangleFanSet:D,x3dIndexedTriangleStripSet:L,x3dIndexedQuadSet:I,x3dIndexedFaceSet:N,x3dElevationGrid:O,x3dLineSet:U,x3dIndexedLineSet:F,x3dAppearance:k,x3dMaterial:z}=n(69777),B={X3D:s,UNIT:o,META:a,SCENE:l,TRANSFORM:c,SHAPE:h,GROUP:u,STATICGROUP:u,BOX:d,CONE:p,CYLINDER:f,SPHERE:m,EXTRUSION:g,ARC2D:v,ARCCLOSE2D:x,CIRCLE2D:_,DISK2D:b,POLYLINE2D:y,RECTANGLE2D:E,TRIANGLESET2D:S,COLOR:M,COORDINATE:A,TRIANGLESET:T,TRIANGLEFANSET:w,TRIANGLESTRIPSET:C,QUADSET:R,INDEXEDTRIANGLESET:P,INDEXEDTRIANGLEFANSET:D,INDEXEDTRIANGLESTRIPSET:L,INDEXEDQUADSET:I,INDEXEDFACESET:N,ELEVATIONGRID:O,LINESET:U,INDEXEDLINESET:F,APPEARANCE:k,MATERIAL:z};let V=1;e.exports=(e,t)=>{const n=new r.SaxesParser,s=new Map;let o=null,a=i.X3D,l=null;const c=[],h={factor:1,name:"meters"},u={factor:1,name:"radians"};return n.on("error",(e=>{console.log(`error: line ${e.line}, column ${e.column}, bad character [${e.c}]`)})),n.on("opentag",(e=>{const t=e.name.toUpperCase();let n=B[t]?B[t](e.attributes,{x3dObjects:c}):null;if(n){if(n.id=("0000"+V++).slice(-4),e.attributes.USE){const t=e.attributes.USE;if(s.has(t)){const e=s.get(t);e.definition!==n.definition&&console.log(`WARNING: using a definition "${t}" of a different type; ${n.definition} vs ${e.definition}`),n=e}else console.log(`WARNING: definition "${t}" does not exist, using default for ${n.definition}`)}else if(e.attributes.DEF){const t=e.attributes.DEF;s.has(t)?console.log(`WARNING: redefintion of ${t} has been ignored`):s.set(t,n)}switch(n.definition){case i.SCENE:case i.TRANSFORM:case i.SHAPE:case i.APPEARANCE:case i.TRIANGLESET:case i.TRIANGLEFANSET:case i.TRIANGLESTRIPSET:case i.QUADSET:case i.INDEXEDTRIANGLESET:case i.INDEXEDTRIANGLEFANSET:case i.INDEXEDTRIANGLESTRIPSET:case i.INDEXEDQUADSET:case i.INDEXEDFACESET:case i.ELEVATIONGRID:case i.LINESET:case i.INDEXEDLINESET:case i.GROUP:a=n.definition}switch(a){case i.X3D:"objects"in n&&c.push(n),n.definition===i.UNIT&&("length"===n.category&&(h.factor=n.conversionFactor,h.name=n.name),"angle"===n.category&&(u.factor=n.conversionFactor,u.name=n.name));break;case i.SCENE:case i.TRANSFORM:case i.SHAPE:case i.GROUP:case i.APPEARANCE:case i.TRIANGLESET:case i.TRIANGLEFANSET:case i.TRIANGLESTRIPSET:case i.QUADSET:case i.INDEXEDTRIANGLESET:case i.INDEXEDTRIANGLEFANSET:case i.INDEXEDTRIANGLESTRIPSET:case i.INDEXEDQUADSET:case i.INDEXEDFACESET:case i.ELEVATIONGRID:case i.LINESET:case i.INDEXEDLINESET:if(c.length>0){const e=c.pop();"objects"in e&&e.objects.push(n),c.push(e),"objects"in n&&c.push(n)}break;default:console.log("WARNING: invalid X3D definition")}o=n}})),n.on("closetag",(e=>{switch(e.name.toUpperCase()){case"X3D":case"SCENE":case"TRANSFORM":case"SHAPE":case"GROUP":case"STATICGROUP":case"APPEARANCE":case"TRIANGLESET":case"TRIANGLEFANSET":case"TRIANGLESTRIPSET":case"QUADSET":case"INDEXEDTRIANGLESET":case"INDEXEDTRIANGLEFANSET":case"INDEXEDTRIANGLESTRIPSET":case"INDEXEDQUADSET":case"INDEXEDFACESET":case"ELEVATIONGRID":case"LINESET":case"INDEXEDLINESET":break;default:return}const t=()=>{c.length>0&&(a=c[c.length-1].definition)};let n=null;switch(a){case i.X3D:c.length>0&&(n=c.pop(),t()),0===c.length&&(n.length=h,n.angle=u,l=n);break;case i.SCENE:case i.TRANSFORM:case i.SHAPE:case i.GROUP:case i.APPEARANCE:case i.TRIANGLESET:case i.TRIANGLEFANSET:case i.TRIANGLESTRIPSET:case i.QUADSET:case i.INDEXEDTRIANGLESET:case i.INDEXEDTRIANGLEFANSET:case i.INDEXEDTRIANGLESTRIPSET:case i.INDEXEDQUADSET:case i.INDEXEDFACESET:case i.ELEVATIONGRID:case i.LINESET:case i.INDEXEDLINESET:c.length>0&&(n=c.pop(),t());break;default:console.log("WARNING: unhandled definition",a)}})),n.on("text",(e=>{null!==e&&(e=e.trim()).length>0&&o&&0!==a&&(o.value=e)})),n.on("end",(()=>{})),n.write(e).close(),{x3dObj:l,x3dMaterials:[],x3dTextures:[]}}},18135:(e,t,n)=>{const r=n(1513),{x3dTypes:i}=n(69777),s=n(59966);e.exports=(e,t)=>{const o={pxPmm:n(12800).pxPmm};e=Object.assign({},o,e);const{version:a,pxPmm:l,addMetaData:c,filename:h}=e;e&&e.statusCallback&&e.statusCallback({progress:0});const{x3dObj:u,x3dMaterials:d,x3dTextures:p}=s(t,l);let f=c?`//\n// Produced by JSCAD IO Library : X3D Deserializer (${a})\n// date: ${new Date}\n// source: ${h}\n//\n`:"";if(!u)throw new Error("X3D parsing failed, no valid X3D data retrieved");return e&&e.statusCallback&&e.statusCallback({progress:50}),f+=(e=>{if(e.definition!==i.X3D||!e.objects)throw new Error("X3D malformed");if(e.objects.length<1||e.objects[0].definition!==i.SCENE)throw new Error("X3D did not define a SCENE");const t=e.objects[0].objects,n=e.length,s=e.angle;let o="";o=`// Objects  : ${t.length}\n// Units : ${n.name} (${n.factor})\n// Angles : ${s.name} (${s.factor})\n\nconst {booleans, extrusions, geometries, maths, primitives, transforms, utils} = require('@jscad/modeling')\nconst { colorize } =  require('@jscad/modeling').colors\n\nconst applyTransform = (matrix, ...objects) => {\n  objects = utils.flatten(objects)\n  if (objects.length === 0) return objects\n\n  return objects.map((object) => {\n    const color = object.color\n    object = transforms.transform(matrix, object)\n    if (color) object.color = color\n    return object\n  })\n}\n\nconst main = () => {\n  let options = {}\n  let objects = []\n`;for(let e=0;e<t.length;e++)o+=`  objects.push(...createObjects${t[e].id}(options))\n`;return o+="  return objects\n}\n",o+=r({},t),o+="module.exports = {main}\n",o})(u),e&&e.statusCallback&&e.statusCallback({progress:100}),f}},1513:(e,t,n)=>{const r=n(39513),{x3dTypes:i}=n(69777),s=n(38398),o=[],a=(e,t)=>t.reduce(((t,n,l)=>t+((e,t)=>{if(o.includes(t.id))return"";o.push(t.id);let n="";switch(t.definition){case i.TRANSFORM:n+=((e,t)=>{let n=`\n// transform\nconst createObjects${t.id} = (options) => {\n  let objects = []\n`;const i=t.objects;for(let e=0;e<i.length;e++)n+=`  objects.push(...createObjects${i[e].id}(options))\n`;return n+=`\n  const matrix = [${r(t.center,t.rotation,t.scale,t.scaleOrientation,t.translation)}]\n  return applyTransform(matrix, objects)\n}\n`,n+=a(e,i),n})(e,t);break;case i.SHAPE:n+=s(e,t);break;case i.GROUP:n+=((e,t)=>{let n=`\n// group\nconst createObjects${t.id} = (options) => {\n  let objects = []\n`;const r=t.objects;for(let e=0;e<r.length;e++)n+=`  objects.push(...createObjects${r[e].id}(options))\n`;return n+="\n  return objects\n}\n",n+=a(e,r),n})(e,t);break;default:console.log("WARNING: unknown definition: "+t.definition)}return n})(e,n)),"");e.exports=a},40362:(e,t,n)=>{const{x3dTypes:r}=n(69777),i=(e,t)=>t.find((t=>t.definition===e)),s=e=>`[${e}]`;e.exports={findNode:i,findColor:(e,t)=>{const n=i(r.APPEARANCE,e);let s;return n&&(s=i(r.MATERIAL,n.objects),s)?s.color?s.color:null:(s=i(r.MATERIAL,e),s&&s.color?s.color:null)},createColors:(e,t)=>{if(!t)return null;if(!Array.isArray(e.colorIndex))return null;let n=null;var r,i;return!0===e.colorPerVertex?n=((e,t)=>{if(!Array.isArray(e)||!Array.isArray(t))return null;if(e.length<0||!Array.isArray(e[0]))return console.log("ERROR: WRONG FORMAT FOR VERTEXCOLORS"),null;const n=[];for(let r=0;r<e.length;r++){const i=e[r];let s=0,o=0,a=0;const l=1;for(let e=0;e<i.length;e++){const n=t[i[e]];n&&(s+=n[0],o+=n[1],a+=n[2])}const c=[s/i.length,o/i.length,a/i.length,l];n.push(c)}return n})(e.colorIndex,t.colors):(r=e.colorIndex,i=t.colors,n=Array.isArray(r)&&Array.isArray(i)?r.map((e=>i[e]?i[e]:null)):null),n},pointToString:s,pointsToString:e=>`[\n    ${e.map((e=>s(e))).join(",\n    ")}\n  ]`}},54093:(e,t,n)=>{const{pointsToString:r}=n(40362),{convertLine:i}=n(22775);e.exports=(e,t)=>{const n=i(e,t);if(n){const{pointsSet:e,colors:t}=n;let i="  let lines = []\n";return e.forEach(((e,n)=>{if(t){const s=t[n];i+=`  const line${n} = colorize([${s}], primitives.line(${r(e)}))\n  lines.push(line${n})\n`}else i+=`  const line${n} = primitives.line(${r(e)})\n  lines.push(line${n})\n`})),{primitive:"...lines",code:i}}return null}},14958:(e,t,n)=>{const{pointsToString:r}=n(40362),{convertMesh:i}=n(21632);e.exports=(e,t)=>{const n=i(e,t);if(n){const{type:e,points:t,faces:i,colors:s,orientation:o}=n;return((e,t,n,i,s)=>{const o=Array.isArray(i)?r(i):"null";return{primitive:"primitives.polyhedron({points, faces, colors, orientation})",code:`\n  // 3D ${e} set: ${t.length} points, ${n.length} faces\n  const points = ${r(t)}\n  const faces = ${r(n)}\n  const colors = ${o}\n  const orientation = '${s}'\n`}})(e,t,i,s,o)}return null}},38398:(e,t,n)=>{const{geometries:r}=n(80715),{geom3:i,poly3:s}=r,o=n(45269),{x3dTypes:a}=n(69777),{findNode:l,findColor:c,pointsToString:h}=n(40362),u=n(54093),d=n(14958);e.exports=(e,t)=>{let n=`\n// shape\nconst createObjects${t.id} = (options) => {\n  let objects = []\n`;const r=t.objects,p=c(r,e);let f,m=l(a.BOX,r);if(m)f=`primitives.cuboid({size: [${m.size}]})`;else if(m=l(a.CONE,r),m)n+=`  const shape = transforms.rotateX(-Math.PI/2, primitives.cylinderElliptic({startRadius: [${m.bottomRadius},${m.bottomRadius}], height: ${m.height}, segments: ${m.subdivision}, endRadius: [${m.topRadius}, ${m.topRadius}]}))\n`,f="shape";else if(m=l(a.CYLINDER,r),m)n+=`  const shape = transforms.rotateX(-Math.PI/2, primitives.cylinder({radius: ${m.radius}, height: ${m.height}, segments: ${m.subdivision}}))\n`,f="shape";else if(m=l(a.SPHERE,r),m)f=`primitives.sphere({radius: ${m.radius}, segments: ${m.subdivision}})`;else if(m=l(a.EXTRUSION,r),m){const e=o(m);n+=`  const polygons = [\n  ${i.toPolygons(e).map((e=>h(s.toPoints(e)))).join(",\n  ")}\n]\n`,f="geometries.geom3.fromPoints(polygons)"}if(!f)if(m=l(a.ARC2D,r),m)f=`primitives.arc({radius: ${m.radius}, startAngle: ${m.startAngle}, endAngle: ${m.endAngle}, segments: ${m.subdivision}})`;else if(m=l(a.ARCCLOSE2D,r),m)f="PIE"===m.closureType?`primitives.circle({radius: ${m.radius}, startAngle: ${m.startAngle}, endAngle: ${m.endAngle}, segments: ${m.subdivision}})`:`geometries.geom2.fromPoints(geometries.path2.toPoints(geometries.path2.close(primitives.arc({radius: ${m.radius}, startAngle: ${m.startAngle}, endAngle: ${m.endAngle}, segments: ${m.subdivision}}))))`;else if(m=l(a.CIRCLE2D,r),m)f=`primitives.arc({radius: ${m.radius}, segments: ${m.subdivision}})`;else if(m=l(a.DISK2D,r),m)f=m.innerRadius===m.outerRadius?`primitives.arc({radius: ${m.outerRadius}, segments: ${m.subdivision}})`:0===m.innerRadius?`primitives.circle({radius: ${m.outerRadius}, segments: ${m.subdivision}})`:`booleans.subtract(primitives.circle({radius: ${m.outerRadius}, segments: ${m.subdivision}}), primitives.circle({radius: ${m.innerRadius}, segments: ${m.subdivision}}))`;else if(m=l(a.POLYLINE2D,r),m)f=`primitives.line([[${m.lineSegments.join("], [")}]])`;else if(m=l(a.RECTANGLE2D,r),m)f=`primitives.rectangle({size: [${m.size}]})`;else if(m=l(a.TRIANGLESET2D,r),m){const e=m.vertices.length,t=Math.trunc(e/3);n+=`\n  // 2D triangle set: ${e} points, ${t} faces\n  const vertices = ${h(m.vertices)}\n  const triangles = []\n  for (let i = 0; i < ${t}; i = i + 3) {\n    triangles.push(geometries.geom2.fromPoints([vertices[i], vertices[i + 1], vertices[i + 2]]))\n  }\n`,f="triangles"}let g=d(e,r);return g&&(f=g.primitive,n+=g.code),g=u(e,r),g&&(f=g.primitive,n+=g.code),f&&(n+=p?`  objects.push(colorize([${p}], ${f}))`:`  objects.push(${f})`),n+="\n  return objects\n}\n",n}},8398:e=>{"use strict";e.exports=function(e,t){const n=t>0?"\n":"",r=function(e){if(!(e>0))return e=>e;var t=" ".repeat(e);return e=>{if("string"!=typeof e)return e;const n=e.split("\n");return 1===n.length?t+e:n.map((e=>""===e.trim()?e:t+e)).join("\n")}}(t);return function e(t){let i,s="",o=!0;return t.some(((t,r,a)=>{if(0===r)return i="<"+t,1===a.length;if(1===r){if((l=t)&&"[object Object]"===Object.prototype.toString.call(l))return Object.keys(t).map((e=>{let n=t[e];Array.isArray(n)&&(n=n.join(" ")),i+=" "+e+'="'+n+'"'})),2===a.length||void(i+=">");i+=">"}var l;switch(typeof t){case"string":case"number":case"boolean":case"undefined":return void(s+=t+n)}o=!1,s+=e(t)}))?i+"/>"+n:o?i+s.split("\n").filter((e=>""!==e.trim())).join("\n")+"</"+t[0]+">"+n:i+n+r(s)+"</"+t[0]+">"+n}(e)}},66950:(e,t,n)=>{const{geometries:r,modifiers:i}=n(80715),{geom2:s,geom3:o,path2:a,poly2:l,poly3:c}=r,{flatten:h}=n(10047),u=n(8398),d=new Map,p=(e,t)=>{const n=a.toPoints(e).slice();n.length>1&&e.isClosed&&n.push(n[0]);const r=["Shape",m(e),v(l.create(n),t)];return e.color&&r.push(x(e,"emissiveColor",t)),r},f=(e,t)=>{const n=s.toOutlines(e),r=["Group",{}];return n.forEach((n=>{n.length>1&&n.push(n[0]);const i=["Shape",m(e),v(l.create(n),t)];e.color&&i.push(x(e,"emissiveColor",t)),r.push(i)})),r},m=(e,t={})=>(e.id&&Object.assign(t,{DEF:g(e.id)}),t),g=e=>{const t=d.get(e)||0;return d.set(e,t+1),t>0&&console.warn(`Warning: object.id set as DEF but not unique. ${e} set ${t+1} times.`),e},v=(e,t)=>["Polyline2D",{lineSegments:e.vertices.map((e=>`${e[0]} ${e[1]}`)).join(" ")}],x=(e,t,n)=>{const r=e.color.slice(0,3).join(" "),i=E(1-e.color[3],n),s={[t]:r,transparency:i};return"diffuseColor"===t&&Object.assign(s,{specularColor:"0.2 0.2 0.2",shininess:n.shininess}),["Appearance",["Material",s]]},_=(e,t)=>{const n=["Shape",m(e),b(e,t)];let r=["Appearance",{},["Material"]];return e.color&&(r=x(e,"diffuseColor",t)),n.push(r),n},b=(e,t)=>{const n=y(e,t),r=S(n,t),i=r[0].join(" "),s=r[1].join(" "),o=r[2].join(" "),a=["IndexedTriangleSet",{ccw:"true",colorPerVertex:"false",normalPerVertex:t.smooth,solid:"false",index:i},["Coordinate",{point:s}]];return e.color||a.push(["Color",{color:o}]),a},y=(e,t)=>{const n=[];return o.toPolygons(e).forEach((r=>{const i=r.vertices[0];for(let s=r.vertices.length-3;s>=0;s--){const o=c.fromPoints([i,r.vertices[s+1],r.vertices[s+2]]);let a=t.color;e.color&&(a=e.color),r.color&&(a=r.color),o.color=a,n.push(o)}})),n},E=(e,t)=>Math.round(e*t.decimals)/t.decimals,S=(e,t)=>{const n=[],r=[],i=[],s=new Map;return e.forEach((e=>{const o=[],a=e.vertices.length;for(let n=0;n<a;n++){const i=e.vertices[n],a=`${i[0]},${i[1]},${i[2]}`;if(!s.has(a)){const e=E(i[0],t),n=E(i[1],t),o=E(i[2],t);r.push(`${e} ${n} ${o}`),s.set(a,r.length-1)}o.push(s.get(a))}n.push(o.join(" ")),i.push(((e,t)=>{let n=t.color;return e.color&&(n=e.color),`${n[0]} ${n[1]} ${n[2]}`})(e,t))})),s.clear(),[n,r,i]};e.exports={serialize:(e,...t)=>{if(e=Object.assign({},{color:[0,0,1,1],shininess:8/256,smooth:!1,decimals:1e3,metadata:!0,unit:"millimeter",statusCallback:null},e),0===(t=(t=h(t)).filter((e=>o.isA(e)||s.isA(e)||a.isA(e)))).length)throw new Error("expected one or more geom3/geom2/path2 objects");e.statusCallback&&e.statusCallback({progress:0});let n=["X3D",{profile:"Interchange",version:"3.3","xmlns:xsd":"http://www.w3.org/2001/XMLSchema-instance","xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.3.xsd"}];e.metadata?n.push(["head",{},["meta",{name:"creator",content:"Created by JSCAD"}],["meta",{name:"reference",content:"https://www.openjscad.xyz"}],["meta",{name:"created",content:(new Date).toISOString()}]]):n.push(["head",{},["meta",{name:"creator",content:"Created by JSCAD"}]]),n=n.concat(((e,t)=>{const n=[];return e.forEach(((r,l)=>{t.statusCallback&&t.statusCallback({progress:100*l/e.length}),o.isA(r)&&(r=i.generalize({snap:!0,triangulate:!0},r),o.toPolygons(r).length>0&&n.push(_(r,t))),s.isA(r)&&n.push(f(r,t)),a.isA(r)&&n.push(p(r,t))})),[["Scene",{},["Transform",{rotation:"1 0 0 -1.5708"},...n]]]})(t,e));const r=`<?xml version="1.0" encoding="UTF-8"?>\n${u(n,2)}`;return e&&e.statusCallback&&e.statusCallback({progress:100}),[r]},mimeType:"model/x3d+xml"}},11249:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});var r=n(71354),i=n.n(r),s=n(76314),o=n.n(s)()(i());o.push([e.id,"body {\n    margin: 0;\n}\n\n.selectBox {\n    border: 1px solid #55aaff;\n    background-color: rgba(75, 160, 255, 0.3);\n    position: fixed;\n}\n\n","",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAAA;IACI,SAAS;AACb;;AAEA;IACI,yBAAyB;IACzB,yCAAyC;IACzC,eAAe;AACnB",sourcesContent:["body {\n    margin: 0;\n}\n\n.selectBox {\n    border: 1px solid #55aaff;\n    background-color: rgba(75, 160, 255, 0.3);\n    position: fixed;\n}\n\n"],sourceRoot:""}]);const a=o},76314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,i,s){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(o[l]=!0)}for(var c=0;c<e.length;c++){var h=[].concat(e[c]);r&&o[h[0]]||(void 0!==s&&(void 0===h[5]||(h[1]="@layer".concat(h[5].length>0?" ".concat(h[5]):""," {").concat(h[1],"}")),h[5]=s),n&&(h[2]?(h[1]="@media ".concat(h[2]," {").concat(h[1],"}"),h[2]=n):h[2]=n),i&&(h[4]?(h[1]="@supports (".concat(h[4],") {").concat(h[1],"}"),h[4]=i):h[4]="".concat(i)),t.push(h))}},t}},71354:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(i," */");return[t].concat([s]).join("\n")}return[t].join("\n")}},32896:e=>{"use strict";e.exports=function(e,t){var n="",r=function(e){return e};return t>0&&(n="\n",r=function(e){var t=" ".repeat(e);return function(e){var n,r=[];return"string"!=typeof e?e:1===(n=e.split("\n")).length?t+e:(n.forEach((function(e){""!==e.trim()?r.push(t+e):r.push(e)})),r.join("\n"))}}(t)),function e(t){var i,s,o;return s="",o=!0,t.some((function(t,r,a){if(0===r)return i="<"+t,1===a.length||void 0;if(1===r){if((l=t)&&"[object Object]"===Object.prototype.toString.call(l))return Object.keys(t).forEach((function(e){i+=" "+e+'="'+t[e]+'"'})),2===a.length||void(i+=">");i+=">"}var l;switch(typeof t){case"string":case"number":case"boolean":case"undefined":return void(s+=t+n)}o=!1,s+=e(t)}))?i+"/>"+n:o?i+function(e){var t=e.split("\n"),n=[];return t.forEach((function(e){""!==e.trim()&&n.push(e)})),n.join("\n")}(s)+"</"+t[0]+">"+n:i+n+r(s)+"</"+t[0]+">"+n}(e)}},38223:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(31487),i=n(84797),s=n(60446);var o=r.isS,a=r.isChar,l=r.isNameStartChar,c=r.isNameChar,h=r.S_LIST,u=r.NAME_RE,d=i.isChar,p=s.isNCNameStartChar,f=s.isNCNameChar,m=s.NC_NAME_RE;const g="http://www.w3.org/XML/1998/namespace",v="http://www.w3.org/2000/xmlns/",x={__proto__:null,xml:g,xmlns:v},_={__proto__:null,amp:"&",gt:">",lt:"<",quot:'"',apos:"'"},b=-1,y=-2,E=13,S=33,M=10,A=60,T=61,w=62,C=63,R=93,P=e=>34===e||39===e,D=[34,39],L=[...D,91,w],I=[...D,A,R],N=[T,C,...h],O=[...h,w,38,A];function U(e,t,n){switch(t){case"xml":n!==g&&e.fail(`xml prefix must be bound to ${g}.`);break;case"xmlns":n!==v&&e.fail(`xmlns prefix must be bound to ${v}.`)}switch(n){case v:e.fail(""===t?`the default namespace may not be set to ${n}.`:`may not assign a prefix (even "xmlns") to the URI ${v}.`);break;case g:switch(t){case"xml":break;case"":e.fail(`the default namespace may not be set to ${n}.`);break;default:e.fail("may not assign the xml namespace to another prefix.")}}}const F=e=>m.test(e),k=e=>u.test(e);t.EVENTS=["xmldecl","text","processinginstruction","doctype","comment","opentagstart","attribute","opentag","closetag","cdata","error","end","ready"];const z={xmldecl:"xmldeclHandler",text:"textHandler",processinginstruction:"piHandler",doctype:"doctypeHandler",comment:"commentHandler",opentagstart:"openTagStartHandler",attribute:"attributeHandler",opentag:"openTagHandler",closetag:"closeTagHandler",cdata:"cdataHandler",error:"errorHandler",end:"endHandler",ready:"readyHandler"};t.SaxesParser=class{constructor(e){this.opt=null!=e?e:{},this.fragmentOpt=!!this.opt.fragment;const t=this.xmlnsOpt=!!this.opt.xmlns;if(this.trackPosition=!1!==this.opt.position,this.fileName=this.opt.fileName,t){this.nameStartCheck=p,this.nameCheck=f,this.isName=F,this.processAttribs=this.processAttribsNS,this.pushAttrib=this.pushAttribNS,this.ns=Object.assign({__proto__:null},x);const e=this.opt.additionalNamespaces;null!=e&&(function(e,t){for(const n of Object.keys(t))U(e,n,t[n])}(this,e),Object.assign(this.ns,e))}else this.nameStartCheck=l,this.nameCheck=c,this.isName=k,this.processAttribs=this.processAttribsPlain,this.pushAttrib=this.pushAttribPlain;this.stateTable=[this.sBegin,this.sBeginWhitespace,this.sDoctype,this.sDoctypeQuote,this.sDTD,this.sDTDQuoted,this.sDTDOpenWaka,this.sDTDOpenWakaBang,this.sDTDComment,this.sDTDCommentEnding,this.sDTDCommentEnded,this.sDTDPI,this.sDTDPIEnding,this.sText,this.sEntity,this.sOpenWaka,this.sOpenWakaBang,this.sComment,this.sCommentEnding,this.sCommentEnded,this.sCData,this.sCDataEnding,this.sCDataEnding2,this.sPIFirstChar,this.sPIRest,this.sPIBody,this.sPIEnding,this.sXMLDeclNameStart,this.sXMLDeclName,this.sXMLDeclEq,this.sXMLDeclValueStart,this.sXMLDeclValue,this.sXMLDeclSeparator,this.sXMLDeclEnding,this.sOpenTag,this.sOpenTagSlash,this.sAttrib,this.sAttribName,this.sAttribNameSawWhite,this.sAttribValue,this.sAttribValueQuoted,this.sAttribValueClosed,this.sAttribValueUnquoted,this.sCloseTag,this.sCloseTagSawWhite],this._init()}get closed(){return this._closed}_init(){var e;this.openWakaBang="",this.text="",this.name="",this.piTarget="",this.entity="",this.q=null,this.tags=[],this.tag=null,this.topNS=null,this.chunk="",this.chunkPosition=0,this.i=0,this.prevI=0,this.carriedFromPrevious=void 0,this.forbiddenState=0,this.attribList=[];const{fragmentOpt:t}=this;this.state=t?E:0,this.reportedTextBeforeRoot=this.reportedTextAfterRoot=this.closedRoot=this.sawRoot=t,this.xmlDeclPossible=!t,this.xmlDeclExpects=["version"],this.entityReturnState=void 0;let{defaultXMLVersion:n}=this.opt;if(void 0===n){if(!0===this.opt.forceXMLVersion)throw new Error("forceXMLVersion set but defaultXMLVersion is not set");n="1.0"}this.setXMLVersion(n),this.positionAtNewLine=0,this.doctype=!1,this._closed=!1,this.xmlDecl={version:void 0,encoding:void 0,standalone:void 0},this.line=1,this.column=0,this.ENTITIES=Object.create(_),null===(e=this.readyHandler)||void 0===e||e.call(this)}get position(){return this.chunkPosition+this.i}get columnIndex(){return this.position-this.positionAtNewLine}on(e,t){this[z[e]]=t}off(e){this[z[e]]=void 0}makeError(e){var t;let n=null!==(t=this.fileName)&&void 0!==t?t:"";return this.trackPosition&&(n.length>0&&(n+=":"),n+=`${this.line}:${this.column}`),n.length>0&&(n+=": "),new Error(n+e)}fail(e){const t=this.makeError(e),n=this.errorHandler;if(void 0===n)throw t;return n(t),this}write(e){if(this.closed)return this.fail("cannot write after close; assign an onready handler.");let t=!1;null===e?(t=!0,e=""):"object"==typeof e&&(e=e.toString()),void 0!==this.carriedFromPrevious&&(e=`${this.carriedFromPrevious}${e}`,this.carriedFromPrevious=void 0);let n=e.length;const r=e.charCodeAt(n-1);!t&&(13===r||r>=55296&&r<=56319)&&(this.carriedFromPrevious=e[n-1],n--,e=e.slice(0,n));const{stateTable:i}=this;for(this.chunk=e,this.i=0;this.i<n;)i[this.state].call(this);return this.chunkPosition+=n,t?this.end():this}close(){return this.write(null)}getCode10(){const{chunk:e,i:t}=this;if(this.prevI=t,this.i=t+1,t>=e.length)return b;const n=e.charCodeAt(t);if(this.column++,n<55296){if(n>=32||9===n)return n;switch(n){case M:return this.line++,this.column=0,this.positionAtNewLine=this.position,M;case 13:return e.charCodeAt(t+1)===M&&(this.i=t+2),this.line++,this.column=0,this.positionAtNewLine=this.position,y;default:return this.fail("disallowed character."),n}}if(n>56319)return n>=57344&&n<=65533||this.fail("disallowed character."),n;const r=65536+1024*(n-55296)+(e.charCodeAt(t+1)-56320);return this.i=t+2,r>1114111&&this.fail("disallowed character."),r}getCode11(){const{chunk:e,i:t}=this;if(this.prevI=t,this.i=t+1,t>=e.length)return b;const n=e.charCodeAt(t);if(this.column++,n<55296){if(n>31&&n<127||n>159&&8232!==n||9===n)return n;switch(n){case M:return this.line++,this.column=0,this.positionAtNewLine=this.position,M;case 13:{const n=e.charCodeAt(t+1);n!==M&&133!==n||(this.i=t+2)}case 133:case 8232:return this.line++,this.column=0,this.positionAtNewLine=this.position,y;default:return this.fail("disallowed character."),n}}if(n>56319)return n>=57344&&n<=65533||this.fail("disallowed character."),n;const r=65536+1024*(n-55296)+(e.charCodeAt(t+1)-56320);return this.i=t+2,r>1114111&&this.fail("disallowed character."),r}getCodeNorm(){const e=this.getCode();return e===y?M:e}unget(){this.i=this.prevI,this.column--}captureTo(e){let{i:t}=this;const{chunk:n}=this;for(;;){const r=this.getCode(),i=r===y,s=i?M:r;if(s===b||e.includes(s))return this.text+=n.slice(t,this.prevI),s;i&&(this.text+=`${n.slice(t,this.prevI)}\n`,t=this.i)}}captureToChar(e){let{i:t}=this;const{chunk:n}=this;for(;;){let r=this.getCode();switch(r){case y:this.text+=`${n.slice(t,this.prevI)}\n`,t=this.i,r=M;break;case b:return this.text+=n.slice(t),!1}if(r===e)return this.text+=n.slice(t,this.prevI),!0}}captureNameChars(){const{chunk:e,i:t}=this;for(;;){const n=this.getCode();if(n===b)return this.name+=e.slice(t),b;if(!c(n))return this.name+=e.slice(t,this.prevI),n===y?M:n}}skipSpaces(){for(;;){const e=this.getCodeNorm();if(e===b||!o(e))return e}}setXMLVersion(e){this.currentXMLVersion=e,"1.0"===e?(this.isChar=a,this.getCode=this.getCode10):(this.isChar=d,this.getCode=this.getCode11)}sBegin(){65279===this.chunk.charCodeAt(0)&&(this.i++,this.column++),this.state=1}sBeginWhitespace(){const e=this.i,t=this.skipSpaces();switch(this.prevI!==e&&(this.xmlDeclPossible=!1),t){case A:if(this.state=15,0!==this.text.length)throw new Error("no-empty text at start");break;case b:break;default:this.unget(),this.state=E,this.xmlDeclPossible=!1}}sDoctype(){var e;const t=this.captureTo(L);switch(t){case w:null===(e=this.doctypeHandler)||void 0===e||e.call(this,this.text),this.text="",this.state=E,this.doctype=!0;break;case b:break;default:this.text+=String.fromCodePoint(t),91===t?this.state=4:P(t)&&(this.state=3,this.q=t)}}sDoctypeQuote(){const e=this.q;this.captureToChar(e)&&(this.text+=String.fromCodePoint(e),this.q=null,this.state=2)}sDTD(){const e=this.captureTo(I);e!==b&&(this.text+=String.fromCodePoint(e),e===R?this.state=2:e===A?this.state=6:P(e)&&(this.state=5,this.q=e))}sDTDQuoted(){const e=this.q;this.captureToChar(e)&&(this.text+=String.fromCodePoint(e),this.state=4,this.q=null)}sDTDOpenWaka(){const e=this.getCodeNorm();switch(this.text+=String.fromCodePoint(e),e){case 33:this.state=7,this.openWakaBang="";break;case C:this.state=11;break;default:this.state=4}}sDTDOpenWakaBang(){const e=String.fromCodePoint(this.getCodeNorm()),t=this.openWakaBang+=e;this.text+=e,"-"!==t&&(this.state="--"===t?8:4,this.openWakaBang="")}sDTDComment(){this.captureToChar(45)&&(this.text+="-",this.state=9)}sDTDCommentEnding(){const e=this.getCodeNorm();this.text+=String.fromCodePoint(e),this.state=45===e?10:8}sDTDCommentEnded(){const e=this.getCodeNorm();this.text+=String.fromCodePoint(e),e===w?this.state=4:(this.fail("malformed comment."),this.state=8)}sDTDPI(){this.captureToChar(C)&&(this.text+="?",this.state=12)}sDTDPIEnding(){const e=this.getCodeNorm();this.text+=String.fromCodePoint(e),e===w&&(this.state=4)}sText(){0!==this.tags.length?this.handleTextInRoot():this.handleTextOutsideRoot()}sEntity(){let{i:e}=this;const{chunk:t}=this;e:for(;;)switch(this.getCode()){case y:this.entity+=`${t.slice(e,this.prevI)}\n`,e=this.i;break;case 59:{const{entityReturnState:n}=this,r=this.entity+t.slice(e,this.prevI);let i;this.state=n,""===r?(this.fail("empty entity name."),i="&;"):(i=this.parseEntity(r),this.entity=""),n===E&&void 0===this.textHandler||(this.text+=i);break e}case b:this.entity+=t.slice(e);break e}}sOpenWaka(){const e=this.getCode();if(l(e))this.state=34,this.unget(),this.xmlDeclPossible=!1;else switch(e){case 47:this.state=43,this.xmlDeclPossible=!1;break;case 33:this.state=16,this.openWakaBang="",this.xmlDeclPossible=!1;break;case C:this.state=23;break;default:this.fail("disallowed character in tag name"),this.state=E,this.xmlDeclPossible=!1}}sOpenWakaBang(){switch(this.openWakaBang+=String.fromCodePoint(this.getCodeNorm()),this.openWakaBang){case"[CDATA[":this.sawRoot||this.reportedTextBeforeRoot||(this.fail("text data outside of root node."),this.reportedTextBeforeRoot=!0),this.closedRoot&&!this.reportedTextAfterRoot&&(this.fail("text data outside of root node."),this.reportedTextAfterRoot=!0),this.state=20,this.openWakaBang="";break;case"--":this.state=17,this.openWakaBang="";break;case"DOCTYPE":this.state=2,(this.doctype||this.sawRoot)&&this.fail("inappropriately located doctype declaration."),this.openWakaBang="";break;default:this.openWakaBang.length>=7&&this.fail("incorrect syntax.")}}sComment(){this.captureToChar(45)&&(this.state=18)}sCommentEnding(){var e;const t=this.getCodeNorm();45===t?(this.state=19,null===(e=this.commentHandler)||void 0===e||e.call(this,this.text),this.text=""):(this.text+=`-${String.fromCodePoint(t)}`,this.state=17)}sCommentEnded(){const e=this.getCodeNorm();e!==w?(this.fail("malformed comment."),this.text+=`--${String.fromCodePoint(e)}`,this.state=17):this.state=E}sCData(){this.captureToChar(R)&&(this.state=21)}sCDataEnding(){const e=this.getCodeNorm();e===R?this.state=22:(this.text+=`]${String.fromCodePoint(e)}`,this.state=20)}sCDataEnding2(){var e;const t=this.getCodeNorm();switch(t){case w:null===(e=this.cdataHandler)||void 0===e||e.call(this,this.text),this.text="",this.state=E;break;case R:this.text+="]";break;default:this.text+=`]]${String.fromCodePoint(t)}`,this.state=20}}sPIFirstChar(){const e=this.getCodeNorm();this.nameStartCheck(e)?(this.piTarget+=String.fromCodePoint(e),this.state=24):e===C||o(e)?(this.fail("processing instruction without a target."),this.state=e===C?26:25):(this.fail("disallowed character in processing instruction name."),this.piTarget+=String.fromCodePoint(e),this.state=24)}sPIRest(){const{chunk:e,i:t}=this;for(;;){const n=this.getCodeNorm();if(n===b)return void(this.piTarget+=e.slice(t));if(!this.nameCheck(n)){this.piTarget+=e.slice(t,this.prevI);const r=n===C;r||o(n)?"xml"===this.piTarget?(this.xmlDeclPossible||this.fail("an XML declaration must be at the start of the document."),this.state=r?S:27):this.state=r?26:25:(this.fail("disallowed character in processing instruction name."),this.piTarget+=String.fromCodePoint(n));break}}}sPIBody(){if(0===this.text.length){const e=this.getCodeNorm();e===C?this.state=26:o(e)||(this.text=String.fromCodePoint(e))}else this.captureToChar(C)&&(this.state=26)}sPIEnding(){var e;const t=this.getCodeNorm();if(t===w){const{piTarget:t}=this;"xml"===t.toLowerCase()&&this.fail("the XML declaration must appear at the start of the document."),null===(e=this.piHandler)||void 0===e||e.call(this,{target:t,body:this.text}),this.piTarget=this.text="",this.state=E}else t===C?this.text+="?":(this.text+=`?${String.fromCodePoint(t)}`,this.state=25);this.xmlDeclPossible=!1}sXMLDeclNameStart(){const e=this.skipSpaces();e!==C?e!==b&&(this.state=28,this.name=String.fromCodePoint(e)):this.state=S}sXMLDeclName(){const e=this.captureTo(N);if(e===C)return this.state=S,this.name+=this.text,this.text="",void this.fail("XML declaration is incomplete.");if(o(e)||e===T){if(this.name+=this.text,this.text="",!this.xmlDeclExpects.includes(this.name))switch(this.name.length){case 0:this.fail("did not expect any more name/value pairs.");break;case 1:this.fail(`expected the name ${this.xmlDeclExpects[0]}.`);break;default:this.fail(`expected one of ${this.xmlDeclExpects.join(", ")}`)}this.state=e===T?30:29}}sXMLDeclEq(){const e=this.getCodeNorm();if(e===C)return this.state=S,void this.fail("XML declaration is incomplete.");o(e)||(e!==T&&this.fail("value required."),this.state=30)}sXMLDeclValueStart(){const e=this.getCodeNorm();if(e===C)return this.state=S,void this.fail("XML declaration is incomplete.");o(e)||(P(e)?this.q=e:(this.fail("value must be quoted."),this.q=32),this.state=31)}sXMLDeclValue(){const e=this.captureTo([this.q,C]);if(e===C)return this.state=S,this.text="",void this.fail("XML declaration is incomplete.");if(e===b)return;const t=this.text;switch(this.text="",this.name){case"version":{this.xmlDeclExpects=["encoding","standalone"];const e=t;this.xmlDecl.version=e,/^1\.[0-9]+$/.test(e)?this.opt.forceXMLVersion||this.setXMLVersion(e):this.fail("version number must match /^1\\.[0-9]+$/.");break}case"encoding":/^[A-Za-z][A-Za-z0-9._-]*$/.test(t)||this.fail("encoding value must match /^[A-Za-z0-9][A-Za-z0-9._-]*$/."),this.xmlDeclExpects=["standalone"],this.xmlDecl.encoding=t;break;case"standalone":"yes"!==t&&"no"!==t&&this.fail('standalone value must match "yes" or "no".'),this.xmlDeclExpects=[],this.xmlDecl.standalone=t}this.name="",this.state=32}sXMLDeclSeparator(){const e=this.getCodeNorm();e!==C?(o(e)||(this.fail("whitespace required."),this.unget()),this.state=27):this.state=S}sXMLDeclEnding(){var e;this.getCodeNorm()===w?("xml"!==this.piTarget?this.fail("processing instructions are not allowed before root."):"version"!==this.name&&this.xmlDeclExpects.includes("version")&&this.fail("XML declaration must contain a version."),null===(e=this.xmldeclHandler)||void 0===e||e.call(this,this.xmlDecl),this.name="",this.piTarget=this.text="",this.state=E):this.fail("The character ? is disallowed anywhere in XML declarations."),this.xmlDeclPossible=!1}sOpenTag(){var e;const t=this.captureNameChars();if(t===b)return;const n=this.tag={name:this.name,attributes:Object.create(null)};switch(this.name="",this.xmlnsOpt&&(this.topNS=n.ns=Object.create(null)),null===(e=this.openTagStartHandler)||void 0===e||e.call(this,n),this.sawRoot=!0,!this.fragmentOpt&&this.closedRoot&&this.fail("documents may contain only one root."),t){case w:this.openTag();break;case 47:this.state=35;break;default:o(t)||this.fail("disallowed character in tag name."),this.state=36}}sOpenTagSlash(){this.getCode()===w?this.openSelfClosingTag():(this.fail("forward-slash in opening tag not followed by >."),this.state=36)}sAttrib(){const e=this.skipSpaces();e!==b&&(l(e)?(this.unget(),this.state=37):e===w?this.openTag():47===e?this.state=35:this.fail("disallowed character in attribute name."))}sAttribName(){const e=this.captureNameChars();e===T?this.state=39:o(e)?this.state=38:e===w?(this.fail("attribute without value."),this.pushAttrib(this.name,this.name),this.name=this.text="",this.openTag()):e!==b&&this.fail("disallowed character in attribute name.")}sAttribNameSawWhite(){const e=this.skipSpaces();switch(e){case b:return;case T:this.state=39;break;default:this.fail("attribute without value."),this.text="",this.name="",e===w?this.openTag():l(e)?(this.unget(),this.state=37):(this.fail("disallowed character in attribute name."),this.state=36)}}sAttribValue(){const e=this.getCodeNorm();P(e)?(this.q=e,this.state=40):o(e)||(this.fail("unquoted attribute value."),this.state=42,this.unget())}sAttribValueQuoted(){const{q:e,chunk:t}=this;let{i:n}=this;for(;;)switch(this.getCode()){case e:return this.pushAttrib(this.name,this.text+t.slice(n,this.prevI)),this.name=this.text="",this.q=null,void(this.state=41);case 38:return this.text+=t.slice(n,this.prevI),this.state=14,void(this.entityReturnState=40);case M:case y:case 9:this.text+=`${t.slice(n,this.prevI)} `,n=this.i;break;case A:return this.text+=t.slice(n,this.prevI),void this.fail("disallowed character.");case b:return void(this.text+=t.slice(n))}}sAttribValueClosed(){const e=this.getCodeNorm();o(e)?this.state=36:e===w?this.openTag():47===e?this.state=35:l(e)?(this.fail("no whitespace between attributes."),this.unget(),this.state=37):this.fail("disallowed character in attribute name.")}sAttribValueUnquoted(){const e=this.captureTo(O);switch(e){case 38:this.state=14,this.entityReturnState=42;break;case A:this.fail("disallowed character.");break;case b:break;default:this.text.includes("]]>")&&this.fail('the string "]]>" is disallowed in char data.'),this.pushAttrib(this.name,this.text),this.name=this.text="",e===w?this.openTag():this.state=36}}sCloseTag(){const e=this.captureNameChars();e===w?this.closeTag():o(e)?this.state=44:e!==b&&this.fail("disallowed character in closing tag.")}sCloseTagSawWhite(){switch(this.skipSpaces()){case w:this.closeTag();break;case b:break;default:this.fail("disallowed character in closing tag.")}}handleTextInRoot(){let{i:e,forbiddenState:t}=this;const{chunk:n,textHandler:r}=this;e:for(;;)switch(this.getCode()){case A:if(this.state=15,void 0!==r){const{text:t}=this,i=n.slice(e,this.prevI);0!==t.length?(r(t+i),this.text=""):0!==i.length&&r(i)}t=0;break e;case 38:this.state=14,this.entityReturnState=E,void 0!==r&&(this.text+=n.slice(e,this.prevI)),t=0;break e;case R:switch(t){case 0:t=1;break;case 1:t=2;break;case 2:break;default:throw new Error("impossible state")}break;case w:2===t&&this.fail('the string "]]>" is disallowed in char data.'),t=0;break;case y:void 0!==r&&(this.text+=`${n.slice(e,this.prevI)}\n`),e=this.i,t=0;break;case b:void 0!==r&&(this.text+=n.slice(e));break e;default:t=0}this.forbiddenState=t}handleTextOutsideRoot(){let{i:e}=this;const{chunk:t,textHandler:n}=this;let r=!1;e:for(;;){const i=this.getCode();switch(i){case A:if(this.state=15,void 0!==n){const{text:r}=this,i=t.slice(e,this.prevI);0!==r.length?(n(r+i),this.text=""):0!==i.length&&n(i)}break e;case 38:this.state=14,this.entityReturnState=E,void 0!==n&&(this.text+=t.slice(e,this.prevI)),r=!0;break e;case y:void 0!==n&&(this.text+=`${t.slice(e,this.prevI)}\n`),e=this.i;break;case b:void 0!==n&&(this.text+=t.slice(e));break e;default:o(i)||(r=!0)}}r&&(this.sawRoot||this.reportedTextBeforeRoot||(this.fail("text data outside of root node."),this.reportedTextBeforeRoot=!0),this.closedRoot&&!this.reportedTextAfterRoot&&(this.fail("text data outside of root node."),this.reportedTextAfterRoot=!0))}pushAttribNS(e,t){var n;const{prefix:r,local:i}=this.qname(e),s={name:e,prefix:r,local:i,value:t};if(this.attribList.push(s),null===(n=this.attributeHandler)||void 0===n||n.call(this,s),"xmlns"===r){const e=t.trim();"1.0"===this.currentXMLVersion&&""===e&&this.fail("invalid attempt to undefine prefix in XML 1.0"),this.topNS[i]=e,U(this,i,e)}else if("xmlns"===e){const e=t.trim();this.topNS[""]=e,U(this,"",e)}}pushAttribPlain(e,t){var n;const r={name:e,value:t};this.attribList.push(r),null===(n=this.attributeHandler)||void 0===n||n.call(this,r)}end(){var e,t;this.sawRoot||this.fail("document must contain a root element.");const{tags:n}=this;for(;n.length>0;){const e=n.pop();this.fail(`unclosed tag: ${e.name}`)}0!==this.state&&this.state!==E&&this.fail("unexpected end.");const{text:r}=this;return 0!==r.length&&(null===(e=this.textHandler)||void 0===e||e.call(this,r),this.text=""),this._closed=!0,null===(t=this.endHandler)||void 0===t||t.call(this),this._init(),this}resolve(e){var t,n;let r=this.topNS[e];if(void 0!==r)return r;const{tags:i}=this;for(let t=i.length-1;t>=0;t--)if(r=i[t].ns[e],void 0!==r)return r;return r=this.ns[e],void 0!==r?r:null===(n=(t=this.opt).resolvePrefix)||void 0===n?void 0:n.call(t,e)}qname(e){const t=e.indexOf(":");if(-1===t)return{prefix:"",local:e};const n=e.slice(t+1),r=e.slice(0,t);return(""===r||""===n||n.includes(":"))&&this.fail(`malformed name: ${e}.`),{prefix:r,local:n}}processAttribsNS(){var e;const{attribList:t}=this,n=this.tag;{const{prefix:t,local:r}=this.qname(n.name);n.prefix=t,n.local=r;const i=n.uri=null!==(e=this.resolve(t))&&void 0!==e?e:"";""!==t&&("xmlns"===t&&this.fail('tags may not have "xmlns" as prefix.'),""===i&&(this.fail(`unbound namespace prefix: ${JSON.stringify(t)}.`),n.uri=t))}if(0===t.length)return;const{attributes:r}=n,i=new Set;for(const e of t){const{name:t,prefix:n,local:s}=e;let o,a;""===n?(o="xmlns"===t?v:"",a=t):(o=this.resolve(n),void 0===o&&(this.fail(`unbound namespace prefix: ${JSON.stringify(n)}.`),o=n),a=`{${o}}${s}`),i.has(a)&&this.fail(`duplicate attribute: ${a}.`),i.add(a),e.uri=o,r[t]=e}this.attribList=[]}processAttribsPlain(){const{attribList:e}=this,t=this.tag.attributes;for(const{name:n,value:r}of e)void 0!==t[n]&&this.fail(`duplicate attribute: ${n}.`),t[n]=r;this.attribList=[]}openTag(){var e;this.processAttribs();const{tags:t}=this,n=this.tag;n.isSelfClosing=!1,null===(e=this.openTagHandler)||void 0===e||e.call(this,n),t.push(n),this.state=E,this.name=""}openSelfClosingTag(){var e,t,n;this.processAttribs();const{tags:r}=this,i=this.tag;i.isSelfClosing=!0,null===(e=this.openTagHandler)||void 0===e||e.call(this,i),null===(t=this.closeTagHandler)||void 0===t||t.call(this,i),null===(this.tag=null!==(n=r[r.length-1])&&void 0!==n?n:null)&&(this.closedRoot=!0),this.state=E,this.name=""}closeTag(){const{tags:e,name:t}=this;if(this.state=E,this.name="",""===t)return this.fail("weird empty close tag."),void(this.text+="</>");const n=this.closeTagHandler;let r=e.length;for(;r-- >0;){const r=this.tag=e.pop();if(this.topNS=r.ns,null==n||n(r),r.name===t)break;this.fail("unexpected close tag.")}0===r?this.closedRoot=!0:r<0&&(this.fail(`unmatched closing tag: ${t}.`),this.text+=`</${t}>`)}parseEntity(e){if("#"!==e[0]){const t=this.ENTITIES[e];return void 0!==t?t:(this.fail(this.isName(e)?"undefined entity.":"disallowed character in entity name."),`&${e};`)}let t=NaN;return"x"===e[1]&&/^#x[0-9a-f]+$/i.test(e)?t=parseInt(e.slice(2),16):/^#[0-9]+$/.test(e)&&(t=parseInt(e.slice(1),10)),this.isChar(t)?String.fromCodePoint(t):(this.fail("malformed character entity."),`&${e};`)}}},85072:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var s={},o=[],a=0;a<e.length;a++){var l=e[a],c=r.base?l[0]+r.base:l[0],h=s[c]||0,u="".concat(c," ").concat(h);s[c]=h+1;var d=n(u),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var f=i(p,r);r.byIndex=a,t.splice(a,0,{identifier:u,updater:f,references:1})}o.push(u)}return o}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var s=r(e=e||[],i=i||{});return function(e){e=e||[];for(var o=0;o<s.length;o++){var a=n(s[o]);t[a].references--}for(var l=r(e,i),c=0;c<s.length;c++){var h=n(s[c]);0===t[h].references&&(t[h].updater(),t.splice(h,1))}s=l}}},77659:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},10540:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},55056:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},97825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,i&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},41113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},31487:(e,t)=>{"use strict";function n(e){return e>=65&&e<=90||e>=97&&e<=122||58===e||95===e||8204===e||8205===e||e>=192&&e<=214||e>=216&&e<=246||e>=248&&e<=767||e>=880&&e<=893||e>=895&&e<=8191||e>=8304&&e<=8591||e>=11264&&e<=12271||e>=12289&&e<=55295||e>=63744&&e<=64975||e>=65008&&e<=65533||e>=65536&&e<=983039}Object.defineProperty(t,"__esModule",{value:!0}),t.CHAR="\t\n\r -퟿-�𐀀-􏿿",t.S=" \t\r\n",t.NAME_START_CHAR=":A-Z_a-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�𐀀-󯿿",t.NAME_CHAR="-"+t.NAME_START_CHAR+".0-9·̀-ͯ‿-⁀",t.CHAR_RE=new RegExp("^["+t.CHAR+"]$","u"),t.S_RE=new RegExp("^["+t.S+"]+$","u"),t.NAME_START_CHAR_RE=new RegExp("^["+t.NAME_START_CHAR+"]$","u"),t.NAME_CHAR_RE=new RegExp("^["+t.NAME_CHAR+"]$","u"),t.NAME_RE=new RegExp("^["+t.NAME_START_CHAR+"]["+t.NAME_CHAR+"]*$","u"),t.NMTOKEN_RE=new RegExp("^["+t.NAME_CHAR+"]+$","u"),t.S_LIST=[32,10,13,9],t.isChar=function(e){return e>=32&&e<=55295||10===e||13===e||9===e||e>=57344&&e<=65533||e>=65536&&e<=1114111},t.isS=function(e){return 32===e||10===e||13===e||9===e},t.isNameStartChar=n,t.isNameChar=function(e){return n(e)||e>=48&&e<=57||45===e||46===e||183===e||e>=768&&e<=879||e>=8255&&e<=8256}},84797:(e,t)=>{"use strict";function n(e){return e>=65&&e<=90||e>=97&&e<=122||58===e||95===e||8204===e||8205===e||e>=192&&e<=214||e>=216&&e<=246||e>=248&&e<=767||e>=880&&e<=893||e>=895&&e<=8191||e>=8304&&e<=8591||e>=11264&&e<=12271||e>=12289&&e<=55295||e>=63744&&e<=64975||e>=65008&&e<=65533||e>=65536&&e<=983039}Object.defineProperty(t,"__esModule",{value:!0}),t.CHAR="-퟿-�𐀀-􏿿",t.RESTRICTED_CHAR="-\b\v\f---",t.S=" \t\r\n",t.NAME_START_CHAR=":A-Z_a-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�𐀀-󯿿",t.NAME_CHAR="-"+t.NAME_START_CHAR+".0-9·̀-ͯ‿-⁀",t.CHAR_RE=new RegExp("^["+t.CHAR+"]$","u"),t.RESTRICTED_CHAR_RE=new RegExp("^["+t.RESTRICTED_CHAR+"]$","u"),t.S_RE=new RegExp("^["+t.S+"]+$","u"),t.NAME_START_CHAR_RE=new RegExp("^["+t.NAME_START_CHAR+"]$","u"),t.NAME_CHAR_RE=new RegExp("^["+t.NAME_CHAR+"]$","u"),t.NAME_RE=new RegExp("^["+t.NAME_START_CHAR+"]["+t.NAME_CHAR+"]*$","u"),t.NMTOKEN_RE=new RegExp("^["+t.NAME_CHAR+"]+$","u"),t.S_LIST=[32,10,13,9],t.isChar=function(e){return e>=1&&e<=55295||e>=57344&&e<=65533||e>=65536&&e<=1114111},t.isRestrictedChar=function(e){return e>=1&&e<=8||11===e||12===e||e>=14&&e<=31||e>=127&&e<=132||e>=134&&e<=159},t.isCharAndNotRestricted=function(e){return 9===e||10===e||13===e||e>31&&e<127||133===e||e>159&&e<=55295||e>=57344&&e<=65533||e>=65536&&e<=1114111},t.isS=function(e){return 32===e||10===e||13===e||9===e},t.isNameStartChar=n,t.isNameChar=function(e){return n(e)||e>=48&&e<=57||45===e||46===e||183===e||e>=768&&e<=879||e>=8255&&e<=8256}},60446:(e,t)=>{"use strict";function n(e){return e>=65&&e<=90||95===e||e>=97&&e<=122||e>=192&&e<=214||e>=216&&e<=246||e>=248&&e<=767||e>=880&&e<=893||e>=895&&e<=8191||e>=8204&&e<=8205||e>=8304&&e<=8591||e>=11264&&e<=12271||e>=12289&&e<=55295||e>=63744&&e<=64975||e>=65008&&e<=65533||e>=65536&&e<=983039}Object.defineProperty(t,"__esModule",{value:!0}),t.NC_NAME_START_CHAR="A-Z_a-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�𐀀-󯿿",t.NC_NAME_CHAR="-"+t.NC_NAME_START_CHAR+".0-9·̀-ͯ‿-⁀",t.NC_NAME_START_CHAR_RE=new RegExp("^["+t.NC_NAME_START_CHAR+"]$","u"),t.NC_NAME_CHAR_RE=new RegExp("^["+t.NC_NAME_CHAR+"]$","u"),t.NC_NAME_RE=new RegExp("^["+t.NC_NAME_START_CHAR+"]["+t.NC_NAME_CHAR+"]*$","u"),t.isNCNameStartChar=n,t.isNCNameChar=function(e){return n(e)||45===e||46===e||e>=48&&e<=57||183===e||e>=768&&e<=879||e>=8255&&e<=8256}},84419:(e,t,n)=>{"use strict";n(55891);var r=Uint8Array,i=Uint16Array,s=Uint32Array,o=new r([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),a=new r([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),l=new r([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),c=function(e,t){for(var n=new i(31),r=0;r<31;++r)n[r]=t+=1<<e[r-1];var o=new s(n[30]);for(r=1;r<30;++r)for(var a=n[r];a<n[r+1];++a)o[a]=a-n[r]<<5|r;return[n,o]},h=c(o,2),u=h[0],d=h[1];u[28]=258,d[258]=28;for(var p=c(a,0),f=(p[0],p[1]),m=new i(32768),g=0;g<32768;++g){var v=(43690&g)>>>1|(21845&g)<<1;v=(61680&(v=(52428&v)>>>2|(13107&v)<<2))>>>4|(3855&v)<<4,m[g]=((65280&v)>>>8|(255&v)<<8)>>>1}var x=function(e,t,n){for(var r=e.length,s=0,o=new i(t);s<r;++s)e[s]&&++o[e[s]-1];var a,l=new i(t);for(s=0;s<t;++s)l[s]=l[s-1]+o[s-1]<<1;if(n){a=new i(1<<t);var c=15-t;for(s=0;s<r;++s)if(e[s])for(var h=s<<4|e[s],u=t-e[s],d=l[e[s]-1]++<<u,p=d|(1<<u)-1;d<=p;++d)a[m[d]>>>c]=h}else for(a=new i(r),s=0;s<r;++s)e[s]&&(a[s]=m[l[e[s]-1]++]>>>15-e[s]);return a},_=new r(288);for(g=0;g<144;++g)_[g]=8;for(g=144;g<256;++g)_[g]=9;for(g=256;g<280;++g)_[g]=7;for(g=280;g<288;++g)_[g]=8;var b=new r(32);for(g=0;g<32;++g)b[g]=5;var y=x(_,9,0),E=x(b,5,0),S=function(e){return(e+7)/8|0},M=function(e,t,n){(null==t||t<0)&&(t=0),(null==n||n>e.length)&&(n=e.length);var o=new(2==e.BYTES_PER_ELEMENT?i:4==e.BYTES_PER_ELEMENT?s:r)(n-t);return o.set(e.subarray(t,n)),o},A=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],T=function(e,t,n){var r=new Error(t||A[e]);if(r.code=e,Error.captureStackTrace&&Error.captureStackTrace(r,T),!n)throw r;return r},w=function(e,t,n){n<<=7&t;var r=t/8|0;e[r]|=n,e[r+1]|=n>>>8},C=function(e,t,n){n<<=7&t;var r=t/8|0;e[r]|=n,e[r+1]|=n>>>8,e[r+2]|=n>>>16},R=function(e,t){for(var n=[],s=0;s<e.length;++s)e[s]&&n.push({s,f:e[s]});var o=n.length,a=n.slice();if(!o)return[U,0];if(1==o){var l=new r(n[0].s+1);return l[n[0].s]=1,[l,1]}n.sort((function(e,t){return e.f-t.f})),n.push({s:-1,f:25001});var c=n[0],h=n[1],u=0,d=1,p=2;for(n[0]={s:-1,f:c.f+h.f,l:c,r:h};d!=o-1;)c=n[n[u].f<n[p].f?u++:p++],h=n[u!=d&&n[u].f<n[p].f?u++:p++],n[d++]={s:-1,f:c.f+h.f,l:c,r:h};var f=a[0].s;for(s=1;s<o;++s)a[s].s>f&&(f=a[s].s);var m=new i(f+1),g=P(n[d-1],m,0);if(g>t){s=0;var v=0,x=g-t,_=1<<x;for(a.sort((function(e,t){return m[t.s]-m[e.s]||e.f-t.f}));s<o;++s){var b=a[s].s;if(!(m[b]>t))break;v+=_-(1<<g-m[b]),m[b]=t}for(v>>>=x;v>0;){var y=a[s].s;m[y]<t?v-=1<<t-m[y]++-1:++s}for(;s>=0&&v;--s){var E=a[s].s;m[E]==t&&(--m[E],++v)}g=t}return[new r(m),g]},P=function(e,t,n){return-1==e.s?Math.max(P(e.l,t,n+1),P(e.r,t,n+1)):t[e.s]=n},D=function(e){for(var t=e.length;t&&!e[--t];);for(var n=new i(++t),r=0,s=e[0],o=1,a=function(e){n[r++]=e},l=1;l<=t;++l)if(e[l]==s&&l!=t)++o;else{if(!s&&o>2){for(;o>138;o-=138)a(32754);o>2&&(a(o>10?o-11<<5|28690:o-3<<5|12305),o=0)}else if(o>3){for(a(s),--o;o>6;o-=6)a(8304);o>2&&(a(o-3<<5|8208),o=0)}for(;o--;)a(s);o=1,s=e[l]}return[n.subarray(0,r),t]},L=function(e,t){for(var n=0,r=0;r<t.length;++r)n+=e[r]*t[r];return n},I=function(e,t,n){var r=n.length,i=S(t+2);e[i]=255&r,e[i+1]=r>>>8,e[i+2]=255^e[i],e[i+3]=255^e[i+1];for(var s=0;s<r;++s)e[i+s+4]=n[s];return 8*(i+4+r)},N=function(e,t,n,r,s,c,h,u,d,p,f){w(t,f++,n),++s[256];for(var m=R(s,15),g=m[0],v=m[1],S=R(c,15),M=S[0],A=S[1],T=D(g),P=T[0],N=T[1],O=D(M),U=O[0],F=O[1],k=new i(19),z=0;z<P.length;++z)k[31&P[z]]++;for(z=0;z<U.length;++z)k[31&U[z]]++;for(var B=R(k,7),V=B[0],$=B[1],G=19;G>4&&!V[l[G-1]];--G);var H,j,W,X,Y=p+5<<3,q=L(s,_)+L(c,b)+h,Z=L(s,g)+L(c,M)+h+14+3*G+L(k,V)+(2*k[16]+3*k[17]+7*k[18]);if(Y<=q&&Y<=Z)return I(t,f,e.subarray(d,d+p));if(w(t,f,1+(Z<q)),f+=2,Z<q){H=x(g,v,0),j=g,W=x(M,A,0),X=M;var K=x(V,$,0);for(w(t,f,N-257),w(t,f+5,F-1),w(t,f+10,G-4),f+=14,z=0;z<G;++z)w(t,f+3*z,V[l[z]]);f+=3*G;for(var J=[P,U],Q=0;Q<2;++Q){var ee=J[Q];for(z=0;z<ee.length;++z){var te=31&ee[z];w(t,f,K[te]),f+=V[te],te>15&&(w(t,f,ee[z]>>>5&127),f+=ee[z]>>>12)}}}else H=y,j=_,W=E,X=b;for(z=0;z<u;++z)if(r[z]>255){te=r[z]>>>18&31,C(t,f,H[te+257]),f+=j[te+257],te>7&&(w(t,f,r[z]>>>23&31),f+=o[te]);var ne=31&r[z];C(t,f,W[ne]),f+=X[ne],ne>3&&(C(t,f,r[z]>>>5&8191),f+=a[ne])}else C(t,f,H[r[z]]),f+=j[r[z]];return C(t,f,H[256]),f+j[256]},O=new s([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),U=new r(0),F=function(e,t,n,l,c,h){var u=e.length,p=new r(l+u+5*(1+Math.ceil(u/7e3))+c),m=p.subarray(l,p.length-c),g=0;if(!t||u<8)for(var v=0;v<=u;v+=65535){var x=v+65535;x>=u&&(m[g>>3]=h),g=I(m,g+1,e.subarray(v,x))}else{for(var _=O[t-1],b=_>>>13,y=8191&_,E=(1<<n)-1,A=new i(32768),T=new i(E+1),w=Math.ceil(n/3),C=2*w,R=function(t){return(e[t]^e[t+1]<<w^e[t+2]<<C)&E},P=new s(25e3),D=new i(288),L=new i(32),F=0,k=0,z=(v=0,0),B=0,V=0;v<u;++v){var $=R(v),G=32767&v,H=T[$];if(A[G]=H,T[$]=G,B<=v){var j=u-v;if((F>7e3||z>24576)&&j>423){g=N(e,m,0,P,D,L,k,z,V,v-V,g),z=F=k=0,V=v;for(var W=0;W<286;++W)D[W]=0;for(W=0;W<30;++W)L[W]=0}var X=2,Y=0,q=y,Z=G-H&32767;if(j>2&&$==R(v-Z))for(var K=Math.min(b,j)-1,J=Math.min(32767,v),Q=Math.min(258,j);Z<=J&&--q&&G!=H;){if(e[v+X]==e[v+X-Z]){for(var ee=0;ee<Q&&e[v+ee]==e[v+ee-Z];++ee);if(ee>X){if(X=ee,Y=Z,ee>K)break;var te=Math.min(Z,ee-2),ne=0;for(W=0;W<te;++W){var re=v-Z+W+32768&32767,ie=re-A[re]+32768&32767;ie>ne&&(ne=ie,H=re)}}}Z+=(G=H)-(H=A[G])+32768&32767}if(Y){P[z++]=268435456|d[X]<<18|f[Y];var se=31&d[X],oe=31&f[Y];k+=o[se]+a[oe],++D[257+se],++L[oe],B=v+X,++F}else P[z++]=e[v],++D[e[v]]}}g=N(e,m,h,P,D,L,k,z,V,v-V,g),!h&&7&g&&(g=I(m,g+1,U))}return M(p,0,l+S(g)+c)},k=function(){for(var e=new Int32Array(256),t=0;t<256;++t){for(var n=t,r=9;--r;)n=(1&n&&-306674912)^n>>>1;e[t]=n}return e}(),z=function(){var e=-1;return{p:function(t){for(var n=e,r=0;r<t.length;++r)n=k[255&n^t[r]]^n>>>8;e=n},d:function(){return~e}}},B=function(e,t,n,r,i){return F(e,null==t.level?6:t.level,null==t.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(e.length)))):12+t.mem,n,r,!i)},V=function(e,t){var n={};for(var r in e)n[r]=e[r];for(var r in t)n[r]=t[r];return n},$=function(e,t,n){for(;n;++t)e[t]=n,n>>>=8};function G(e,t){return B(e,t||{},0,0)}var H=function(e,t,n,i){for(var s in e){var o=e[s],a=t+s,l=i;Array.isArray(o)&&(l=V(i,o[1]),o=o[0]),o instanceof r?n[a]=[o,l]:(n[a+="/"]=[new r(0),l],H(o,a,n,i))}},j="undefined"!=typeof TextEncoder&&new TextEncoder,W="undefined"!=typeof TextDecoder&&new TextDecoder;try{W.decode(U,{stream:!0})}catch(e){}function X(e,t){if(t){for(var n=new r(e.length),i=0;i<e.length;++i)n[i]=e.charCodeAt(i);return n}if(j)return j.encode(e);var s=e.length,o=new r(e.length+(e.length>>1)),a=0,l=function(e){o[a++]=e};for(i=0;i<s;++i){if(a+5>o.length){var c=new r(a+8+(s-i<<1));c.set(o),o=c}var h=e.charCodeAt(i);h<128||t?l(h):h<2048?(l(192|h>>6),l(128|63&h)):h>55295&&h<57344?(l(240|(h=65536+(1047552&h)|1023&e.charCodeAt(++i))>>18),l(128|h>>12&63),l(128|h>>6&63),l(128|63&h)):(l(224|h>>12),l(128|h>>6&63),l(128|63&h))}return M(o,0,a)}t._u=X;var Y=function(e){var t=0;if(e)for(var n in e){var r=e[n].length;r>65535&&T(9),t+=r+4}return t},q=function(e,t,n,r,i,s,o,a){var l=r.length,c=n.extra,h=a&&a.length,u=Y(c);$(e,t,null!=o?33639248:67324752),t+=4,null!=o&&(e[t++]=20,e[t++]=n.os),e[t]=20,t+=2,e[t++]=n.flag<<1|(null==s&&8),e[t++]=i&&8,e[t++]=255&n.compression,e[t++]=n.compression>>8;var d=new Date(null==n.mtime?Date.now():n.mtime),p=d.getFullYear()-1980;if((p<0||p>119)&&T(10),$(e,t,p<<25|d.getMonth()+1<<21|d.getDate()<<16|d.getHours()<<11|d.getMinutes()<<5|d.getSeconds()>>>1),t+=4,null!=s&&($(e,t,n.crc),$(e,t+4,s),$(e,t+8,n.size)),$(e,t+12,l),$(e,t+14,u),t+=16,null!=o&&($(e,t,h),$(e,t+6,n.attrs),$(e,t+10,o),t+=14),e.set(r,t),t+=l,u)for(var f in c){var m=c[f],g=m.length;$(e,t,+f),$(e,t+2,g),e.set(m,t+4),t+=4+g}return h&&(e.set(a,t),t+=h),t},Z=function(e,t,n,r,i){$(e,t,101010256),$(e,t+8,n),$(e,t+10,n),$(e,t+12,r),$(e,t+16,i)};t.L=function(e,t){t||(t={});var n={},i=[];H(e,"",n,t);var s=0,o=0;for(var a in n){var l=n[a],c=l[0],h=l[1],u=0==h.level?0:8,d=(M=X(a)).length,p=h.comment,f=p&&X(p),m=f&&f.length,g=Y(h.extra);d>65535&&T(11);var v=u?G(c,h):c,x=v.length,_=z();_.p(c),i.push(V(h,{size:c.length,crc:_.d(),c:v,f:M,m:f,u:d!=a.length||f&&p.length!=m,o:s,compression:u})),s+=30+d+g+x,o+=76+2*(d+g)+(m||0)+x}for(var b=new r(o+22),y=s,E=o-s,S=0;S<i.length;++S){var M=i[S];q(b,M.o,M,M.f,M.u,M.c.length);var A=30+M.f.length+Y(M.extra);b.set(M.c,M.o+A),q(b,s,M,M.f,M.u,M.c.length,M.o,M.m),s+=16+A+(M.m?M.m.length:0)}return Z(b,s,i.length,E,y),b};"function"==typeof queueMicrotask?queueMicrotask:"function"==typeof setTimeout&&setTimeout},55891:(e,t)=>{"use strict";var n={};t.default=function(e,t,r,i,s){var o=new Worker(n[t]||(n[t]=URL.createObjectURL(new Blob([e+';addEventListener("error",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'],{type:"text/javascript"}))));return o.onmessage=function(e){var t=e.data,n=t.$e$;if(n){var r=new Error(n[0]);r.code=n[1],r.stack=n[2],s(r,null)}else s(null,t)},o.postMessage(r,i),o}},70682:e=>{"use strict";e.exports={rE:"2.3.9"}},74136:e=>{"use strict";e.exports={rE:"2.3.26"}},34286:e=>{"use strict";e.exports={rE:"2.0.30"}},80741:e=>{"use strict";e.exports={rE:"2.0.29"}},59197:e=>{"use strict";e.exports={rE:"2.1.26"}},72812:e=>{"use strict";e.exports={rE:"2.5.10"}},40619:e=>{"use strict";e.exports={rE:"2.3.17"}},86587:e=>{"use strict";e.exports={rE:"2.2.9"}}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var s=t[r]={id:r,exports:{}};return e[r](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{"use strict";var e=n(85072),t=n.n(e),r=n(97825),i=n.n(r),s=n(77659),o=n.n(s),a=n(55056),l=n.n(a),c=n(10540),h=n.n(c),u=n(41113),d=n.n(u),p=n(11249),f={};f.styleTagTransform=d(),f.setAttributes=l(),f.insert=o().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=h(),t()(p.A,f),p.A&&p.A.locals&&p.A.locals;const m="162",g=0,v=1,x=2,_=100,b=101,y=102,E=200,S=201,M=202,A=203,T=204,w=205,C=206,R=207,P=208,D=209,L=210,I=211,N=212,O=213,U=214,F=301,k=302,z=306,B=1e3,V=1001,$=1002,G=1003,H=1004,j=1005,W=1006,X=1007,Y=1008,q=1009,Z=1012,K=1014,J=1015,Q=1016,ee=1020,te=1023,ne=1026,re=1027,ie=33776,se=33777,oe=33778,ae=33779,le=36492,ce=2300,he=2301,ue=2302,de="",pe="srgb",fe="srgb-linear",me="display-p3",ge="display-p3-linear",ve="linear",xe="srgb",_e="rec709",be="p3",ye=7680,Ee=512,Se=513,Me=514,Ae=515,Te=516,we=517,Ce=518,Re=519,Pe="300 es",De=1035,Le=2e3,Ie=2001;class Ne{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,r=n.length;t<r;t++)n[t].call(this,e);e.target=null}}}const Oe=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Ue=Math.PI/180,Fe=180/Math.PI;function ke(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(Oe[255&e]+Oe[e>>8&255]+Oe[e>>16&255]+Oe[e>>24&255]+"-"+Oe[255&t]+Oe[t>>8&255]+"-"+Oe[t>>16&15|64]+Oe[t>>24&255]+"-"+Oe[63&n|128]+Oe[n>>8&255]+"-"+Oe[n>>16&255]+Oe[n>>24&255]+Oe[255&r]+Oe[r>>8&255]+Oe[r>>16&255]+Oe[r>>24&255]).toLowerCase()}function ze(e,t,n){return Math.max(t,Math.min(n,e))}function Be(e,t,n){return(1-n)*e+n*t}function Ve(e){return!(e&e-1)&&0!==e}function $e(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function Ge(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function He(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(4294967295*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(2147483647*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}const je=Ue;class We{constructor(e=0,t=0){We.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(ze(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,s=this.y-e.y;return this.x=i*n-s*r+e.x,this.y=i*r+s*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Xe{constructor(e,t,n,r,i,s,o,a,l){Xe.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,n,r,i,s,o,a,l)}set(e,t,n,r,i,s,o,a,l){const c=this.elements;return c[0]=e,c[1]=r,c[2]=o,c[3]=t,c[4]=i,c[5]=a,c[6]=n,c[7]=s,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,i=this.elements,s=n[0],o=n[3],a=n[6],l=n[1],c=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=r[0],m=r[3],g=r[6],v=r[1],x=r[4],_=r[7],b=r[2],y=r[5],E=r[8];return i[0]=s*f+o*v+a*b,i[3]=s*m+o*x+a*y,i[6]=s*g+o*_+a*E,i[1]=l*f+c*v+h*b,i[4]=l*m+c*x+h*y,i[7]=l*g+c*_+h*E,i[2]=u*f+d*v+p*b,i[5]=u*m+d*x+p*y,i[8]=u*g+d*_+p*E,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],s=e[4],o=e[5],a=e[6],l=e[7],c=e[8];return t*s*c-t*o*l-n*i*c+n*o*a+r*i*l-r*s*a}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],s=e[4],o=e[5],a=e[6],l=e[7],c=e[8],h=c*s-o*l,u=o*a-c*i,d=l*i-s*a,p=t*h+n*u+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return e[0]=h*f,e[1]=(r*l-c*n)*f,e[2]=(o*n-r*s)*f,e[3]=u*f,e[4]=(c*t-r*a)*f,e[5]=(r*i-o*t)*f,e[6]=d*f,e[7]=(n*a-l*t)*f,e[8]=(s*t-n*i)*f,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,i,s,o){const a=Math.cos(i),l=Math.sin(i);return this.set(n*a,n*l,-n*(a*s+l*o)+s+e,-r*l,r*a,-r*(-l*s+a*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(Ye.makeScale(e,t)),this}rotate(e){return this.premultiply(Ye.makeRotation(-e)),this}translate(e,t){return this.premultiply(Ye.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}const Ye=new Xe;function qe(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function Ze(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function Ke(){const e=Ze("canvas");return e.style.display="block",e}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const Je={};const Qe=(new Xe).set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),et=(new Xe).set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),tt={[fe]:{transfer:ve,primaries:_e,toReference:e=>e,fromReference:e=>e},[pe]:{transfer:xe,primaries:_e,toReference:e=>e.convertSRGBToLinear(),fromReference:e=>e.convertLinearToSRGB()},[ge]:{transfer:ve,primaries:be,toReference:e=>e.applyMatrix3(et),fromReference:e=>e.applyMatrix3(Qe)},[me]:{transfer:xe,primaries:be,toReference:e=>e.convertSRGBToLinear().applyMatrix3(et),fromReference:e=>e.applyMatrix3(Qe).convertLinearToSRGB()}},nt=new Set([fe,ge]),rt={enabled:!0,_workingColorSpace:fe,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(e){if(!nt.has(e))throw new Error(`Unsupported working color space, "${e}".`);this._workingColorSpace=e},convert:function(e,t,n){if(!1===this.enabled||t===n||!t||!n)return e;const r=tt[t].toReference;return(0,tt[n].fromReference)(r(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this._workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this._workingColorSpace)},getPrimaries:function(e){return tt[e].primaries},getTransfer:function(e){return e===de?ve:tt[e].transfer}};function it(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function st(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}let ot;class at{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===ot&&(ot=Ze("canvas")),ot.width=e.width,ot.height=e.height;const n=ot.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=ot}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=Ze("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),i=r.data;for(let e=0;e<i.length;e++)i[e]=255*it(i[e]/255);return n.putImageData(r,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*it(t[e]/255)):t[e]=it(t[e]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let lt=0;class ct{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:lt++}),this.uuid=ke(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(null!==r){let e;if(Array.isArray(r)){e=[];for(let t=0,n=r.length;t<n;t++)r[t].isDataTexture?e.push(ht(r[t].image)):e.push(ht(r[t]))}else e=ht(r);n.url=e}return t||(e.images[this.uuid]=n),n}}function ht(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?at.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ut=0;class dt extends Ne{constructor(e=dt.DEFAULT_IMAGE,t=dt.DEFAULT_MAPPING,n=1001,r=1001,i=1006,s=1008,o=1023,a=1009,l=dt.DEFAULT_ANISOTROPY,c=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ut++}),this.uuid=ke(),this.name="",this.source=new ct(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=s,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=a,this.offset=new We(0,0),this.repeat=new We(1,1),this.center=new We(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Xe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case B:e.x=e.x-Math.floor(e.x);break;case V:e.x=e.x<0?0:1;break;case $:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case B:e.y=e.y-Math.floor(e.y);break;case V:e.y=e.y<0?0:1;break;case $:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}dt.DEFAULT_IMAGE=null,dt.DEFAULT_MAPPING=300,dt.DEFAULT_ANISOTROPY=1;class pt{constructor(e=0,t=0,n=0,r=1){pt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,i=this.w,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r+s[12]*i,this.y=s[1]*t+s[5]*n+s[9]*r+s[13]*i,this.z=s[2]*t+s[6]*n+s[10]*r+s[14]*i,this.w=s[3]*t+s[7]*n+s[11]*r+s[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,i;const s=.01,o=.1,a=e.elements,l=a[0],c=a[4],h=a[8],u=a[1],d=a[5],p=a[9],f=a[2],m=a[6],g=a[10];if(Math.abs(c-u)<s&&Math.abs(h-f)<s&&Math.abs(p-m)<s){if(Math.abs(c+u)<o&&Math.abs(h+f)<o&&Math.abs(p+m)<o&&Math.abs(l+d+g-3)<o)return this.set(1,0,0,0),this;t=Math.PI;const e=(l+1)/2,a=(d+1)/2,v=(g+1)/2,x=(c+u)/4,_=(h+f)/4,b=(p+m)/4;return e>a&&e>v?e<s?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(e),r=x/n,i=_/n):a>v?a<s?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(a),n=x/r,i=b/r):v<s?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(v),n=_/i,r=b/i),this.set(n,r,i,t),this}let v=Math.sqrt((m-p)*(m-p)+(h-f)*(h-f)+(u-c)*(u-c));return Math.abs(v)<.001&&(v=1),this.x=(m-p)/v,this.y=(h-f)/v,this.z=(u-c)/v,this.w=Math.acos((l+d+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class ft extends Ne{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new pt(0,0,e,t),this.scissorTest=!1,this.viewport=new pt(0,0,e,t);const r={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:W,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0,count:1},n);const i=new dt(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);i.flipY=!1,i.generateMipmaps=n.generateMipmaps,i.internalFormat=n.internalFormat,this.textures=[];const s=n.count;for(let e=0;e<s;e++)this.textures[e]=i.clone(),this.textures[e].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let r=0,i=this.textures.length;r<i;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++)this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ct(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class mt extends ft{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class gt extends dt{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=G,this.minFilter=G,this.wrapR=V,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class vt extends dt{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=G,this.minFilter=G,this.wrapR=V,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class xt{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,i,s,o){let a=n[r+0],l=n[r+1],c=n[r+2],h=n[r+3];const u=i[s+0],d=i[s+1],p=i[s+2],f=i[s+3];if(0===o)return e[t+0]=a,e[t+1]=l,e[t+2]=c,void(e[t+3]=h);if(1===o)return e[t+0]=u,e[t+1]=d,e[t+2]=p,void(e[t+3]=f);if(h!==f||a!==u||l!==d||c!==p){let e=1-o;const t=a*u+l*d+c*p+h*f,n=t>=0?1:-1,r=1-t*t;if(r>Number.EPSILON){const i=Math.sqrt(r),s=Math.atan2(i,t*n);e=Math.sin(e*s)/i,o=Math.sin(o*s)/i}const i=o*n;if(a=a*e+u*i,l=l*e+d*i,c=c*e+p*i,h=h*e+f*i,e===1-o){const e=1/Math.sqrt(a*a+l*l+c*c+h*h);a*=e,l*=e,c*=e,h*=e}}e[t]=a,e[t+1]=l,e[t+2]=c,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,r,i,s){const o=n[r],a=n[r+1],l=n[r+2],c=n[r+3],h=i[s],u=i[s+1],d=i[s+2],p=i[s+3];return e[t]=o*p+c*h+a*d-l*u,e[t+1]=a*p+c*u+l*h-o*d,e[t+2]=l*p+c*d+o*u-a*h,e[t+3]=c*p-o*h-a*u-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,r=e._y,i=e._z,s=e._order,o=Math.cos,a=Math.sin,l=o(n/2),c=o(r/2),h=o(i/2),u=a(n/2),d=a(r/2),p=a(i/2);switch(s){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!0===t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],i=t[8],s=t[1],o=t[5],a=t[9],l=t[2],c=t[6],h=t[10],u=n+o+h;if(u>0){const e=.5/Math.sqrt(u+1);this._w=.25/e,this._x=(c-a)*e,this._y=(i-l)*e,this._z=(s-r)*e}else if(n>o&&n>h){const e=2*Math.sqrt(1+n-o-h);this._w=(c-a)/e,this._x=.25*e,this._y=(r+s)/e,this._z=(i+l)/e}else if(o>h){const e=2*Math.sqrt(1+o-n-h);this._w=(i-l)/e,this._x=(r+s)/e,this._y=.25*e,this._z=(a+c)/e}else{const e=2*Math.sqrt(1+h-n-o);this._w=(s-r)/e,this._x=(i+l)/e,this._y=(a+c)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ze(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,i=e._z,s=e._w,o=t._x,a=t._y,l=t._z,c=t._w;return this._x=n*c+s*o+r*l-i*a,this._y=r*c+s*a+i*o-n*l,this._z=i*c+s*l+n*a-r*o,this._w=s*c-n*o-r*a-i*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,r=this._y,i=this._z,s=this._w;let o=s*e._w+n*e._x+r*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=s,this._x=n,this._y=r,this._z=i,this;const a=1-o*o;if(a<=Number.EPSILON){const e=1-t;return this._w=e*s+t*this._w,this._x=e*n+t*this._x,this._y=e*r+t*this._y,this._z=e*i+t*this._z,this.normalize(),this}const l=Math.sqrt(a),c=Math.atan2(l,o),h=Math.sin((1-t)*c)/l,u=Math.sin(t*c)/l;return this._w=s*h+this._w*u,this._x=n*h+this._x*u,this._y=r*h+this._y*u,this._z=i*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),r=Math.sqrt(1-n),i=Math.sqrt(n);return this.set(r*Math.sin(e),r*Math.cos(e),i*Math.sin(t),i*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class _t{constructor(e=0,t=0,n=0){_t.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(yt.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(yt.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,i=e.elements,s=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*s,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*s,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*s,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,i=e.x,s=e.y,o=e.z,a=e.w,l=2*(s*r-o*n),c=2*(o*t-i*r),h=2*(i*n-s*t);return this.x=t+a*l+s*h-o*c,this.y=n+a*c+o*l-i*h,this.z=r+a*h+i*c-s*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,i=e.z,s=t.x,o=t.y,a=t.z;return this.x=r*a-i*o,this.y=i*s-n*a,this.z=n*o-r*s,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return bt.copy(this).projectOnVector(e),this.sub(bt)}reflect(e){return this.sub(bt.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(ze(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=2*Math.random()-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const bt=new _t,yt=new xt;class Et{constructor(e=new _t(1/0,1/0,1/0),t=new _t(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Mt.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Mt.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Mt.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(void 0!==n){const r=n.getAttribute("position");if(!0===t&&void 0!==r&&!0!==e.isInstancedMesh)for(let t=0,n=r.count;t<n;t++)!0===e.isMesh?e.getVertexPosition(t,Mt):Mt.fromBufferAttribute(r,t),Mt.applyMatrix4(e.matrixWorld),this.expandByPoint(Mt);else void 0!==e.boundingBox?(null===e.boundingBox&&e.computeBoundingBox(),At.copy(e.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),At.copy(n.boundingBox)),At.applyMatrix4(e.matrixWorld),this.union(At)}const r=e.children;for(let e=0,n=r.length;e<n;e++)this.expandByObject(r[e],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Mt),Mt.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Lt),It.subVectors(this.max,Lt),Tt.subVectors(e.a,Lt),wt.subVectors(e.b,Lt),Ct.subVectors(e.c,Lt),Rt.subVectors(wt,Tt),Pt.subVectors(Ct,wt),Dt.subVectors(Tt,Ct);let t=[0,-Rt.z,Rt.y,0,-Pt.z,Pt.y,0,-Dt.z,Dt.y,Rt.z,0,-Rt.x,Pt.z,0,-Pt.x,Dt.z,0,-Dt.x,-Rt.y,Rt.x,0,-Pt.y,Pt.x,0,-Dt.y,Dt.x,0];return!!Ut(t,Tt,wt,Ct,It)&&(t=[1,0,0,0,1,0,0,0,1],!!Ut(t,Tt,wt,Ct,It)&&(Nt.crossVectors(Rt,Pt),t=[Nt.x,Nt.y,Nt.z],Ut(t,Tt,wt,Ct,It)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Mt).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(Mt).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(St[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),St[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),St[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),St[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),St[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),St[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),St[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),St[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(St)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const St=[new _t,new _t,new _t,new _t,new _t,new _t,new _t,new _t],Mt=new _t,At=new Et,Tt=new _t,wt=new _t,Ct=new _t,Rt=new _t,Pt=new _t,Dt=new _t,Lt=new _t,It=new _t,Nt=new _t,Ot=new _t;function Ut(e,t,n,r,i){for(let s=0,o=e.length-3;s<=o;s+=3){Ot.fromArray(e,s);const o=i.x*Math.abs(Ot.x)+i.y*Math.abs(Ot.y)+i.z*Math.abs(Ot.z),a=t.dot(Ot),l=n.dot(Ot),c=r.dot(Ot);if(Math.max(-Math.max(a,l,c),Math.min(a,l,c))>o)return!1}return!0}const Ft=new Et,kt=new _t,zt=new _t;class Bt{constructor(e=new _t,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):Ft.setFromPoints(e).getCenter(n);let r=0;for(let t=0,i=e.length;t<i;t++)r=Math.max(r,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;kt.subVectors(e,this.center);const t=kt.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.addScaledVector(kt,n/e),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(zt.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(kt.copy(e.center).add(zt)),this.expandByPoint(kt.copy(e.center).sub(zt))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Vt=new _t,$t=new _t,Gt=new _t,Ht=new _t,jt=new _t,Wt=new _t,Xt=new _t;class Yt{constructor(e=new _t,t=new _t(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Vt)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Vt.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Vt.copy(this.origin).addScaledVector(this.direction,t),Vt.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){$t.copy(e).add(t).multiplyScalar(.5),Gt.copy(t).sub(e).normalize(),Ht.copy(this.origin).sub($t);const i=.5*e.distanceTo(t),s=-this.direction.dot(Gt),o=Ht.dot(this.direction),a=-Ht.dot(Gt),l=Ht.lengthSq(),c=Math.abs(1-s*s);let h,u,d,p;if(c>0)if(h=s*a-o,u=s*o-a,p=i*c,h>=0)if(u>=-p)if(u<=p){const e=1/c;h*=e,u*=e,d=h*(h+s*u+2*o)+u*(s*h+u+2*a)+l}else u=i,h=Math.max(0,-(s*u+o)),d=-h*h+u*(u+2*a)+l;else u=-i,h=Math.max(0,-(s*u+o)),d=-h*h+u*(u+2*a)+l;else u<=-p?(h=Math.max(0,-(-s*i+o)),u=h>0?-i:Math.min(Math.max(-i,-a),i),d=-h*h+u*(u+2*a)+l):u<=p?(h=0,u=Math.min(Math.max(-i,-a),i),d=u*(u+2*a)+l):(h=Math.max(0,-(s*i+o)),u=h>0?i:Math.min(Math.max(-i,-a),i),d=-h*h+u*(u+2*a)+l);else u=s>0?-i:i,h=Math.max(0,-(s*u+o)),d=-h*h+u*(u+2*a)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,h),r&&r.copy($t).addScaledVector(Gt,u),d}intersectSphere(e,t){Vt.subVectors(e.center,this.origin);const n=Vt.dot(this.direction),r=Vt.dot(Vt)-n*n,i=e.radius*e.radius;if(r>i)return null;const s=Math.sqrt(i-r),o=n-s,a=n+s;return a<0?null:o<0?this.at(a,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,i,s,o,a;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(n=(e.min.x-u.x)*l,r=(e.max.x-u.x)*l):(n=(e.max.x-u.x)*l,r=(e.min.x-u.x)*l),c>=0?(i=(e.min.y-u.y)*c,s=(e.max.y-u.y)*c):(i=(e.max.y-u.y)*c,s=(e.min.y-u.y)*c),n>s||i>r?null:((i>n||isNaN(n))&&(n=i),(s<r||isNaN(r))&&(r=s),h>=0?(o=(e.min.z-u.z)*h,a=(e.max.z-u.z)*h):(o=(e.max.z-u.z)*h,a=(e.min.z-u.z)*h),n>a||o>r?null:((o>n||n!=n)&&(n=o),(a<r||r!=r)&&(r=a),r<0?null:this.at(n>=0?n:r,t)))}intersectsBox(e){return null!==this.intersectBox(e,Vt)}intersectTriangle(e,t,n,r,i){jt.subVectors(t,e),Wt.subVectors(n,e),Xt.crossVectors(jt,Wt);let s,o=this.direction.dot(Xt);if(o>0){if(r)return null;s=1}else{if(!(o<0))return null;s=-1,o=-o}Ht.subVectors(this.origin,e);const a=s*this.direction.dot(Wt.crossVectors(Ht,Wt));if(a<0)return null;const l=s*this.direction.dot(jt.cross(Ht));if(l<0)return null;if(a+l>o)return null;const c=-s*Ht.dot(Xt);return c<0?null:this.at(c/o,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class qt{constructor(e,t,n,r,i,s,o,a,l,c,h,u,d,p,f,m){qt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,n,r,i,s,o,a,l,c,h,u,d,p,f,m)}set(e,t,n,r,i,s,o,a,l,c,h,u,d,p,f,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=i,g[5]=s,g[9]=o,g[13]=a,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new qt).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/Zt.setFromMatrixColumn(e,0).length(),i=1/Zt.setFromMatrixColumn(e,1).length(),s=1/Zt.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*s,t[9]=n[9]*s,t[10]=n[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,r=e.y,i=e.z,s=Math.cos(n),o=Math.sin(n),a=Math.cos(r),l=Math.sin(r),c=Math.cos(i),h=Math.sin(i);if("XYZ"===e.order){const e=s*c,n=s*h,r=o*c,i=o*h;t[0]=a*c,t[4]=-a*h,t[8]=l,t[1]=n+r*l,t[5]=e-i*l,t[9]=-o*a,t[2]=i-e*l,t[6]=r+n*l,t[10]=s*a}else if("YXZ"===e.order){const e=a*c,n=a*h,r=l*c,i=l*h;t[0]=e+i*o,t[4]=r*o-n,t[8]=s*l,t[1]=s*h,t[5]=s*c,t[9]=-o,t[2]=n*o-r,t[6]=i+e*o,t[10]=s*a}else if("ZXY"===e.order){const e=a*c,n=a*h,r=l*c,i=l*h;t[0]=e-i*o,t[4]=-s*h,t[8]=r+n*o,t[1]=n+r*o,t[5]=s*c,t[9]=i-e*o,t[2]=-s*l,t[6]=o,t[10]=s*a}else if("ZYX"===e.order){const e=s*c,n=s*h,r=o*c,i=o*h;t[0]=a*c,t[4]=r*l-n,t[8]=e*l+i,t[1]=a*h,t[5]=i*l+e,t[9]=n*l-r,t[2]=-l,t[6]=o*a,t[10]=s*a}else if("YZX"===e.order){const e=s*a,n=s*l,r=o*a,i=o*l;t[0]=a*c,t[4]=i-e*h,t[8]=r*h+n,t[1]=h,t[5]=s*c,t[9]=-o*c,t[2]=-l*c,t[6]=n*h+r,t[10]=e-i*h}else if("XZY"===e.order){const e=s*a,n=s*l,r=o*a,i=o*l;t[0]=a*c,t[4]=-h,t[8]=l*c,t[1]=e*h+i,t[5]=s*c,t[9]=n*h-r,t[2]=r*h-n,t[6]=o*c,t[10]=i*h+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Jt,e,Qt)}lookAt(e,t,n){const r=this.elements;return nn.subVectors(e,t),0===nn.lengthSq()&&(nn.z=1),nn.normalize(),en.crossVectors(n,nn),0===en.lengthSq()&&(1===Math.abs(n.z)?nn.x+=1e-4:nn.z+=1e-4,nn.normalize(),en.crossVectors(n,nn)),en.normalize(),tn.crossVectors(nn,en),r[0]=en.x,r[4]=tn.x,r[8]=nn.x,r[1]=en.y,r[5]=tn.y,r[9]=nn.y,r[2]=en.z,r[6]=tn.z,r[10]=nn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,i=this.elements,s=n[0],o=n[4],a=n[8],l=n[12],c=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],x=n[7],_=n[11],b=n[15],y=r[0],E=r[4],S=r[8],M=r[12],A=r[1],T=r[5],w=r[9],C=r[13],R=r[2],P=r[6],D=r[10],L=r[14],I=r[3],N=r[7],O=r[11],U=r[15];return i[0]=s*y+o*A+a*R+l*I,i[4]=s*E+o*T+a*P+l*N,i[8]=s*S+o*w+a*D+l*O,i[12]=s*M+o*C+a*L+l*U,i[1]=c*y+h*A+u*R+d*I,i[5]=c*E+h*T+u*P+d*N,i[9]=c*S+h*w+u*D+d*O,i[13]=c*M+h*C+u*L+d*U,i[2]=p*y+f*A+m*R+g*I,i[6]=p*E+f*T+m*P+g*N,i[10]=p*S+f*w+m*D+g*O,i[14]=p*M+f*C+m*L+g*U,i[3]=v*y+x*A+_*R+b*I,i[7]=v*E+x*T+_*P+b*N,i[11]=v*S+x*w+_*D+b*O,i[15]=v*M+x*C+_*L+b*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],s=e[1],o=e[5],a=e[9],l=e[13],c=e[2],h=e[6],u=e[10],d=e[14];return e[3]*(+i*a*h-r*l*h-i*o*u+n*l*u+r*o*d-n*a*d)+e[7]*(+t*a*d-t*l*u+i*s*u-r*s*d+r*l*c-i*a*c)+e[11]*(+t*l*h-t*o*d-i*s*h+n*s*d+i*o*c-n*l*c)+e[15]*(-r*o*c-t*a*h+t*o*u+r*s*h-n*s*u+n*a*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],s=e[4],o=e[5],a=e[6],l=e[7],c=e[8],h=e[9],u=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],v=h*m*l-f*u*l+f*a*d-o*m*d-h*a*g+o*u*g,x=p*u*l-c*m*l-p*a*d+s*m*d+c*a*g-s*u*g,_=c*f*l-p*h*l+p*o*d-s*f*d-c*o*g+s*h*g,b=p*h*a-c*f*a-p*o*u+s*f*u+c*o*m-s*h*m,y=t*v+n*x+r*_+i*b;if(0===y)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/y;return e[0]=v*E,e[1]=(f*u*i-h*m*i-f*r*d+n*m*d+h*r*g-n*u*g)*E,e[2]=(o*m*i-f*a*i+f*r*l-n*m*l-o*r*g+n*a*g)*E,e[3]=(h*a*i-o*u*i-h*r*l+n*u*l+o*r*d-n*a*d)*E,e[4]=x*E,e[5]=(c*m*i-p*u*i+p*r*d-t*m*d-c*r*g+t*u*g)*E,e[6]=(p*a*i-s*m*i-p*r*l+t*m*l+s*r*g-t*a*g)*E,e[7]=(s*u*i-c*a*i+c*r*l-t*u*l-s*r*d+t*a*d)*E,e[8]=_*E,e[9]=(p*h*i-c*f*i-p*n*d+t*f*d+c*n*g-t*h*g)*E,e[10]=(s*f*i-p*o*i+p*n*l-t*f*l-s*n*g+t*o*g)*E,e[11]=(c*o*i-s*h*i-c*n*l+t*h*l+s*n*d-t*o*d)*E,e[12]=b*E,e[13]=(c*f*r-p*h*r+p*n*u-t*f*u-c*n*m+t*h*m)*E,e[14]=(p*o*r-s*f*r-p*n*a+t*f*a+s*n*m-t*o*m)*E,e[15]=(s*h*r-c*o*r+c*n*a-t*h*a-s*n*u+t*o*u)*E,this}scale(e){const t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),i=1-n,s=e.x,o=e.y,a=e.z,l=i*s,c=i*o;return this.set(l*s+n,l*o-r*a,l*a+r*o,0,l*o+r*a,c*o+n,c*a-r*s,0,l*a-r*o,c*a+r*s,i*a*a+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,i,s){return this.set(1,n,i,0,e,1,s,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,i=t._x,s=t._y,o=t._z,a=t._w,l=i+i,c=s+s,h=o+o,u=i*l,d=i*c,p=i*h,f=s*c,m=s*h,g=o*h,v=a*l,x=a*c,_=a*h,b=n.x,y=n.y,E=n.z;return r[0]=(1-(f+g))*b,r[1]=(d+_)*b,r[2]=(p-x)*b,r[3]=0,r[4]=(d-_)*y,r[5]=(1-(u+g))*y,r[6]=(m+v)*y,r[7]=0,r[8]=(p+x)*E,r[9]=(m-v)*E,r[10]=(1-(u+f))*E,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let i=Zt.set(r[0],r[1],r[2]).length();const s=Zt.set(r[4],r[5],r[6]).length(),o=Zt.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],Kt.copy(this);const a=1/i,l=1/s,c=1/o;return Kt.elements[0]*=a,Kt.elements[1]*=a,Kt.elements[2]*=a,Kt.elements[4]*=l,Kt.elements[5]*=l,Kt.elements[6]*=l,Kt.elements[8]*=c,Kt.elements[9]*=c,Kt.elements[10]*=c,t.setFromRotationMatrix(Kt),n.x=i,n.y=s,n.z=o,this}makePerspective(e,t,n,r,i,s,o=2e3){const a=this.elements,l=2*i/(t-e),c=2*i/(n-r),h=(t+e)/(t-e),u=(n+r)/(n-r);let d,p;if(o===Le)d=-(s+i)/(s-i),p=-2*s*i/(s-i);else{if(o!==Ie)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);d=-s/(s-i),p=-s*i/(s-i)}return a[0]=l,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=c,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,r,i,s,o=2e3){const a=this.elements,l=1/(t-e),c=1/(n-r),h=1/(s-i),u=(t+e)*l,d=(n+r)*c;let p,f;if(o===Le)p=(s+i)*h,f=-2*h;else{if(o!==Ie)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);p=i*h,f=-1*h}return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=f,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Zt=new _t,Kt=new qt,Jt=new _t(0,0,0),Qt=new _t(1,1,1),en=new _t,tn=new _t,nn=new _t,rn=new qt,sn=new xt;class on{constructor(e=0,t=0,n=0,r=on.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,i=r[0],s=r[4],o=r[8],a=r[1],l=r[5],c=r[9],h=r[2],u=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(ze(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-s,i)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-ze(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(a,l)):(this._y=Math.atan2(-h,i),this._z=0);break;case"ZXY":this._x=Math.asin(ze(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(a,i));break;case"ZYX":this._y=Math.asin(-ze(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(a,i)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(ze(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,i)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-ze(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return rn.makeRotationFromQuaternion(e),this.setFromRotationMatrix(rn,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return sn.setFromEuler(this),this.setFromQuaternion(sn,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}on.DEFAULT_ORDER="XYZ";class an{constructor(){this.mask=1}set(e){this.mask=1<<e>>>0}enable(e){this.mask|=1<<e}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e}disable(e){this.mask&=~(1<<e)}disableAll(){this.mask=0}test(e){return!!(this.mask&e.mask)}isEnabled(e){return!!(this.mask&1<<e)}}let ln=0;const cn=new _t,hn=new xt,un=new qt,dn=new _t,pn=new _t,fn=new _t,mn=new xt,gn=new _t(1,0,0),vn=new _t(0,1,0),xn=new _t(0,0,1),_n={type:"added"},bn={type:"removed"},yn={type:"childadded",child:null},En={type:"childremoved",child:null};class Sn extends Ne{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ln++}),this.uuid=ke(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Sn.DEFAULT_UP.clone();const e=new _t,t=new on,n=new xt,r=new _t(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new qt},normalMatrix:{value:new Xe}}),this.matrix=new qt,this.matrixWorld=new qt,this.matrixAutoUpdate=Sn.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Sn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new an,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return hn.setFromAxisAngle(e,t),this.quaternion.multiply(hn),this}rotateOnWorldAxis(e,t){return hn.setFromAxisAngle(e,t),this.quaternion.premultiply(hn),this}rotateX(e){return this.rotateOnAxis(gn,e)}rotateY(e){return this.rotateOnAxis(vn,e)}rotateZ(e){return this.rotateOnAxis(xn,e)}translateOnAxis(e,t){return cn.copy(e).applyQuaternion(this.quaternion),this.position.add(cn.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(gn,e)}translateY(e){return this.translateOnAxis(vn,e)}translateZ(e){return this.translateOnAxis(xn,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(un.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?dn.copy(e):dn.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),pn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?un.lookAt(pn,dn,this.up):un.lookAt(dn,pn,this.up),this.quaternion.setFromRotationMatrix(un),r&&(un.extractRotation(r.matrixWorld),hn.setFromRotationMatrix(un),this.quaternion.premultiply(hn.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(_n),yn.child=e,this.dispatchEvent(yn),yn.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(bn),En.child=e,this.dispatchEvent(En),En.child=null),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),un.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),un.multiply(e.parent.matrixWorld)),e.applyMatrix4(un),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(e,t);if(void 0!==r)return r}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const r=this.children;for(let i=0,s=r.length;i<s;i++)r[i].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(pn,e,fn),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(pn,mn,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++){const r=t[n];!0!==r.matrixWorldAutoUpdate&&!0!==e||r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++){const n=e[t];!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};function i(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map((e=>({boxInitialized:e.boxInitialized,boxMin:e.box.min.toArray(),boxMax:e.box.max.toArray(),sphereInitialized:e.sphereInitialized,sphereRadius:e.sphere.radius,sphereCenter:e.sphere.center.toArray()}))),r.maxGeometryCount=this._maxGeometryCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(e),null!==this.boundingSphere&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),null!==this.boundingBox&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,r=n.length;t<r;t++){const r=n[t];i(e.shapes,r)}else i(e.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,r=this.material.length;n<r;n++)t.push(i(e.materials,this.material[n]));r.material=t}else r.material=i(e.materials,this.material);if(this.children.length>0){r.children=[];for(let t=0;t<this.children.length;t++)r.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];r.animations.push(i(e.animations,n))}}if(t){const t=s(e.geometries),r=s(e.materials),i=s(e.textures),o=s(e.images),a=s(e.shapes),l=s(e.skeletons),c=s(e.animations),h=s(e.nodes);t.length>0&&(n.geometries=t),r.length>0&&(n.materials=r),i.length>0&&(n.textures=i),o.length>0&&(n.images=o),a.length>0&&(n.shapes=a),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c),h.length>0&&(n.nodes=h)}return n.object=r,n;function s(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}}Sn.DEFAULT_UP=new _t(0,1,0),Sn.DEFAULT_MATRIX_AUTO_UPDATE=!0,Sn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Mn=new _t,An=new _t,Tn=new _t,wn=new _t,Cn=new _t,Rn=new _t,Pn=new _t,Dn=new _t,Ln=new _t,In=new _t;class Nn{constructor(e=new _t,t=new _t,n=new _t){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),Mn.subVectors(e,t),r.cross(Mn);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(e,t,n,r,i){Mn.subVectors(r,t),An.subVectors(n,t),Tn.subVectors(e,t);const s=Mn.dot(Mn),o=Mn.dot(An),a=Mn.dot(Tn),l=An.dot(An),c=An.dot(Tn),h=s*l-o*o;if(0===h)return i.set(0,0,0),null;const u=1/h,d=(l*a-o*c)*u,p=(s*c-o*a)*u;return i.set(1-d-p,p,d)}static containsPoint(e,t,n,r){return null!==this.getBarycoord(e,t,n,r,wn)&&wn.x>=0&&wn.y>=0&&wn.x+wn.y<=1}static getInterpolation(e,t,n,r,i,s,o,a){return null===this.getBarycoord(e,t,n,r,wn)?(a.x=0,a.y=0,"z"in a&&(a.z=0),"w"in a&&(a.w=0),null):(a.setScalar(0),a.addScaledVector(i,wn.x),a.addScaledVector(s,wn.y),a.addScaledVector(o,wn.z),a)}static isFrontFacing(e,t,n,r){return Mn.subVectors(n,t),An.subVectors(e,t),Mn.cross(An).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Mn.subVectors(this.c,this.b),An.subVectors(this.a,this.b),.5*Mn.cross(An).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Nn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Nn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,r,i){return Nn.getInterpolation(e,this.a,this.b,this.c,t,n,r,i)}containsPoint(e){return Nn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Nn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,i=this.c;let s,o;Cn.subVectors(r,n),Rn.subVectors(i,n),Dn.subVectors(e,n);const a=Cn.dot(Dn),l=Rn.dot(Dn);if(a<=0&&l<=0)return t.copy(n);Ln.subVectors(e,r);const c=Cn.dot(Ln),h=Rn.dot(Ln);if(c>=0&&h<=c)return t.copy(r);const u=a*h-c*l;if(u<=0&&a>=0&&c<=0)return s=a/(a-c),t.copy(n).addScaledVector(Cn,s);In.subVectors(e,i);const d=Cn.dot(In),p=Rn.dot(In);if(p>=0&&d<=p)return t.copy(i);const f=d*l-a*p;if(f<=0&&l>=0&&p<=0)return o=l/(l-p),t.copy(n).addScaledVector(Rn,o);const m=c*p-d*h;if(m<=0&&h-c>=0&&d-p>=0)return Pn.subVectors(i,r),o=(h-c)/(h-c+(d-p)),t.copy(r).addScaledVector(Pn,o);const g=1/(m+f+u);return s=f*g,o=u*g,t.copy(n).addScaledVector(Cn,s).addScaledVector(Rn,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const On={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Un={h:0,s:0,l:0},Fn={h:0,s:0,l:0};function kn(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}class zn{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(void 0===t&&void 0===n){const t=e;t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=pe){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,rt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r=rt.workingColorSpace){return this.r=e,this.g=t,this.b=n,rt.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r=rt.workingColorSpace){if(e=(e%(i=1)+i)%i,t=ze(t,0,1),n=ze(n,0,1),0===t)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,i=2*n-r;this.r=kn(i,r,e+1/3),this.g=kn(i,r,e),this.b=kn(i,r,e-1/3)}var i;return rt.toWorkingColorSpace(this,r),this}setStyle(e,t=pe){function n(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let i;const s=r[1],o=r[2];switch(s){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(i[4]),this.setRGB(Math.min(255,parseInt(i[1],10))/255,Math.min(255,parseInt(i[2],10))/255,Math.min(255,parseInt(i[3],10))/255,t);if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(i[4]),this.setRGB(Math.min(100,parseInt(i[1],10))/100,Math.min(100,parseInt(i[2],10))/100,Math.min(100,parseInt(i[3],10))/100,t);break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(i[4]),this.setHSL(parseFloat(i[1])/360,parseFloat(i[2])/100,parseFloat(i[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const n=r[1],i=n.length;if(3===i)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,t);if(6===i)return this.setHex(parseInt(n,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=pe){const n=On[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=it(e.r),this.g=it(e.g),this.b=it(e.b),this}copyLinearToSRGB(e){return this.r=st(e.r),this.g=st(e.g),this.b=st(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=pe){return rt.fromWorkingColorSpace(Bn.copy(this),e),65536*Math.round(ze(255*Bn.r,0,255))+256*Math.round(ze(255*Bn.g,0,255))+Math.round(ze(255*Bn.b,0,255))}getHexString(e=pe){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=rt.workingColorSpace){rt.fromWorkingColorSpace(Bn.copy(this),t);const n=Bn.r,r=Bn.g,i=Bn.b,s=Math.max(n,r,i),o=Math.min(n,r,i);let a,l;const c=(o+s)/2;if(o===s)a=0,l=0;else{const e=s-o;switch(l=c<=.5?e/(s+o):e/(2-s-o),s){case n:a=(r-i)/e+(r<i?6:0);break;case r:a=(i-n)/e+2;break;case i:a=(n-r)/e+4}a/=6}return e.h=a,e.s=l,e.l=c,e}getRGB(e,t=rt.workingColorSpace){return rt.fromWorkingColorSpace(Bn.copy(this),t),e.r=Bn.r,e.g=Bn.g,e.b=Bn.b,e}getStyle(e=pe){rt.fromWorkingColorSpace(Bn.copy(this),e);const t=Bn.r,n=Bn.g,r=Bn.b;return e!==pe?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*n)},${Math.round(255*r)})`}offsetHSL(e,t,n){return this.getHSL(Un),this.setHSL(Un.h+e,Un.s+t,Un.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Un),e.getHSL(Fn);const n=Be(Un.h,Fn.h,t),r=Be(Un.s,Fn.s,t),i=Be(Un.l,Fn.l,t);return this.setHSL(n,r,i),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,r=this.b,i=e.elements;return this.r=i[0]*t+i[3]*n+i[6]*r,this.g=i[1]*t+i[4]*n+i[7]*r,this.b=i[2]*t+i[5]*n+i[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Bn=new zn;zn.NAMES=On;let Vn=0;class $n extends Ne{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Vn++}),this.uuid=ke(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=_,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new zn(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ye,this.stencilZFail=ye,this.stencilZPass=ye,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n:console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`)}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function r(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapRotation&&(n.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),204!==this.blendSrc&&(n.blendSrc=this.blendSrc),205!==this.blendDst&&(n.blendDst=this.blendDst),this.blendEquation!==_&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ye&&(n.stencilFail=this.stencilFail),this.stencilZFail!==ye&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==ye&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),t){const t=r(e.textures),i=r(e.images);t.length>0&&(n.textures=t),i.length>0&&(n.images=i)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let r=0;r!==e;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class Gn extends $n{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new zn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new on,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Hn=new _t,jn=new We;class Wn{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=n,this.usage=35044,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=J,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}get updateRange(){return(e="THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.")in Je||(Je[e]=!0,console.warn(e)),this._updateRange;var e}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)jn.fromBufferAttribute(this,t),jn.applyMatrix3(e),this.setXY(t,jn.x,jn.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)Hn.fromBufferAttribute(this,t),Hn.applyMatrix3(e),this.setXYZ(t,Hn.x,Hn.y,Hn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Hn.fromBufferAttribute(this,t),Hn.applyMatrix4(e),this.setXYZ(t,Hn.x,Hn.y,Hn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Hn.fromBufferAttribute(this,t),Hn.applyNormalMatrix(e),this.setXYZ(t,Hn.x,Hn.y,Hn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Hn.fromBufferAttribute(this,t),Hn.transformDirection(e),this.setXYZ(t,Hn.x,Hn.y,Hn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Ge(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=He(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Ge(t,this.array)),t}setX(e,t){return this.normalized&&(t=He(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Ge(t,this.array)),t}setY(e,t){return this.normalized&&(t=He(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Ge(t,this.array)),t}setZ(e,t){return this.normalized&&(t=He(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Ge(t,this.array)),t}setW(e,t){return this.normalized&&(t=He(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=He(t,this.array),n=He(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=He(t,this.array),n=He(n,this.array),r=He(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,i){return e*=this.itemSize,this.normalized&&(t=He(t,this.array),n=He(n,this.array),r=He(r,this.array),i=He(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),e}}class Xn extends Wn{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Yn extends Wn{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class qn extends Wn{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Zn=0;const Kn=new qt,Jn=new Sn,Qn=new _t,er=new Et,tr=new Et,nr=new _t;class rr extends Ne{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Zn++}),this.uuid=ke(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(qe(e)?Yn:Xn)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new Xe).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return Kn.makeRotationFromQuaternion(e),this.applyMatrix4(Kn),this}rotateX(e){return Kn.makeRotationX(e),this.applyMatrix4(Kn),this}rotateY(e){return Kn.makeRotationY(e),this.applyMatrix4(Kn),this}rotateZ(e){return Kn.makeRotationZ(e),this.applyMatrix4(Kn),this}translate(e,t,n){return Kn.makeTranslation(e,t,n),this.applyMatrix4(Kn),this}scale(e,t,n){return Kn.makeScale(e,t,n),this.applyMatrix4(Kn),this}lookAt(e){return Jn.lookAt(e),Jn.updateMatrix(),this.applyMatrix4(Jn.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Qn).negate(),this.translate(Qn.x,Qn.y,Qn.z),this}setFromPoints(e){const t=[];for(let n=0,r=e.length;n<r;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new qn(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Et);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new _t(-1/0,-1/0,-1/0),new _t(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];er.setFromBufferAttribute(n),this.morphTargetsRelative?(nr.addVectors(this.boundingBox.min,er.min),this.boundingBox.expandByPoint(nr),nr.addVectors(this.boundingBox.max,er.max),this.boundingBox.expandByPoint(nr)):(this.boundingBox.expandByPoint(er.min),this.boundingBox.expandByPoint(er.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Bt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new _t,1/0);if(e){const n=this.boundingSphere.center;if(er.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];tr.setFromBufferAttribute(n),this.morphTargetsRelative?(nr.addVectors(er.min,tr.min),er.expandByPoint(nr),nr.addVectors(er.max,tr.max),er.expandByPoint(nr)):(er.expandByPoint(tr.min),er.expandByPoint(tr.max))}er.getCenter(n);let r=0;for(let t=0,i=e.count;t<i;t++)nr.fromBufferAttribute(e,t),r=Math.max(r,n.distanceToSquared(nr));if(t)for(let i=0,s=t.length;i<s;i++){const s=t[i],o=this.morphTargetsRelative;for(let t=0,i=s.count;t<i;t++)nr.fromBufferAttribute(s,t),o&&(Qn.fromBufferAttribute(e,t),nr.add(Qn)),r=Math.max(r,n.distanceToSquared(nr))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.position,r=t.normal,i=t.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Wn(new Float32Array(4*n.count),4));const s=this.getAttribute("tangent"),o=[],a=[];for(let e=0;e<n.count;e++)o[e]=new _t,a[e]=new _t;const l=new _t,c=new _t,h=new _t,u=new We,d=new We,p=new We,f=new _t,m=new _t;function g(e,t,r){l.fromBufferAttribute(n,e),c.fromBufferAttribute(n,t),h.fromBufferAttribute(n,r),u.fromBufferAttribute(i,e),d.fromBufferAttribute(i,t),p.fromBufferAttribute(i,r),c.sub(l),h.sub(l),d.sub(u),p.sub(u);const s=1/(d.x*p.y-p.x*d.y);isFinite(s)&&(f.copy(c).multiplyScalar(p.y).addScaledVector(h,-d.y).multiplyScalar(s),m.copy(h).multiplyScalar(d.x).addScaledVector(c,-p.x).multiplyScalar(s),o[e].add(f),o[t].add(f),o[r].add(f),a[e].add(m),a[t].add(m),a[r].add(m))}let v=this.groups;0===v.length&&(v=[{start:0,count:e.count}]);for(let t=0,n=v.length;t<n;++t){const n=v[t],r=n.start;for(let t=r,i=r+n.count;t<i;t+=3)g(e.getX(t+0),e.getX(t+1),e.getX(t+2))}const x=new _t,_=new _t,b=new _t,y=new _t;function E(e){b.fromBufferAttribute(r,e),y.copy(b);const t=o[e];x.copy(t),x.sub(b.multiplyScalar(b.dot(t))).normalize(),_.crossVectors(y,t);const n=_.dot(a[e])<0?-1:1;s.setXYZW(e,x.x,x.y,x.z,n)}for(let t=0,n=v.length;t<n;++t){const n=v[t],r=n.start;for(let t=r,i=r+n.count;t<i;t+=3)E(e.getX(t+0)),E(e.getX(t+1)),E(e.getX(t+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new Wn(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const r=new _t,i=new _t,s=new _t,o=new _t,a=new _t,l=new _t,c=new _t,h=new _t;if(e)for(let u=0,d=e.count;u<d;u+=3){const d=e.getX(u+0),p=e.getX(u+1),f=e.getX(u+2);r.fromBufferAttribute(t,d),i.fromBufferAttribute(t,p),s.fromBufferAttribute(t,f),c.subVectors(s,i),h.subVectors(r,i),c.cross(h),o.fromBufferAttribute(n,d),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),o.add(c),a.add(c),l.add(c),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let e=0,o=t.count;e<o;e+=3)r.fromBufferAttribute(t,e+0),i.fromBufferAttribute(t,e+1),s.fromBufferAttribute(t,e+2),c.subVectors(s,i),h.subVectors(r,i),c.cross(h),n.setXYZ(e+0,c.x,c.y,c.z),n.setXYZ(e+1,c.x,c.y,c.z),n.setXYZ(e+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)nr.fromBufferAttribute(e,t),nr.normalize(),e.setXYZ(t,nr.x,nr.y,nr.z)}toNonIndexed(){function e(e,t){const n=e.array,r=e.itemSize,i=e.normalized,s=new n.constructor(t.length*r);let o=0,a=0;for(let i=0,l=t.length;i<l;i++){o=e.isInterleavedBufferAttribute?t[i]*e.data.stride+e.offset:t[i]*r;for(let e=0;e<r;e++)s[a++]=n[o++]}return new Wn(s,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new rr,n=this.index.array,r=this.attributes;for(const i in r){const s=e(r[i],n);t.setAttribute(i,s)}const i=this.morphAttributes;for(const r in i){const s=[],o=i[r];for(let t=0,r=o.length;t<r;t++){const r=e(o[t],n);s.push(r)}t.morphAttributes[r]=s}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let e=0,n=s.length;e<n;e++){const n=s[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const r=n[t];e.data.attributes[t]=r.toJSON(e.data)}const r={};let i=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],s=[];for(let t=0,r=n.length;t<r;t++){const r=n[t];s.push(r.toJSON(e.data))}s.length>0&&(r[t]=s,i=!0)}i&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const r=e.attributes;for(const e in r){const n=r[e];this.setAttribute(e,n.clone(t))}const i=e.morphAttributes;for(const e in i){const n=[],r=i[e];for(let e=0,i=r.length;e<i;e++)n.push(r[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let e=0,t=s.length;e<t;e++){const t=s[e];this.addGroup(t.start,t.count,t.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const a=e.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ir=new qt,sr=new Yt,or=new Bt,ar=new _t,lr=new _t,cr=new _t,hr=new _t,ur=new _t,dr=new _t,pr=new We,fr=new We,mr=new We,gr=new _t,vr=new _t,xr=new _t,_r=new _t,br=new _t;class yr extends Sn{constructor(e=new rr,t=new Gn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){const n=this.geometry,r=n.attributes.position,i=n.morphAttributes.position,s=n.morphTargetsRelative;t.fromBufferAttribute(r,e);const o=this.morphTargetInfluences;if(i&&o){dr.set(0,0,0);for(let n=0,r=i.length;n<r;n++){const r=o[n],a=i[n];0!==r&&(ur.fromBufferAttribute(a,e),s?dr.addScaledVector(ur,r):dr.addScaledVector(ur.sub(t),r))}t.add(dr)}return t}raycast(e,t){const n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0!==r){if(null===n.boundingSphere&&n.computeBoundingSphere(),or.copy(n.boundingSphere),or.applyMatrix4(i),sr.copy(e.ray).recast(e.near),!1===or.containsPoint(sr.origin)){if(null===sr.intersectSphere(or,ar))return;if(sr.origin.distanceToSquared(ar)>(e.far-e.near)**2)return}ir.copy(i).invert(),sr.copy(e.ray).applyMatrix4(ir),null!==n.boundingBox&&!1===sr.intersectsBox(n.boundingBox)||this._computeIntersections(e,t,sr)}}_computeIntersections(e,t,n){let r;const i=this.geometry,s=this.material,o=i.index,a=i.attributes.position,l=i.attributes.uv,c=i.attributes.uv1,h=i.attributes.normal,u=i.groups,d=i.drawRange;if(null!==o)if(Array.isArray(s))for(let i=0,a=u.length;i<a;i++){const a=u[i],p=s[a.materialIndex];for(let i=Math.max(a.start,d.start),s=Math.min(o.count,Math.min(a.start+a.count,d.start+d.count));i<s;i+=3)r=Er(this,p,e,n,l,c,h,o.getX(i),o.getX(i+1),o.getX(i+2)),r&&(r.faceIndex=Math.floor(i/3),r.face.materialIndex=a.materialIndex,t.push(r))}else for(let i=Math.max(0,d.start),a=Math.min(o.count,d.start+d.count);i<a;i+=3)r=Er(this,s,e,n,l,c,h,o.getX(i),o.getX(i+1),o.getX(i+2)),r&&(r.faceIndex=Math.floor(i/3),t.push(r));else if(void 0!==a)if(Array.isArray(s))for(let i=0,o=u.length;i<o;i++){const o=u[i],p=s[o.materialIndex];for(let i=Math.max(o.start,d.start),s=Math.min(a.count,Math.min(o.start+o.count,d.start+d.count));i<s;i+=3)r=Er(this,p,e,n,l,c,h,i,i+1,i+2),r&&(r.faceIndex=Math.floor(i/3),r.face.materialIndex=o.materialIndex,t.push(r))}else for(let i=Math.max(0,d.start),o=Math.min(a.count,d.start+d.count);i<o;i+=3)r=Er(this,s,e,n,l,c,h,i,i+1,i+2),r&&(r.faceIndex=Math.floor(i/3),t.push(r))}}function Er(e,t,n,r,i,s,o,a,l,c){e.getVertexPosition(a,lr),e.getVertexPosition(l,cr),e.getVertexPosition(c,hr);const h=function(e,t,n,r,i,s,o,a){let l;if(l=1===t.side?r.intersectTriangle(o,s,i,!0,a):r.intersectTriangle(i,s,o,0===t.side,a),null===l)return null;br.copy(a),br.applyMatrix4(e.matrixWorld);const c=n.ray.origin.distanceTo(br);return c<n.near||c>n.far?null:{distance:c,point:br.clone(),object:e}}(e,t,n,r,lr,cr,hr,_r);if(h){i&&(pr.fromBufferAttribute(i,a),fr.fromBufferAttribute(i,l),mr.fromBufferAttribute(i,c),h.uv=Nn.getInterpolation(_r,lr,cr,hr,pr,fr,mr,new We)),s&&(pr.fromBufferAttribute(s,a),fr.fromBufferAttribute(s,l),mr.fromBufferAttribute(s,c),h.uv1=Nn.getInterpolation(_r,lr,cr,hr,pr,fr,mr,new We)),o&&(gr.fromBufferAttribute(o,a),vr.fromBufferAttribute(o,l),xr.fromBufferAttribute(o,c),h.normal=Nn.getInterpolation(_r,lr,cr,hr,gr,vr,xr,new _t),h.normal.dot(r.direction)>0&&h.normal.multiplyScalar(-1));const e={a,b:l,c,normal:new _t,materialIndex:0};Nn.getNormal(lr,cr,hr,e.normal),h.face=e}return h}class Sr extends rr{constructor(e=1,t=1,n=1,r=1,i=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:s};const o=this;r=Math.floor(r),i=Math.floor(i),s=Math.floor(s);const a=[],l=[],c=[],h=[];let u=0,d=0;function p(e,t,n,r,i,s,p,f,m,g,v){const x=s/m,_=p/g,b=s/2,y=p/2,E=f/2,S=m+1,M=g+1;let A=0,T=0;const w=new _t;for(let s=0;s<M;s++){const o=s*_-y;for(let a=0;a<S;a++){const u=a*x-b;w[e]=u*r,w[t]=o*i,w[n]=E,l.push(w.x,w.y,w.z),w[e]=0,w[t]=0,w[n]=f>0?1:-1,c.push(w.x,w.y,w.z),h.push(a/m),h.push(1-s/g),A+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){const n=u+t+S*e,r=u+t+S*(e+1),i=u+(t+1)+S*(e+1),s=u+(t+1)+S*e;a.push(n,r,s),a.push(r,i,s),T+=6}o.addGroup(d,T,v),d+=T,u+=A}p("z","y","x",-1,-1,n,t,e,s,i,0),p("z","y","x",1,-1,n,t,-e,s,i,1),p("x","z","y",1,1,e,n,t,r,s,2),p("x","z","y",1,-1,e,n,-t,r,s,3),p("x","y","z",1,-1,e,t,n,r,i,4),p("x","y","z",-1,-1,e,t,-n,r,i,5),this.setIndex(a),this.setAttribute("position",new qn(l,3)),this.setAttribute("normal",new qn(c,3)),this.setAttribute("uv",new qn(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Sr(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Mr(e){const t={};for(const n in e){t[n]={};for(const r in e[n]){const i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[n][r]=null):t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}}return t}function Ar(e){const t={};for(let n=0;n<e.length;n++){const r=Mr(e[n]);for(const e in r)t[e]=r[e]}return t}function Tr(e){return null===e.getRenderTarget()?e.outputColorSpace:rt.workingColorSpace}const wr={clone:Mr,merge:Ar};class Cr extends $n{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Mr(e.uniforms),this.uniformsGroups=function(e){const t=[];for(let n=0;n<e.length;n++)t.push(e[n].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Rr extends Sn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new qt,this.projectionMatrix=new qt,this.projectionMatrixInverse=new qt,this.coordinateSystem=Le}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const Pr=new _t,Dr=new We,Lr=new We;class Ir extends Rr{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*Fe*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*Ue*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*Fe*Math.atan(Math.tan(.5*Ue*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Pr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Pr.x,Pr.y).multiplyScalar(-e/Pr.z),Pr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Pr.x,Pr.y).multiplyScalar(-e/Pr.z)}getViewSize(e,t){return this.getViewBounds(e,Dr,Lr),t.subVectors(Lr,Dr)}setViewOffset(e,t,n,r,i,s){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*Ue*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r;const s=this.view;if(null!==this.view&&this.view.enabled){const e=s.fullWidth,o=s.fullHeight;i+=s.offsetX*r/e,t-=s.offsetY*n/o,r*=s.width/e,n*=s.height/o}const o=this.filmOffset;0!==o&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Nr=-90;class Or extends Sn{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new Ir(Nr,1,e,t);r.layers=this.layers,this.add(r);const i=new Ir(Nr,1,e,t);i.layers=this.layers,this.add(i);const s=new Ir(Nr,1,e,t);s.layers=this.layers,this.add(s);const o=new Ir(Nr,1,e,t);o.layers=this.layers,this.add(o);const a=new Ir(Nr,1,e,t);a.layers=this.layers,this.add(a);const l=new Ir(Nr,1,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,r,i,s,o,a]=t;for(const e of t)this.remove(e);if(e===Le)n.up.set(0,1,0),n.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),i.up.set(0,0,-1),i.lookAt(0,1,0),s.up.set(0,0,1),s.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),a.up.set(0,1,0),a.lookAt(0,0,-1);else{if(e!==Ie)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);n.up.set(0,-1,0),n.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),i.up.set(0,0,1),i.lookAt(0,1,0),s.up.set(0,0,-1),s.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),a.up.set(0,-1,0),a.lookAt(0,0,-1)}for(const e of t)this.add(e),e.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,s,o,a,l,c]=this.children,h=e.getRenderTarget(),u=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,r),e.render(t,i),e.setRenderTarget(n,1,r),e.render(t,s),e.setRenderTarget(n,2,r),e.render(t,o),e.setRenderTarget(n,3,r),e.render(t,a),e.setRenderTarget(n,4,r),e.render(t,l),n.texture.generateMipmaps=f,e.setRenderTarget(n,5,r),e.render(t,c),e.setRenderTarget(h,u,d),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Ur extends dt{constructor(e,t,n,r,i,s,o,a,l,c){super(e=void 0!==e?e:[],t=void 0!==t?t:F,n,r,i,s,o,a,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Fr extends mt{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];this.texture=new Ur(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:W}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={tEquirect:{value:null}},r="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",i="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",s=new Sr(5,5,5),o=new Cr({name:"CubemapFromEquirect",uniforms:Mr(n),vertexShader:r,fragmentShader:i,side:1,blending:0});o.uniforms.tEquirect.value=t;const a=new yr(s,o),l=t.minFilter;return t.minFilter===Y&&(t.minFilter=W),new Or(1,10,this).update(e,a),t.minFilter=l,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,r){const i=e.getRenderTarget();for(let i=0;i<6;i++)e.setRenderTarget(this,i),e.clear(t,n,r);e.setRenderTarget(i)}}const kr=new _t,zr=new _t,Br=new Xe;class Vr{constructor(e=new _t(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=kr.subVectors(n,t).cross(zr.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(kr),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const i=-(e.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:t.copy(e.start).addScaledVector(n,i)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Br.getNormalMatrix(e),r=this.coplanarPoint(kr).applyMatrix4(e),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const $r=new Bt,Gr=new _t;class Hr{constructor(e=new Vr,t=new Vr,n=new Vr,r=new Vr,i=new Vr,s=new Vr){this.planes=[e,t,n,r,i,s]}set(e,t,n,r,i,s){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(s),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=2e3){const n=this.planes,r=e.elements,i=r[0],s=r[1],o=r[2],a=r[3],l=r[4],c=r[5],h=r[6],u=r[7],d=r[8],p=r[9],f=r[10],m=r[11],g=r[12],v=r[13],x=r[14],_=r[15];if(n[0].setComponents(a-i,u-l,m-d,_-g).normalize(),n[1].setComponents(a+i,u+l,m+d,_+g).normalize(),n[2].setComponents(a+s,u+c,m+p,_+v).normalize(),n[3].setComponents(a-s,u-c,m-p,_-v).normalize(),n[4].setComponents(a-o,u-h,m-f,_-x).normalize(),t===Le)n[5].setComponents(a+o,u+h,m+f,_+x).normalize();else{if(t!==Ie)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);n[5].setComponents(o,h,f,x).normalize()}return this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),$r.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),$r.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere($r)}intersectsSprite(e){return $r.center.set(0,0,0),$r.radius=.7071067811865476,$r.applyMatrix4(e.matrixWorld),this.intersectsSphere($r)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Gr.x=r.normal.x>0?e.max.x:e.min.x,Gr.y=r.normal.y>0?e.max.y:e.min.y,Gr.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Gr)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function jr(){let e=null,t=!1,n=null,r=null;function i(t,s){n(t,s),r=e.requestAnimationFrame(i)}return{start:function(){!0!==t&&null!==n&&(r=e.requestAnimationFrame(i),t=!0)},stop:function(){e.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function Wr(e,t){const n=t.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=r.get(t);n&&(e.deleteBuffer(n.buffer),r.delete(t))},update:function(t,i){if(t.isGLBufferAttribute){const e=r.get(t);return void((!e||e.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const s=r.get(t);if(void 0===s)r.set(t,function(t,r){const i=t.array,s=t.usage,o=i.byteLength,a=e.createBuffer();let l;if(e.bindBuffer(r,a),e.bufferData(r,i,s),t.onUploadCallback(),i instanceof Float32Array)l=e.FLOAT;else if(i instanceof Uint16Array)if(t.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");l=e.HALF_FLOAT}else l=e.UNSIGNED_SHORT;else if(i instanceof Int16Array)l=e.SHORT;else if(i instanceof Uint32Array)l=e.UNSIGNED_INT;else if(i instanceof Int32Array)l=e.INT;else if(i instanceof Int8Array)l=e.BYTE;else if(i instanceof Uint8Array)l=e.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);l=e.UNSIGNED_BYTE}return{buffer:a,type:l,bytesPerElement:i.BYTES_PER_ELEMENT,version:t.version,size:o}}(t,i));else if(s.version<t.version){if(s.size!==t.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(t,r,i){const s=r.array,o=r._updateRange,a=r.updateRanges;if(e.bindBuffer(i,t),-1===o.count&&0===a.length&&e.bufferSubData(i,0,s),0!==a.length){for(let t=0,r=a.length;t<r;t++){const r=a[t];n?e.bufferSubData(i,r.start*s.BYTES_PER_ELEMENT,s,r.start,r.count):e.bufferSubData(i,r.start*s.BYTES_PER_ELEMENT,s.subarray(r.start,r.start+r.count))}r.clearUpdateRanges()}-1!==o.count&&(n?e.bufferSubData(i,o.offset*s.BYTES_PER_ELEMENT,s,o.offset,o.count):e.bufferSubData(i,o.offset*s.BYTES_PER_ELEMENT,s.subarray(o.offset,o.offset+o.count)),o.count=-1),r.onUploadCallback()}(s.buffer,t,i),s.version=t.version}}}}class Xr extends rr{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const i=e/2,s=t/2,o=Math.floor(n),a=Math.floor(r),l=o+1,c=a+1,h=e/o,u=t/a,d=[],p=[],f=[],m=[];for(let e=0;e<c;e++){const t=e*u-s;for(let n=0;n<l;n++){const r=n*h-i;p.push(r,-t,0),f.push(0,0,1),m.push(n/o),m.push(1-e/a)}}for(let e=0;e<a;e++)for(let t=0;t<o;t++){const n=t+l*e,r=t+l*(e+1),i=t+1+l*(e+1),s=t+1+l*e;d.push(n,r,s),d.push(r,i,s)}this.setIndex(d),this.setAttribute("position",new qn(p,3)),this.setAttribute("normal",new qn(f,3)),this.setAttribute("uv",new qn(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xr(e.width,e.height,e.widthSegments,e.heightSegments)}}const Yr={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\tattribute float batchId;\n\tuniform highp sampler2D batchingTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( batchId );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n\tvec3( 0.8224621, 0.177538, 0.0 ),\n\tvec3( 0.0331941, 0.9668058, 0.0 ),\n\tvec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.2249401, - 0.2249404, 0.0 ),\n\tvec3( - 0.0420569, 1.0420571, 0.0 ),\n\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn sRGBTransferOETF( value );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( LEGACY_LIGHTS )\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#else\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[MORPHTARGETS_COUNT];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t#endif\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\t#ifndef USE_INSTANCING_MORPH\n\t\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\t#endif\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tfloat startCompression = 0.8 - 0.04;\n\tfloat desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min(color.r, min(color.g, color.b));\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max(color.r, max(color.g, color.b));\n\tif (peak < startCompression) return color;\n\tfloat d = 1. - startCompression;\n\tfloat newPeak = 1. - d * d / (peak + d - startCompression);\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);\n\treturn mix(color, vec3(1, 1, 1), g);\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},qr={common:{diffuse:{value:new zn(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Xe},alphaMap:{value:null},alphaMapTransform:{value:new Xe},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Xe}},envmap:{envMap:{value:null},envMapRotation:{value:new Xe},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Xe}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Xe}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Xe},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Xe},normalScale:{value:new We(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Xe},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Xe}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Xe}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Xe}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new zn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new zn(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Xe},alphaTest:{value:0},uvTransform:{value:new Xe}},sprite:{diffuse:{value:new zn(16777215)},opacity:{value:1},center:{value:new We(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Xe},alphaMap:{value:null},alphaMapTransform:{value:new Xe},alphaTest:{value:0}}},Zr={basic:{uniforms:Ar([qr.common,qr.specularmap,qr.envmap,qr.aomap,qr.lightmap,qr.fog]),vertexShader:Yr.meshbasic_vert,fragmentShader:Yr.meshbasic_frag},lambert:{uniforms:Ar([qr.common,qr.specularmap,qr.envmap,qr.aomap,qr.lightmap,qr.emissivemap,qr.bumpmap,qr.normalmap,qr.displacementmap,qr.fog,qr.lights,{emissive:{value:new zn(0)}}]),vertexShader:Yr.meshlambert_vert,fragmentShader:Yr.meshlambert_frag},phong:{uniforms:Ar([qr.common,qr.specularmap,qr.envmap,qr.aomap,qr.lightmap,qr.emissivemap,qr.bumpmap,qr.normalmap,qr.displacementmap,qr.fog,qr.lights,{emissive:{value:new zn(0)},specular:{value:new zn(1118481)},shininess:{value:30}}]),vertexShader:Yr.meshphong_vert,fragmentShader:Yr.meshphong_frag},standard:{uniforms:Ar([qr.common,qr.envmap,qr.aomap,qr.lightmap,qr.emissivemap,qr.bumpmap,qr.normalmap,qr.displacementmap,qr.roughnessmap,qr.metalnessmap,qr.fog,qr.lights,{emissive:{value:new zn(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Yr.meshphysical_vert,fragmentShader:Yr.meshphysical_frag},toon:{uniforms:Ar([qr.common,qr.aomap,qr.lightmap,qr.emissivemap,qr.bumpmap,qr.normalmap,qr.displacementmap,qr.gradientmap,qr.fog,qr.lights,{emissive:{value:new zn(0)}}]),vertexShader:Yr.meshtoon_vert,fragmentShader:Yr.meshtoon_frag},matcap:{uniforms:Ar([qr.common,qr.bumpmap,qr.normalmap,qr.displacementmap,qr.fog,{matcap:{value:null}}]),vertexShader:Yr.meshmatcap_vert,fragmentShader:Yr.meshmatcap_frag},points:{uniforms:Ar([qr.points,qr.fog]),vertexShader:Yr.points_vert,fragmentShader:Yr.points_frag},dashed:{uniforms:Ar([qr.common,qr.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Yr.linedashed_vert,fragmentShader:Yr.linedashed_frag},depth:{uniforms:Ar([qr.common,qr.displacementmap]),vertexShader:Yr.depth_vert,fragmentShader:Yr.depth_frag},normal:{uniforms:Ar([qr.common,qr.bumpmap,qr.normalmap,qr.displacementmap,{opacity:{value:1}}]),vertexShader:Yr.meshnormal_vert,fragmentShader:Yr.meshnormal_frag},sprite:{uniforms:Ar([qr.sprite,qr.fog]),vertexShader:Yr.sprite_vert,fragmentShader:Yr.sprite_frag},background:{uniforms:{uvTransform:{value:new Xe},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Yr.background_vert,fragmentShader:Yr.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Xe}},vertexShader:Yr.backgroundCube_vert,fragmentShader:Yr.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Yr.cube_vert,fragmentShader:Yr.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Yr.equirect_vert,fragmentShader:Yr.equirect_frag},distanceRGBA:{uniforms:Ar([qr.common,qr.displacementmap,{referencePosition:{value:new _t},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Yr.distanceRGBA_vert,fragmentShader:Yr.distanceRGBA_frag},shadow:{uniforms:Ar([qr.lights,qr.fog,{color:{value:new zn(0)},opacity:{value:1}}]),vertexShader:Yr.shadow_vert,fragmentShader:Yr.shadow_frag}};Zr.physical={uniforms:Ar([Zr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Xe},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Xe},clearcoatNormalScale:{value:new We(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Xe},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Xe},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Xe},sheen:{value:0},sheenColor:{value:new zn(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Xe},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Xe},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Xe},transmissionSamplerSize:{value:new We},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Xe},attenuationDistance:{value:0},attenuationColor:{value:new zn(0)},specularColor:{value:new zn(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Xe},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Xe},anisotropyVector:{value:new We},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Xe}}]),vertexShader:Yr.meshphysical_vert,fragmentShader:Yr.meshphysical_frag};const Kr={r:0,b:0,g:0},Jr=new on,Qr=new qt;function ei(e,t,n,r,i,s,o){const a=new zn(0);let l,c,h=!0===s?0:1,u=null,d=0,p=null;function f(t,n){t.getRGB(Kr,Tr(e)),r.buffers.color.setClear(Kr.r,Kr.g,Kr.b,n,o)}return{getClearColor:function(){return a},setClearColor:function(e,t=1){a.set(e),h=t,f(a,h)},getClearAlpha:function(){return h},setClearAlpha:function(e){h=e,f(a,h)},render:function(s,m){let g=!1,v=!0===m.isScene?m.background:null;v&&v.isTexture&&(v=(m.backgroundBlurriness>0?n:t).get(v)),null===v?f(a,h):v&&v.isColor&&(f(v,1),g=!0);const x=e.xr.getEnvironmentBlendMode();"additive"===x?r.buffers.color.setClear(0,0,0,1,o):"alpha-blend"===x&&r.buffers.color.setClear(0,0,0,0,o),(e.autoClear||g)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),v&&(v.isCubeTexture||v.mapping===z)?(void 0===c&&(c=new yr(new Sr(1,1,1),new Cr({name:"BackgroundCubeMaterial",uniforms:Mr(Zr.backgroundCube.uniforms),vertexShader:Zr.backgroundCube.vertexShader,fragmentShader:Zr.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),Jr.copy(m.backgroundRotation),Jr.x*=-1,Jr.y*=-1,Jr.z*=-1,v.isCubeTexture&&!1===v.isRenderTargetTexture&&(Jr.y*=-1,Jr.z*=-1),c.material.uniforms.envMap.value=v,c.material.uniforms.flipEnvMap.value=v.isCubeTexture&&!1===v.isRenderTargetTexture?-1:1,c.material.uniforms.backgroundBlurriness.value=m.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,c.material.uniforms.backgroundRotation.value.setFromMatrix4(Qr.makeRotationFromEuler(Jr)),c.material.toneMapped=rt.getTransfer(v.colorSpace)!==xe,u===v&&d===v.version&&p===e.toneMapping||(c.material.needsUpdate=!0,u=v,d=v.version,p=e.toneMapping),c.layers.enableAll(),s.unshift(c,c.geometry,c.material,0,0,null)):v&&v.isTexture&&(void 0===l&&(l=new yr(new Xr(2,2),new Cr({name:"BackgroundMaterial",uniforms:Mr(Zr.background.uniforms),vertexShader:Zr.background.vertexShader,fragmentShader:Zr.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=v,l.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,l.material.toneMapped=rt.getTransfer(v.colorSpace)!==xe,!0===v.matrixAutoUpdate&&v.updateMatrix(),l.material.uniforms.uvTransform.value.copy(v.matrix),u===v&&d===v.version&&p===e.toneMapping||(l.material.needsUpdate=!0,u=v,d=v.version,p=e.toneMapping),l.layers.enableAll(),s.unshift(l,l.geometry,l.material,0,0,null))}}}function ti(e,t,n,r){const i=e.getParameter(e.MAX_VERTEX_ATTRIBS),s=r.isWebGL2?null:t.get("OES_vertex_array_object"),o=r.isWebGL2||null!==s,a={},l=p(null);let c=l,h=!1;function u(t){return r.isWebGL2?e.bindVertexArray(t):s.bindVertexArrayOES(t)}function d(t){return r.isWebGL2?e.deleteVertexArray(t):s.deleteVertexArrayOES(t)}function p(e){const t=[],n=[],r=[];for(let e=0;e<i;e++)t[e]=0,n[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function f(){const e=c.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function m(e){g(e,0)}function g(n,i){const s=c.newAttributes,o=c.enabledAttributes,a=c.attributeDivisors;s[n]=1,0===o[n]&&(e.enableVertexAttribArray(n),o[n]=1),a[n]!==i&&((r.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),a[n]=i)}function v(){const t=c.newAttributes,n=c.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==t[r]&&(e.disableVertexAttribArray(r),n[r]=0)}function x(t,n,r,i,s,o,a){!0===a?e.vertexAttribIPointer(t,n,r,s,o):e.vertexAttribPointer(t,n,r,i,s,o)}function _(){b(),h=!0,c!==l&&(c=l,u(c.object))}function b(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(i,l,d,_,b){let y=!1;if(o){const t=function(t,n,i){const o=!0===i.wireframe;let l=a[t.id];void 0===l&&(l={},a[t.id]=l);let c=l[n.id];void 0===c&&(c={},l[n.id]=c);let h=c[o];return void 0===h&&(h=p(r.isWebGL2?e.createVertexArray():s.createVertexArrayOES()),c[o]=h),h}(_,d,l);c!==t&&(c=t,u(c.object)),y=function(e,t,n,r){const i=c.attributes,s=t.attributes;let o=0;const a=n.getAttributes();for(const t in a)if(a[t].location>=0){const n=i[t];let r=s[t];if(void 0===r&&("instanceMatrix"===t&&e.instanceMatrix&&(r=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(r=e.instanceColor)),void 0===n)return!0;if(n.attribute!==r)return!0;if(r&&n.data!==r.data)return!0;o++}return c.attributesNum!==o||c.index!==r}(i,_,d,b),y&&function(e,t,n,r){const i={},s=t.attributes;let o=0;const a=n.getAttributes();for(const t in a)if(a[t].location>=0){let n=s[t];void 0===n&&("instanceMatrix"===t&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(n=e.instanceColor));const r={};r.attribute=n,n&&n.data&&(r.data=n.data),i[t]=r,o++}c.attributes=i,c.attributesNum=o,c.index=r}(i,_,d,b)}else{const e=!0===l.wireframe;c.geometry===_.id&&c.program===d.id&&c.wireframe===e||(c.geometry=_.id,c.program=d.id,c.wireframe=e,y=!0)}null!==b&&n.update(b,e.ELEMENT_ARRAY_BUFFER),(y||h)&&(h=!1,function(i,s,o,a){if(!1===r.isWebGL2&&(i.isInstancedMesh||a.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;f();const l=a.attributes,c=o.getAttributes(),h=s.defaultAttributeValues;for(const t in c){const s=c[t];if(s.location>=0){let o=l[t];if(void 0===o&&("instanceMatrix"===t&&i.instanceMatrix&&(o=i.instanceMatrix),"instanceColor"===t&&i.instanceColor&&(o=i.instanceColor)),void 0!==o){const t=o.normalized,l=o.itemSize,c=n.get(o);if(void 0===c)continue;const h=c.buffer,u=c.type,d=c.bytesPerElement,p=!0===r.isWebGL2&&(u===e.INT||u===e.UNSIGNED_INT||1013===o.gpuType);if(o.isInterleavedBufferAttribute){const n=o.data,r=n.stride,c=o.offset;if(n.isInstancedInterleavedBuffer){for(let e=0;e<s.locationSize;e++)g(s.location+e,n.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let e=0;e<s.locationSize;e++)m(s.location+e);e.bindBuffer(e.ARRAY_BUFFER,h);for(let e=0;e<s.locationSize;e++)x(s.location+e,l/s.locationSize,u,t,r*d,(c+l/s.locationSize*e)*d,p)}else{if(o.isInstancedBufferAttribute){for(let e=0;e<s.locationSize;e++)g(s.location+e,o.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let e=0;e<s.locationSize;e++)m(s.location+e);e.bindBuffer(e.ARRAY_BUFFER,h);for(let e=0;e<s.locationSize;e++)x(s.location+e,l/s.locationSize,u,t,l*d,l/s.locationSize*e*d,p)}}else if(void 0!==h){const n=h[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(s.location,n);break;case 3:e.vertexAttrib3fv(s.location,n);break;case 4:e.vertexAttrib4fv(s.location,n);break;default:e.vertexAttrib1fv(s.location,n)}}}}v()}(i,l,d,_),null!==b&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n.get(b).buffer))},reset:_,resetDefaultState:b,dispose:function(){_();for(const e in a){const t=a[e];for(const e in t){const n=t[e];for(const e in n)d(n[e].object),delete n[e];delete t[e]}delete a[e]}},releaseStatesOfGeometry:function(e){if(void 0===a[e.id])return;const t=a[e.id];for(const e in t){const n=t[e];for(const e in n)d(n[e].object),delete n[e];delete t[e]}delete a[e.id]},releaseStatesOfProgram:function(e){for(const t in a){const n=a[t];if(void 0===n[e.id])continue;const r=n[e.id];for(const e in r)d(r[e].object),delete r[e];delete n[e.id]}},initAttributes:f,enableAttribute:m,disableUnusedAttributes:v}}function ni(e,t,n,r){const i=r.isWebGL2;let s;this.setMode=function(e){s=e},this.render=function(t,r){e.drawArrays(s,t,r),n.update(r,s,1)},this.renderInstances=function(r,o,a){if(0===a)return;let l,c;if(i)l=e,c="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](s,r,o,a),n.update(o,s,a)},this.renderMultiDraw=function(e,r,i){if(0===i)return;const o=t.get("WEBGL_multi_draw");if(null===o)for(let t=0;t<i;t++)this.render(e[t],r[t]);else{o.multiDrawArraysWEBGL(s,e,0,r,0,i);let t=0;for(let e=0;e<i;e++)t+=r[e];n.update(t,s,1)}}}function ri(e,t,n){let r;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const s="undefined"!=typeof WebGL2RenderingContext&&"WebGL2RenderingContext"===e.constructor.name;let o=void 0!==n.precision?n.precision:"highp";const a=i(o);a!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",a,"instead."),o=a);const l=s||t.has("WEBGL_draw_buffers"),c=!0===n.logarithmicDepthBuffer,h=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),u=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=e.getParameter(e.MAX_TEXTURE_SIZE),p=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),f=e.getParameter(e.MAX_VERTEX_ATTRIBS),m=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),g=e.getParameter(e.MAX_VARYING_VECTORS),v=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),x=u>0,_=s||t.has("OES_texture_float");return{isWebGL2:s,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:i,precision:o,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:x,floatFragmentTextures:_,floatVertexTextures:x&&_,maxSamples:s?e.getParameter(e.MAX_SAMPLES):0}}function ii(e){const t=this;let n=null,r=0,i=!1,s=!1;const o=new Vr,a=new Xe,l={value:null,needsUpdate:!1};function c(e,n,r,i){const s=null!==e?e.length:0;let c=null;if(0!==s){if(c=l.value,!0!==i||null===c){const t=r+4*s,i=n.matrixWorldInverse;a.getNormalMatrix(i),(null===c||c.length<t)&&(c=new Float32Array(t));for(let t=0,n=r;t!==s;++t,n+=4)o.copy(e[t]).applyMatrix4(i,a),o.normal.toArray(c,n),c[n+3]=o.constant}l.value=c,l.needsUpdate=!0}return t.numPlanes=s,t.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){const n=0!==e.length||t||0!==r||i;return i=t,r=e.length,n},this.beginShadows=function(){s=!0,c(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(e,t){n=c(e,t,0)},this.setState=function(o,a,h){const u=o.clippingPlanes,d=o.clipIntersection,p=o.clipShadows,f=e.get(o);if(!i||null===u||0===u.length||s&&!p)s?c(null):(l.value!==n&&(l.value=n,l.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0);else{const e=s?0:r,t=4*e;let i=f.clippingState||null;l.value=i,i=c(u,a,t,h);for(let e=0;e!==t;++e)i[e]=n[e];f.clippingState=i,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}}}function si(e){let t=new WeakMap;function n(e,t){return 303===t?e.mapping=F:304===t&&(e.mapping=k),e}function r(e){const n=e.target;n.removeEventListener("dispose",r);const i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){const s=i.mapping;if(303===s||304===s){if(t.has(i))return n(t.get(i).texture,i.mapping);{const s=i.image;if(s&&s.height>0){const o=new Fr(s.height);return o.fromEquirectangularTexture(e,i),t.set(i,o),i.addEventListener("dispose",r),n(o.texture,i.mapping)}return null}}}return i},dispose:function(){t=new WeakMap}}}class oi extends Rr{constructor(e=-1,t=1,n=1,r=-1,i=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=i,this.far=s,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,i,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-e,s=n+e,o=r+t,a=r-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,s=i+e*this.view.width,o-=t*this.view.offsetY,a=o-t*this.view.height}this.projectionMatrix.makeOrthographic(i,s,o,a,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}const ai=[.125,.215,.35,.446,.526,.582],li=new oi,ci=new zn;let hi=null,ui=0,di=0;const pi=(1+Math.sqrt(5))/2,fi=1/pi,mi=[new _t(1,1,1),new _t(-1,1,1),new _t(1,1,-1),new _t(-1,1,-1),new _t(0,pi,fi),new _t(0,pi,-fi),new _t(fi,0,pi),new _t(-fi,0,pi),new _t(pi,fi,0),new _t(-pi,fi,0)];class gi{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){hi=this._renderer.getRenderTarget(),ui=this._renderer.getActiveCubeFace(),di=this._renderer.getActiveMipmapLevel(),this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,n,r,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=bi(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=_i(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(hi,ui,di),e.scissorTest=!1,xi(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===F||e.mapping===k?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),hi=this._renderer.getRenderTarget(),ui=this._renderer.getActiveCubeFace(),di=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:W,minFilter:W,generateMipmaps:!1,type:Q,format:te,colorSpace:fe,depthBuffer:!1},r=vi(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=vi(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){const t=[],n=[],r=[];let i=e;const s=e-4+1+ai.length;for(let o=0;o<s;o++){const s=Math.pow(2,i);n.push(s);let a=1/s;o>e-4?a=ai[o-e+4-1]:0===o&&(a=0),r.push(a);const l=1/(s-2),c=-l,h=1+l,u=[c,c,h,c,h,h,c,c,h,h,c,h],d=6,p=6,f=3,m=2,g=1,v=new Float32Array(f*p*d),x=new Float32Array(m*p*d),_=new Float32Array(g*p*d);for(let e=0;e<d;e++){const t=e%3*2/3-1,n=e>2?0:-1,r=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];v.set(r,f*p*e),x.set(u,m*p*e);const i=[e,e,e,e,e,e];_.set(i,g*p*e)}const b=new rr;b.setAttribute("position",new Wn(v,f)),b.setAttribute("uv",new Wn(x,m)),b.setAttribute("faceIndex",new Wn(_,g)),t.push(b),i>4&&i--}return{lodPlanes:t,sizeLods:n,sigmas:r}}(r)),this._blurMaterial=function(e,t,n){const r=new Float32Array(20),i=new _t(0,1,0);return new Cr({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(r,e,t)}return r}_compileMaterial(e){const t=new yr(this._lodPlanes[0],e);this._renderer.compile(t,li)}_sceneToCubeUV(e,t,n,r){const i=new Ir(90,1,t,n),s=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],a=this._renderer,l=a.autoClear,c=a.toneMapping;a.getClearColor(ci),a.toneMapping=0,a.autoClear=!1;const h=new Gn({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),u=new yr(new Sr,h);let d=!1;const p=e.background;p?p.isColor&&(h.color.copy(p),e.background=null,d=!0):(h.color.copy(ci),d=!0);for(let t=0;t<6;t++){const n=t%3;0===n?(i.up.set(0,s[t],0),i.lookAt(o[t],0,0)):1===n?(i.up.set(0,0,s[t]),i.lookAt(0,o[t],0)):(i.up.set(0,s[t],0),i.lookAt(0,0,o[t]));const l=this._cubeSize;xi(r,n*l,t>2?l:0,l,l),a.setRenderTarget(r),d&&a.render(u,i),a.render(e,i)}u.geometry.dispose(),u.material.dispose(),a.toneMapping=c,a.autoClear=l,e.background=p}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===F||e.mapping===k;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=bi()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=_i());const i=r?this._cubemapMaterial:this._equirectMaterial,s=new yr(this._lodPlanes[0],i);i.uniforms.envMap.value=e;const o=this._cubeSize;xi(t,0,0,3*o,2*o),n.setRenderTarget(t),n.render(s,li)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){const n=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),r=mi[(t-1)%mi.length];this._blur(e,t-1,t,n,r)}t.autoClear=n}_blur(e,t,n,r,i){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,n,r,"latitudinal",i),this._halfBlur(s,e,n,n,r,"longitudinal",i)}_halfBlur(e,t,n,r,i,s,o){const a=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new yr(this._lodPlanes[r],l),h=l.uniforms,u=this._sizeLods[n]-1,d=isFinite(i)?Math.PI/(2*u):2*Math.PI/39,p=i/d,f=isFinite(i)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let g=0;for(let e=0;e<20;++e){const t=e/p,n=Math.exp(-t*t/2);m.push(n),0===e?g+=n:e<f&&(g+=2*n)}for(let e=0;e<m.length;e++)m[e]=m[e]/g;h.envMap.value=e.texture,h.samples.value=f,h.weights.value=m,h.latitudinal.value="latitudinal"===s,o&&(h.poleAxis.value=o);const{_lodMax:v}=this;h.dTheta.value=d,h.mipInt.value=v-n;const x=this._sizeLods[r];xi(t,3*x*(r>v-4?r-v+4:0),4*(this._cubeSize-x),3*x,2*x),a.setRenderTarget(t),a.render(c,li)}}function vi(e,t,n){const r=new mt(e,t,n);return r.texture.mapping=z,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function xi(e,t,n,r,i){e.viewport.set(t,n,r,i),e.scissor.set(t,n,r,i)}function _i(){return new Cr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function bi(){return new Cr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function yi(e){let t=new WeakMap,n=null;function r(e){const n=e.target;n.removeEventListener("dispose",r);const i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){const s=i.mapping,o=303===s||304===s,a=s===F||s===k;if(o||a){if(i.isRenderTargetTexture&&!0===i.needsPMREMUpdate){i.needsPMREMUpdate=!1;let r=t.get(i);return null===n&&(n=new gi(e)),r=o?n.fromEquirectangular(i,r):n.fromCubemap(i,r),t.set(i,r),r.texture}if(t.has(i))return t.get(i).texture;{const s=i.image;if(o&&s&&s.height>0||a&&s&&function(e){let t=0;for(let n=0;n<6;n++)void 0!==e[n]&&t++;return 6===t}(s)){null===n&&(n=new gi(e));const s=o?n.fromEquirectangular(i):n.fromCubemap(i);return t.set(i,s),i.addEventListener("dispose",r),s.texture}return null}}}return i},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function Ei(e){const t={};function n(n){if(void 0!==t[n])return t[n];let r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return t[n]=r,r}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?(n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance")):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){const t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function Si(e,t,n,r){const i={},s=new WeakMap;function o(e){const a=e.target;null!==a.index&&t.remove(a.index);for(const e in a.attributes)t.remove(a.attributes[e]);for(const e in a.morphAttributes){const n=a.morphAttributes[e];for(let e=0,r=n.length;e<r;e++)t.remove(n[e])}a.removeEventListener("dispose",o),delete i[a.id];const l=s.get(a);l&&(t.remove(l),s.delete(a)),r.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,n.memory.geometries--}function a(e){const n=[],r=e.index,i=e.attributes.position;let o=0;if(null!==r){const e=r.array;o=r.version;for(let t=0,r=e.length;t<r;t+=3){const r=e[t+0],i=e[t+1],s=e[t+2];n.push(r,i,i,s,s,r)}}else{if(void 0===i)return;{const e=i.array;o=i.version;for(let t=0,r=e.length/3-1;t<r;t+=3){const e=t+0,r=t+1,i=t+2;n.push(e,r,r,i,i,e)}}}const a=new(qe(n)?Yn:Xn)(n,1);a.version=o;const l=s.get(e);l&&t.remove(l),s.set(e,a)}return{get:function(e,t){return!0===i[t.id]||(t.addEventListener("dispose",o),i[t.id]=!0,n.memory.geometries++),t},update:function(n){const r=n.attributes;for(const n in r)t.update(r[n],e.ARRAY_BUFFER);const i=n.morphAttributes;for(const n in i){const r=i[n];for(let n=0,i=r.length;n<i;n++)t.update(r[n],e.ARRAY_BUFFER)}},getWireframeAttribute:function(e){const t=s.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&a(e)}else a(e);return s.get(e)}}}function Mi(e,t,n,r){const i=r.isWebGL2;let s,o,a;this.setMode=function(e){s=e},this.setIndex=function(e){o=e.type,a=e.bytesPerElement},this.render=function(t,r){e.drawElements(s,r,o,t*a),n.update(r,s,1)},this.renderInstances=function(r,l,c){if(0===c)return;let h,u;if(i)h=e,u="drawElementsInstanced";else if(h=t.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](s,l,o,r*a,c),n.update(l,s,c)},this.renderMultiDraw=function(e,r,i){if(0===i)return;const l=t.get("WEBGL_multi_draw");if(null===l)for(let t=0;t<i;t++)this.render(e[t]/a,r[t]);else{l.multiDrawElementsWEBGL(s,r,0,o,e,0,i);let t=0;for(let e=0;e<i;e++)t+=r[e];n.update(t,s,1)}}}function Ai(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(n,r,i){switch(t.calls++,r){case e.TRIANGLES:t.triangles+=i*(n/3);break;case e.LINES:t.lines+=i*(n/2);break;case e.LINE_STRIP:t.lines+=i*(n-1);break;case e.LINE_LOOP:t.lines+=i*n;break;case e.POINTS:t.points+=i*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function Ti(e,t){return e[0]-t[0]}function wi(e,t){return Math.abs(t[1])-Math.abs(e[1])}function Ci(e,t,n){const r={},i=new Float32Array(8),s=new WeakMap,o=new pt,a=[];for(let e=0;e<8;e++)a[e]=[e,0];return{update:function(l,c,h){const u=l.morphTargetInfluences;if(!0===t.isWebGL2){const d=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=void 0!==d?d.length:0;let f=s.get(c);if(void 0===f||f.count!==p){void 0!==f&&f.texture.dispose();const m=void 0!==c.morphAttributes.position,g=void 0!==c.morphAttributes.normal,v=void 0!==c.morphAttributes.color,x=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],b=c.morphAttributes.color||[];let y=0;!0===m&&(y=1),!0===g&&(y=2),!0===v&&(y=3);let E=c.attributes.position.count*y,S=1;E>t.maxTextureSize&&(S=Math.ceil(E/t.maxTextureSize),E=t.maxTextureSize);const M=new Float32Array(E*S*4*p),A=new gt(M,E,S,p);A.type=J,A.needsUpdate=!0;const T=4*y;for(let C=0;C<p;C++){const R=x[C],P=_[C],D=b[C],L=E*S*4*C;for(let I=0;I<R.count;I++){const N=I*T;!0===m&&(o.fromBufferAttribute(R,I),M[L+N+0]=o.x,M[L+N+1]=o.y,M[L+N+2]=o.z,M[L+N+3]=0),!0===g&&(o.fromBufferAttribute(P,I),M[L+N+4]=o.x,M[L+N+5]=o.y,M[L+N+6]=o.z,M[L+N+7]=0),!0===v&&(o.fromBufferAttribute(D,I),M[L+N+8]=o.x,M[L+N+9]=o.y,M[L+N+10]=o.z,M[L+N+11]=4===D.itemSize?o.w:1)}}function w(){A.dispose(),s.delete(c),c.removeEventListener("dispose",w)}f={count:p,texture:A,size:new We(E,S)},s.set(c,f),c.addEventListener("dispose",w)}if(!0===l.isInstancedMesh&&null!==l.morphTexture)h.getUniforms().setValue(e,"morphTexture",l.morphTexture,n);else{let O=0;for(let F=0;F<u.length;F++)O+=u[F];const U=c.morphTargetsRelative?1:1-O;h.getUniforms().setValue(e,"morphTargetBaseInfluence",U),h.getUniforms().setValue(e,"morphTargetInfluences",u)}h.getUniforms().setValue(e,"morphTargetsTexture",f.texture,n),h.getUniforms().setValue(e,"morphTargetsTextureSize",f.size)}else{const k=void 0===u?0:u.length;let z=r[c.id];if(void 0===z||z.length!==k){z=[];for(let H=0;H<k;H++)z[H]=[H,0];r[c.id]=z}for(let j=0;j<k;j++){const W=z[j];W[0]=j,W[1]=u[j]}z.sort(wi);for(let X=0;X<8;X++)X<k&&z[X][1]?(a[X][0]=z[X][0],a[X][1]=z[X][1]):(a[X][0]=Number.MAX_SAFE_INTEGER,a[X][1]=0);a.sort(Ti);const B=c.morphAttributes.position,V=c.morphAttributes.normal;let $=0;for(let Y=0;Y<8;Y++){const q=a[Y],Z=q[0],K=q[1];Z!==Number.MAX_SAFE_INTEGER&&K?(B&&c.getAttribute("morphTarget"+Y)!==B[Z]&&c.setAttribute("morphTarget"+Y,B[Z]),V&&c.getAttribute("morphNormal"+Y)!==V[Z]&&c.setAttribute("morphNormal"+Y,V[Z]),i[Y]=K,$+=K):(B&&!0===c.hasAttribute("morphTarget"+Y)&&c.deleteAttribute("morphTarget"+Y),V&&!0===c.hasAttribute("morphNormal"+Y)&&c.deleteAttribute("morphNormal"+Y),i[Y]=0)}const G=c.morphTargetsRelative?1:1-$;h.getUniforms().setValue(e,"morphTargetBaseInfluence",G),h.getUniforms().setValue(e,"morphTargetInfluences",i)}}}}function Ri(e,t,n,r){let i=new WeakMap;function s(e){const t=e.target;t.removeEventListener("dispose",s),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(o){const a=r.render.frame,l=o.geometry,c=t.get(o,l);if(i.get(c)!==a&&(t.update(c),i.set(c,a)),o.isInstancedMesh&&(!1===o.hasEventListener("dispose",s)&&o.addEventListener("dispose",s),i.get(o)!==a&&(n.update(o.instanceMatrix,e.ARRAY_BUFFER),null!==o.instanceColor&&n.update(o.instanceColor,e.ARRAY_BUFFER),i.set(o,a))),o.isSkinnedMesh){const e=o.skeleton;i.get(e)!==a&&(e.update(),i.set(e,a))}return c},dispose:function(){i=new WeakMap}}}class Pi extends dt{constructor(e,t,n,r,i,s,o,a,l,c){if((c=void 0!==c?c:ne)!==ne&&c!==re)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===ne&&(n=K),void 0===n&&c===re&&(n=ee),super(null,r,i,s,o,a,c,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==o?o:G,this.minFilter=void 0!==a?a:G,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}const Di=new dt,Li=new Pi(1,1);Li.compareFunction=515;const Ii=new gt,Ni=new vt,Oi=new Ur,Ui=[],Fi=[],ki=new Float32Array(16),zi=new Float32Array(9),Bi=new Float32Array(4);function Vi(e,t,n){const r=e[0];if(r<=0||r>0)return e;const i=t*n;let s=Ui[i];if(void 0===s&&(s=new Float32Array(i),Ui[i]=s),0!==t){r.toArray(s,0);for(let r=1,i=0;r!==t;++r)i+=n,e[r].toArray(s,i)}return s}function $i(e,t){if(e.length!==t.length)return!1;for(let n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function Gi(e,t){for(let n=0,r=t.length;n<r;n++)e[n]=t[n]}function Hi(e,t){let n=Fi[t];void 0===n&&(n=new Int32Array(t),Fi[t]=n);for(let r=0;r!==t;++r)n[r]=e.allocateTextureUnit();return n}function ji(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function Wi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if($i(n,t))return;e.uniform2fv(this.addr,t),Gi(n,t)}}function Xi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if($i(n,t))return;e.uniform3fv(this.addr,t),Gi(n,t)}}function Yi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if($i(n,t))return;e.uniform4fv(this.addr,t),Gi(n,t)}}function qi(e,t){const n=this.cache,r=t.elements;if(void 0===r){if($i(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Gi(n,t)}else{if($i(n,r))return;Bi.set(r),e.uniformMatrix2fv(this.addr,!1,Bi),Gi(n,r)}}function Zi(e,t){const n=this.cache,r=t.elements;if(void 0===r){if($i(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Gi(n,t)}else{if($i(n,r))return;zi.set(r),e.uniformMatrix3fv(this.addr,!1,zi),Gi(n,r)}}function Ki(e,t){const n=this.cache,r=t.elements;if(void 0===r){if($i(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Gi(n,t)}else{if($i(n,r))return;ki.set(r),e.uniformMatrix4fv(this.addr,!1,ki),Gi(n,r)}}function Ji(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Qi(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if($i(n,t))return;e.uniform2iv(this.addr,t),Gi(n,t)}}function es(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if($i(n,t))return;e.uniform3iv(this.addr,t),Gi(n,t)}}function ts(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if($i(n,t))return;e.uniform4iv(this.addr,t),Gi(n,t)}}function ns(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function rs(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if($i(n,t))return;e.uniform2uiv(this.addr,t),Gi(n,t)}}function is(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if($i(n,t))return;e.uniform3uiv(this.addr,t),Gi(n,t)}}function ss(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if($i(n,t))return;e.uniform4uiv(this.addr,t),Gi(n,t)}}function os(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i);const s=this.type===e.SAMPLER_2D_SHADOW?Li:Di;n.setTexture2D(t||s,i)}function as(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||Ni,i)}function ls(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTextureCube(t||Oi,i)}function cs(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||Ii,i)}function hs(e,t){e.uniform1fv(this.addr,t)}function us(e,t){const n=Vi(t,this.size,2);e.uniform2fv(this.addr,n)}function ds(e,t){const n=Vi(t,this.size,3);e.uniform3fv(this.addr,n)}function ps(e,t){const n=Vi(t,this.size,4);e.uniform4fv(this.addr,n)}function fs(e,t){const n=Vi(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function ms(e,t){const n=Vi(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function gs(e,t){const n=Vi(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function vs(e,t){e.uniform1iv(this.addr,t)}function xs(e,t){e.uniform2iv(this.addr,t)}function _s(e,t){e.uniform3iv(this.addr,t)}function bs(e,t){e.uniform4iv(this.addr,t)}function ys(e,t){e.uniform1uiv(this.addr,t)}function Es(e,t){e.uniform2uiv(this.addr,t)}function Ss(e,t){e.uniform3uiv(this.addr,t)}function Ms(e,t){e.uniform4uiv(this.addr,t)}function As(e,t,n){const r=this.cache,i=t.length,s=Hi(n,i);$i(r,s)||(e.uniform1iv(this.addr,s),Gi(r,s));for(let e=0;e!==i;++e)n.setTexture2D(t[e]||Di,s[e])}function Ts(e,t,n){const r=this.cache,i=t.length,s=Hi(n,i);$i(r,s)||(e.uniform1iv(this.addr,s),Gi(r,s));for(let e=0;e!==i;++e)n.setTexture3D(t[e]||Ni,s[e])}function ws(e,t,n){const r=this.cache,i=t.length,s=Hi(n,i);$i(r,s)||(e.uniform1iv(this.addr,s),Gi(r,s));for(let e=0;e!==i;++e)n.setTextureCube(t[e]||Oi,s[e])}function Cs(e,t,n){const r=this.cache,i=t.length,s=Hi(n,i);$i(r,s)||(e.uniform1iv(this.addr,s),Gi(r,s));for(let e=0;e!==i;++e)n.setTexture2DArray(t[e]||Ii,s[e])}class Rs{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=function(e){switch(e){case 5126:return ji;case 35664:return Wi;case 35665:return Xi;case 35666:return Yi;case 35674:return qi;case 35675:return Zi;case 35676:return Ki;case 5124:case 35670:return Ji;case 35667:case 35671:return Qi;case 35668:case 35672:return es;case 35669:case 35673:return ts;case 5125:return ns;case 36294:return rs;case 36295:return is;case 36296:return ss;case 35678:case 36198:case 36298:case 36306:case 35682:return os;case 35679:case 36299:case 36307:return as;case 35680:case 36300:case 36308:case 36293:return ls;case 36289:case 36303:case 36311:case 36292:return cs}}(t.type)}}class Ps{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=function(e){switch(e){case 5126:return hs;case 35664:return us;case 35665:return ds;case 35666:return ps;case 35674:return fs;case 35675:return ms;case 35676:return gs;case 5124:case 35670:return vs;case 35667:case 35671:return xs;case 35668:case 35672:return _s;case 35669:case 35673:return bs;case 5125:return ys;case 36294:return Es;case 36295:return Ss;case 36296:return Ms;case 35678:case 36198:case 36298:case 36306:case 35682:return As;case 35679:case 36299:case 36307:return Ts;case 35680:case 36300:case 36308:case 36293:return ws;case 36289:case 36303:case 36311:case 36292:return Cs}}(t.type)}}class Ds{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let i=0,s=r.length;i!==s;++i){const s=r[i];s.setValue(e,t[s.id],n)}}}const Ls=/(\w+)(\])?(\[|\.)?/g;function Is(e,t){e.seq.push(t),e.map[t.id]=t}function Ns(e,t,n){const r=e.name,i=r.length;for(Ls.lastIndex=0;;){const s=Ls.exec(r),o=Ls.lastIndex;let a=s[1];const l="]"===s[2],c=s[3];if(l&&(a|=0),void 0===c||"["===c&&o+2===i){Is(n,void 0===c?new Rs(a,e,t):new Ps(a,e,t));break}{let e=n.map[a];void 0===e&&(e=new Ds(a),Is(n,e)),n=e}}}class Os{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<n;++r){const n=e.getActiveUniform(t,r);Ns(n,e.getUniformLocation(t,n.name),this)}}setValue(e,t,n,r){const i=this.map[t];void 0!==i&&i.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];void 0!==r&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let i=0,s=t.length;i!==s;++i){const s=t[i],o=n[s.id];!1!==o.needsUpdate&&s.setValue(e,o.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,i=e.length;r!==i;++r){const i=e[r];i.id in t&&n.push(i)}return n}}function Us(e,t,n){const r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),r}let Fs=0;function ks(e,t,n){const r=e.getShaderParameter(t,e.COMPILE_STATUS),i=e.getShaderInfoLog(t).trim();if(r&&""===i)return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const r=parseInt(s[1]);return n.toUpperCase()+"\n\n"+i+"\n\n"+function(e,t){const n=e.split("\n"),r=[],i=Math.max(t-6,0),s=Math.min(t+6,n.length);for(let e=i;e<s;e++){const i=e+1;r.push(`${i===t?">":" "} ${i}: ${n[e]}`)}return r.join("\n")}(e.getShaderSource(t),r)}return i}function zs(e,t){const n=function(e){const t=rt.getPrimaries(rt.workingColorSpace),n=rt.getPrimaries(e);let r;switch(t===n?r="":t===be&&n===_e?r="LinearDisplayP3ToLinearSRGB":t===_e&&n===be&&(r="LinearSRGBToLinearDisplayP3"),e){case fe:case ge:return[r,"LinearTransferOETF"];case pe:case me:return[r,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",e),[r,"LinearTransferOETF"]}}(t);return`vec4 ${e}( vec4 value ) { return ${n[0]}( ${n[1]}( value ) ); }`}function Bs(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 6:n="AgX";break;case 7:n="Neutral";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Vs(e){return""!==e}function $s(e,t){const n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Gs(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Hs=/^[ \t]*#include +<([\w\d./]+)>/gm;function js(e){return e.replace(Hs,Xs)}const Ws=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function Xs(e,t){let n=Yr[t];if(void 0===n){const e=Ws.get(t);if(void 0===e)throw new Error("Can not resolve #include <"+t+">");n=Yr[e],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,e)}return js(n)}const Ys=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function qs(e){return e.replace(Ys,Zs)}function Zs(e,t,n,r){let i="";for(let e=parseInt(t);e<parseInt(n);e++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function Ks(e){let t=`precision ${e.precision} float;\n\tprecision ${e.precision} int;\n\tprecision ${e.precision} sampler2D;\n\tprecision ${e.precision} samplerCube;\n\t`;return e.isWebGL2&&(t+=`precision ${e.precision} sampler3D;\n\t\tprecision ${e.precision} sampler2DArray;\n\t\tprecision ${e.precision} sampler2DShadow;\n\t\tprecision ${e.precision} samplerCubeShadow;\n\t\tprecision ${e.precision} sampler2DArrayShadow;\n\t\tprecision ${e.precision} isampler2D;\n\t\tprecision ${e.precision} isampler3D;\n\t\tprecision ${e.precision} isamplerCube;\n\t\tprecision ${e.precision} isampler2DArray;\n\t\tprecision ${e.precision} usampler2D;\n\t\tprecision ${e.precision} usampler3D;\n\t\tprecision ${e.precision} usamplerCube;\n\t\tprecision ${e.precision} usampler2DArray;\n\t\t`),"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Js(e,t,n,r){const i=e.getContext(),s=n.defines;let o=n.vertexShader,a=n.fragmentShader;const l=function(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),c=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case F:case k:t="ENVMAP_TYPE_CUBE";break;case z:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),h=function(e){let t="ENVMAP_MODE_REFLECTION";return e.envMap&&e.envMapMode===k&&(t="ENVMAP_MODE_REFRACTION"),t}(n),u=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),d=function(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const n=Math.log2(t)-2,r=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:r,maxMip:n}}(n),p=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.normalMapTangentSpace||e.clearcoatNormalMap||e.flatShading||e.alphaToCoverage||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Vs).join("\n")}(n),f=function(e){return[e.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",e.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Vs).join("\n")}(n),m=function(e){const t=[];for(const n in e){const r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(s),g=i.createProgram();let v,x,_=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(v=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m].filter(Vs).join("\n"),v.length>0&&(v+="\n"),x=[p,"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m].filter(Vs).join("\n"),x.length>0&&(x+="\n")):(v=[Ks(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Vs).join("\n"),x=[p,Ks(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?Yr.tonemapping_pars_fragment:"",0!==n.toneMapping?Bs("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Yr.colorspace_pars_fragment,zs("linearToOutputTexel",n.outputColorSpace),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Vs).join("\n")),o=js(o),o=$s(o,n),o=Gs(o,n),a=js(a),a=$s(a,n),a=Gs(a,n),o=qs(o),a=qs(a),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(_="#version 300 es\n",v=[f,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+v,x=["precision mediump sampler2DArray;","#define varying in",n.glslVersion===Pe?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Pe?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+x);const b=_+v+o,y=_+x+a,E=Us(i,i.VERTEX_SHADER,b),S=Us(i,i.FRAGMENT_SHADER,y);function M(t){if(e.debug.checkShaderErrors){const n=i.getProgramInfoLog(g).trim(),r=i.getShaderInfoLog(E).trim(),s=i.getShaderInfoLog(S).trim();let o=!0,a=!0;if(!1===i.getProgramParameter(g,i.LINK_STATUS))if(o=!1,"function"==typeof e.debug.onShaderError)e.debug.onShaderError(i,g,E,S);else{const e=ks(i,E,"vertex"),r=ks(i,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,i.VALIDATE_STATUS)+"\n\nMaterial Name: "+t.name+"\nMaterial Type: "+t.type+"\n\nProgram Info Log: "+n+"\n"+e+"\n"+r)}else""!==n?console.warn("THREE.WebGLProgram: Program Info Log:",n):""!==r&&""!==s||(a=!1);a&&(t.diagnostics={runnable:o,programLog:n,vertexShader:{log:r,prefix:v},fragmentShader:{log:s,prefix:x}})}i.deleteShader(E),i.deleteShader(S),A=new Os(i,g),T=function(e,t){const n={},r=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let i=0;i<r;i++){const r=e.getActiveAttrib(t,i),s=r.name;let o=1;r.type===e.FLOAT_MAT2&&(o=2),r.type===e.FLOAT_MAT3&&(o=3),r.type===e.FLOAT_MAT4&&(o=4),n[s]={type:r.type,location:e.getAttribLocation(t,s),locationSize:o}}return n}(i,g)}let A,T;i.attachShader(g,E),i.attachShader(g,S),void 0!==n.index0AttributeName?i.bindAttribLocation(g,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),this.getUniforms=function(){return void 0===A&&M(this),A},this.getAttributes=function(){return void 0===T&&M(this),T};let w=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===w&&(w=i.getProgramParameter(g,37297)),w},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=Fs++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=E,this.fragmentShader=S,this}let Qs=0;class eo{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),i=this._getShaderStage(n),s=this._getShaderCacheForMaterial(e);return!1===s.has(r)&&(s.add(r),r.usedTimes++),!1===s.has(i)&&(s.add(i),i.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const e of t)e.usedTimes--,0===e.usedTimes&&this.shaderCache.delete(e.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return void 0===n&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return void 0===n&&(n=new to(e),t.set(e,n)),n}}class to{constructor(e){this.id=Qs++,this.code=e,this.usedTimes=0}}function no(e,t,n,r,i,s,o){const a=new an,l=new eo,c=new Set,h=[],u=i.isWebGL2,d=i.logarithmicDepthBuffer,p=i.vertexTextures;let f=i.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(e){return c.add(e),0===e?"uv":`uv${e}`}return{getParameters:function(s,a,h,v,x){const _=v.fog,b=x.geometry,y=s.isMeshStandardMaterial?v.environment:null,E=(s.isMeshStandardMaterial?n:t).get(s.envMap||y),S=E&&E.mapping===z?E.image.height:null,M=m[s.type];null!==s.precision&&(f=i.getMaxPrecision(s.precision),f!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",f,"instead."));const A=b.morphAttributes.position||b.morphAttributes.normal||b.morphAttributes.color,T=void 0!==A?A.length:0;let w,C,R,P,D=0;if(void 0!==b.morphAttributes.position&&(D=1),void 0!==b.morphAttributes.normal&&(D=2),void 0!==b.morphAttributes.color&&(D=3),M){const e=Zr[M];w=e.vertexShader,C=e.fragmentShader}else w=s.vertexShader,C=s.fragmentShader,l.update(s),R=l.getVertexShaderID(s),P=l.getFragmentShaderID(s);const L=e.getRenderTarget(),I=!0===x.isInstancedMesh,N=!0===x.isBatchedMesh,O=!!s.map,U=!!s.matcap,F=!!E,k=!!s.aoMap,B=!!s.lightMap,V=!!s.bumpMap,$=!!s.normalMap,G=!!s.displacementMap,H=!!s.emissiveMap,j=!!s.metalnessMap,W=!!s.roughnessMap,X=s.anisotropy>0,Y=s.clearcoat>0,q=s.iridescence>0,Z=s.sheen>0,K=s.transmission>0,J=X&&!!s.anisotropyMap,Q=Y&&!!s.clearcoatMap,ee=Y&&!!s.clearcoatNormalMap,te=Y&&!!s.clearcoatRoughnessMap,ne=q&&!!s.iridescenceMap,re=q&&!!s.iridescenceThicknessMap,ie=Z&&!!s.sheenColorMap,se=Z&&!!s.sheenRoughnessMap,oe=!!s.specularMap,ae=!!s.specularColorMap,le=!!s.specularIntensityMap,ce=K&&!!s.transmissionMap,he=K&&!!s.thicknessMap,ue=!!s.gradientMap,de=!!s.alphaMap,pe=s.alphaTest>0,me=!!s.alphaHash,ge=!!s.extensions;let ve=0;s.toneMapped&&(null!==L&&!0!==L.isXRRenderTarget||(ve=e.toneMapping));const _e={isWebGL2:u,shaderID:M,shaderType:s.type,shaderName:s.name,vertexShader:w,fragmentShader:C,defines:s.defines,customVertexShaderID:R,customFragmentShaderID:P,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:f,batching:N,instancing:I,instancingColor:I&&null!==x.instanceColor,instancingMorph:I&&null!==x.morphTexture,supportsVertexTextures:p,outputColorSpace:null===L?e.outputColorSpace:!0===L.isXRRenderTarget?L.texture.colorSpace:fe,alphaToCoverage:!!s.alphaToCoverage,map:O,matcap:U,envMap:F,envMapMode:F&&E.mapping,envMapCubeUVHeight:S,aoMap:k,lightMap:B,bumpMap:V,normalMap:$,displacementMap:p&&G,emissiveMap:H,normalMapObjectSpace:$&&1===s.normalMapType,normalMapTangentSpace:$&&0===s.normalMapType,metalnessMap:j,roughnessMap:W,anisotropy:X,anisotropyMap:J,clearcoat:Y,clearcoatMap:Q,clearcoatNormalMap:ee,clearcoatRoughnessMap:te,iridescence:q,iridescenceMap:ne,iridescenceThicknessMap:re,sheen:Z,sheenColorMap:ie,sheenRoughnessMap:se,specularMap:oe,specularColorMap:ae,specularIntensityMap:le,transmission:K,transmissionMap:ce,thicknessMap:he,gradientMap:ue,opaque:!1===s.transparent&&1===s.blending&&!1===s.alphaToCoverage,alphaMap:de,alphaTest:pe,alphaHash:me,combine:s.combine,mapUv:O&&g(s.map.channel),aoMapUv:k&&g(s.aoMap.channel),lightMapUv:B&&g(s.lightMap.channel),bumpMapUv:V&&g(s.bumpMap.channel),normalMapUv:$&&g(s.normalMap.channel),displacementMapUv:G&&g(s.displacementMap.channel),emissiveMapUv:H&&g(s.emissiveMap.channel),metalnessMapUv:j&&g(s.metalnessMap.channel),roughnessMapUv:W&&g(s.roughnessMap.channel),anisotropyMapUv:J&&g(s.anisotropyMap.channel),clearcoatMapUv:Q&&g(s.clearcoatMap.channel),clearcoatNormalMapUv:ee&&g(s.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:te&&g(s.clearcoatRoughnessMap.channel),iridescenceMapUv:ne&&g(s.iridescenceMap.channel),iridescenceThicknessMapUv:re&&g(s.iridescenceThicknessMap.channel),sheenColorMapUv:ie&&g(s.sheenColorMap.channel),sheenRoughnessMapUv:se&&g(s.sheenRoughnessMap.channel),specularMapUv:oe&&g(s.specularMap.channel),specularColorMapUv:ae&&g(s.specularColorMap.channel),specularIntensityMapUv:le&&g(s.specularIntensityMap.channel),transmissionMapUv:ce&&g(s.transmissionMap.channel),thicknessMapUv:he&&g(s.thicknessMap.channel),alphaMapUv:de&&g(s.alphaMap.channel),vertexTangents:!!b.attributes.tangent&&($||X),vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!b.attributes.color&&4===b.attributes.color.itemSize,pointsUvs:!0===x.isPoints&&!!b.attributes.uv&&(O||de),fog:!!_,useFog:!0===s.fog,fogExp2:!!_&&_.isFogExp2,flatShading:!0===s.flatShading,sizeAttenuation:!0===s.sizeAttenuation,logarithmicDepthBuffer:d,skinning:!0===x.isSkinnedMesh,morphTargets:void 0!==b.morphAttributes.position,morphNormals:void 0!==b.morphAttributes.normal,morphColors:void 0!==b.morphAttributes.color,morphTargetsCount:T,morphTextureStride:D,numDirLights:a.directional.length,numPointLights:a.point.length,numSpotLights:a.spot.length,numSpotLightMaps:a.spotLightMap.length,numRectAreaLights:a.rectArea.length,numHemiLights:a.hemi.length,numDirLightShadows:a.directionalShadowMap.length,numPointLightShadows:a.pointShadowMap.length,numSpotLightShadows:a.spotShadowMap.length,numSpotLightShadowsWithMaps:a.numSpotLightShadowsWithMaps,numLightProbes:a.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:s.dithering,shadowMapEnabled:e.shadowMap.enabled&&h.length>0,shadowMapType:e.shadowMap.type,toneMapping:ve,useLegacyLights:e._useLegacyLights,decodeVideoTexture:O&&!0===s.map.isVideoTexture&&rt.getTransfer(s.map.colorSpace)===xe,premultipliedAlpha:s.premultipliedAlpha,doubleSided:2===s.side,flipSided:1===s.side,useDepthPacking:s.depthPacking>=0,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionDerivatives:ge&&!0===s.extensions.derivatives,extensionFragDepth:ge&&!0===s.extensions.fragDepth,extensionDrawBuffers:ge&&!0===s.extensions.drawBuffers,extensionShaderTextureLOD:ge&&!0===s.extensions.shaderTextureLOD,extensionClipCullDistance:ge&&!0===s.extensions.clipCullDistance&&r.has("WEBGL_clip_cull_distance"),extensionMultiDraw:ge&&!0===s.extensions.multiDraw&&r.has("WEBGL_multi_draw"),rendererExtensionFragDepth:u||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||r.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:r.has("KHR_parallel_shader_compile"),customProgramCacheKey:s.customProgramCacheKey()};return _e.vertexUv1s=c.has(1),_e.vertexUv2s=c.has(2),_e.vertexUv3s=c.has(3),c.clear(),_e},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(function(e,t){e.push(t.precision),e.push(t.outputColorSpace),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.mapUv),e.push(t.alphaMapUv),e.push(t.lightMapUv),e.push(t.aoMapUv),e.push(t.bumpMapUv),e.push(t.normalMapUv),e.push(t.displacementMapUv),e.push(t.emissiveMapUv),e.push(t.metalnessMapUv),e.push(t.roughnessMapUv),e.push(t.anisotropyMapUv),e.push(t.clearcoatMapUv),e.push(t.clearcoatNormalMapUv),e.push(t.clearcoatRoughnessMapUv),e.push(t.iridescenceMapUv),e.push(t.iridescenceThicknessMapUv),e.push(t.sheenColorMapUv),e.push(t.sheenRoughnessMapUv),e.push(t.specularMapUv),e.push(t.specularColorMapUv),e.push(t.specularIntensityMapUv),e.push(t.transmissionMapUv),e.push(t.thicknessMapUv),e.push(t.combine),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numSpotLightMaps),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.numSpotLightShadowsWithMaps),e.push(t.numLightProbes),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)}(n,t),function(e,t){a.disableAll(),t.isWebGL2&&a.enable(0),t.supportsVertexTextures&&a.enable(1),t.instancing&&a.enable(2),t.instancingColor&&a.enable(3),t.instancingMorph&&a.enable(4),t.matcap&&a.enable(5),t.envMap&&a.enable(6),t.normalMapObjectSpace&&a.enable(7),t.normalMapTangentSpace&&a.enable(8),t.clearcoat&&a.enable(9),t.iridescence&&a.enable(10),t.alphaTest&&a.enable(11),t.vertexColors&&a.enable(12),t.vertexAlphas&&a.enable(13),t.vertexUv1s&&a.enable(14),t.vertexUv2s&&a.enable(15),t.vertexUv3s&&a.enable(16),t.vertexTangents&&a.enable(17),t.anisotropy&&a.enable(18),t.alphaHash&&a.enable(19),t.batching&&a.enable(20),e.push(a.mask),a.disableAll(),t.fog&&a.enable(0),t.useFog&&a.enable(1),t.flatShading&&a.enable(2),t.logarithmicDepthBuffer&&a.enable(3),t.skinning&&a.enable(4),t.morphTargets&&a.enable(5),t.morphNormals&&a.enable(6),t.morphColors&&a.enable(7),t.premultipliedAlpha&&a.enable(8),t.shadowMapEnabled&&a.enable(9),t.useLegacyLights&&a.enable(10),t.doubleSided&&a.enable(11),t.flipSided&&a.enable(12),t.useDepthPacking&&a.enable(13),t.dithering&&a.enable(14),t.transmission&&a.enable(15),t.sheen&&a.enable(16),t.opaque&&a.enable(17),t.pointsUvs&&a.enable(18),t.decodeVideoTexture&&a.enable(19),t.alphaToCoverage&&a.enable(20),e.push(a.mask)}(n,t),n.push(e.outputColorSpace)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=m[e.type];let n;if(t){const e=Zr[t];n=wr.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let r;for(let e=0,t=h.length;e<t;e++){const t=h[e];if(t.cacheKey===n){r=t,++r.usedTimes;break}}return void 0===r&&(r=new Js(e,n,t,s),h.push(r)),r},releaseProgram:function(e){if(0==--e.usedTimes){const t=h.indexOf(e);h[t]=h[h.length-1],h.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:h,dispose:function(){l.dispose()}}}function ro(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,r){e.get(t)[n]=r},dispose:function(){e=new WeakMap}}}function io(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function so(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function oo(){const e=[];let t=0;const n=[],r=[],i=[];function s(n,r,i,s,o,a){let l=e[t];return void 0===l?(l={id:n.id,object:n,geometry:r,material:i,groupOrder:s,renderOrder:n.renderOrder,z:o,group:a},e[t]=l):(l.id=n.id,l.object=n,l.geometry=r,l.material=i,l.groupOrder=s,l.renderOrder=n.renderOrder,l.z=o,l.group=a),t++,l}return{opaque:n,transmissive:r,transparent:i,init:function(){t=0,n.length=0,r.length=0,i.length=0},push:function(e,t,o,a,l,c){const h=s(e,t,o,a,l,c);o.transmission>0?r.push(h):!0===o.transparent?i.push(h):n.push(h)},unshift:function(e,t,o,a,l,c){const h=s(e,t,o,a,l,c);o.transmission>0?r.unshift(h):!0===o.transparent?i.unshift(h):n.unshift(h)},finish:function(){for(let n=t,r=e.length;n<r;n++){const t=e[n];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){n.length>1&&n.sort(e||io),r.length>1&&r.sort(t||so),i.length>1&&i.sort(t||so)}}}function ao(){let e=new WeakMap;return{get:function(t,n){const r=e.get(t);let i;return void 0===r?(i=new oo,e.set(t,[i])):n>=r.length?(i=new oo,r.push(i)):i=r[n],i},dispose:function(){e=new WeakMap}}}function lo(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new _t,color:new zn};break;case"SpotLight":n={position:new _t,direction:new _t,color:new zn,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new _t,color:new zn,distance:0,decay:0};break;case"HemisphereLight":n={direction:new _t,skyColor:new zn,groundColor:new zn};break;case"RectAreaLight":n={color:new zn,position:new _t,halfWidth:new _t,halfHeight:new _t}}return e[t.id]=n,n}}}let co=0;function ho(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function uo(e,t){const n=new lo,r=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new We};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new We,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let e=0;e<9;e++)i.probe.push(new _t);const s=new _t,o=new qt,a=new qt;return{setup:function(s,o){let a=0,l=0,c=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let h=0,u=0,d=0,p=0,f=0,m=0,g=0,v=0,x=0,_=0,b=0;s.sort(ho);const y=!0===o?Math.PI:1;for(let e=0,t=s.length;e<t;e++){const t=s[e],o=t.color,E=t.intensity,S=t.distance,M=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)a+=o.r*E*y,l+=o.g*E*y,c+=o.b*E*y;else if(t.isLightProbe){for(let e=0;e<9;e++)i.probe[e].addScaledVector(t.sh.coefficients[e],E);b++}else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*y),t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,i.directionalShadow[h]=n,i.directionalShadowMap[h]=M,i.directionalShadowMatrix[h]=t.shadow.matrix,m++}i.directional[h]=e,h++}else if(t.isSpotLight){const e=n.get(t);e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(o).multiplyScalar(E*y),e.distance=S,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,i.spot[d]=e;const s=t.shadow;if(t.map&&(i.spotLightMap[x]=t.map,x++,s.updateMatrices(t),t.castShadow&&_++),i.spotLightMatrix[d]=s.matrix,t.castShadow){const e=r.get(t);e.shadowBias=s.bias,e.shadowNormalBias=s.normalBias,e.shadowRadius=s.radius,e.shadowMapSize=s.mapSize,i.spotShadow[d]=e,i.spotShadowMap[d]=M,v++}d++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(o).multiplyScalar(E),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),i.rectArea[p]=e,p++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*y),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,i.pointShadow[u]=n,i.pointShadowMap[u]=M,i.pointShadowMatrix[u]=t.shadow.matrix,g++}i.point[u]=e,u++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(E*y),e.groundColor.copy(t.groundColor).multiplyScalar(E*y),i.hemi[f]=e,f++}}p>0&&(t.isWebGL2?!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=qr.LTC_FLOAT_1,i.rectAreaLTC2=qr.LTC_FLOAT_2):(i.rectAreaLTC1=qr.LTC_HALF_1,i.rectAreaLTC2=qr.LTC_HALF_2):!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=qr.LTC_FLOAT_1,i.rectAreaLTC2=qr.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=qr.LTC_HALF_1,i.rectAreaLTC2=qr.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=a,i.ambient[1]=l,i.ambient[2]=c;const E=i.hash;E.directionalLength===h&&E.pointLength===u&&E.spotLength===d&&E.rectAreaLength===p&&E.hemiLength===f&&E.numDirectionalShadows===m&&E.numPointShadows===g&&E.numSpotShadows===v&&E.numSpotMaps===x&&E.numLightProbes===b||(i.directional.length=h,i.spot.length=d,i.rectArea.length=p,i.point.length=u,i.hemi.length=f,i.directionalShadow.length=m,i.directionalShadowMap.length=m,i.pointShadow.length=g,i.pointShadowMap.length=g,i.spotShadow.length=v,i.spotShadowMap.length=v,i.directionalShadowMatrix.length=m,i.pointShadowMatrix.length=g,i.spotLightMatrix.length=v+x-_,i.spotLightMap.length=x,i.numSpotLightShadowsWithMaps=_,i.numLightProbes=b,E.directionalLength=h,E.pointLength=u,E.spotLength=d,E.rectAreaLength=p,E.hemiLength=f,E.numDirectionalShadows=m,E.numPointShadows=g,E.numSpotShadows=v,E.numSpotMaps=x,E.numLightProbes=b,i.version=co++)},setupView:function(e,t){let n=0,r=0,l=0,c=0,h=0;const u=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){const d=e[t];if(d.isDirectionalLight){const e=i.directional[n];e.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(s),e.direction.transformDirection(u),n++}else if(d.isSpotLight){const e=i.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),e.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(s),e.direction.transformDirection(u),l++}else if(d.isRectAreaLight){const e=i.rectArea[c];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),a.identity(),o.copy(d.matrixWorld),o.premultiply(u),a.extractRotation(o),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(a),e.halfHeight.applyMatrix4(a),c++}else if(d.isPointLight){const e=i.point[r];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),r++}else if(d.isHemisphereLight){const e=i.hemi[h];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(u),h++}}},state:i}}function po(e,t){const n=new uo(e,t),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(e){n.setup(r,e)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){i.push(e)}}}function fo(e,t){let n=new WeakMap;return{get:function(r,i=0){const s=n.get(r);let o;return void 0===s?(o=new po(e,t),n.set(r,[o])):i>=s.length?(o=new po(e,t),s.push(o)):o=s[i],o},dispose:function(){n=new WeakMap}}}class mo extends $n{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class go extends $n{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function vo(e,t,n){let r=new Hr;const i=new We,s=new We,o=new pt,a=new mo({depthPacking:3201}),l=new go,c={},h=n.maxTextureSize,u={[g]:1,[v]:0,[x]:2},d=new Cr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new We},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const f=new rr;f.setAttribute("position",new Wn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new yr(f,d),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let b=this.type;function y(n,r){const s=t.update(m);d.defines.VSM_SAMPLES!==n.blurSamples&&(d.defines.VSM_SAMPLES=n.blurSamples,p.defines.VSM_SAMPLES=n.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new mt(i.x,i.y)),d.uniforms.shadow_pass.value=n.map.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(r,null,s,d,m,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(r,null,s,p,m,null)}function E(t,n,r,i){let s=null;const o=!0===r.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==o)s=o;else if(s=!0===r.isPointLight?l:a,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const e=s.uuid,t=n.uuid;let r=c[e];void 0===r&&(r={},c[e]=r);let i=r[t];void 0===i&&(i=s.clone(),r[t]=i,n.addEventListener("dispose",M)),s=i}return s.visible=n.visible,s.wireframe=n.wireframe,s.side=3===i?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:u[n.side],s.alphaMap=n.alphaMap,s.alphaTest=n.alphaTest,s.map=n.map,s.clipShadows=n.clipShadows,s.clippingPlanes=n.clippingPlanes,s.clipIntersection=n.clipIntersection,s.displacementMap=n.displacementMap,s.displacementScale=n.displacementScale,s.displacementBias=n.displacementBias,s.wireframeLinewidth=n.wireframeLinewidth,s.linewidth=n.linewidth,!0===r.isPointLight&&!0===s.isMeshDistanceMaterial&&(e.properties.get(s).light=r),s}function S(n,i,s,o,a){if(!1===n.visible)return;if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===a)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const r=t.update(n),l=n.material;if(Array.isArray(l)){const t=r.groups;for(let c=0,h=t.length;c<h;c++){const h=t[c],u=l[h.materialIndex];if(u&&u.visible){const t=E(n,u,o,a);n.onBeforeShadow(e,n,i,s,r,t,h),e.renderBufferDirect(s,null,r,t,n,h),n.onAfterShadow(e,n,i,s,r,t,h)}}}else if(l.visible){const t=E(n,l,o,a);n.onBeforeShadow(e,n,i,s,r,t,null),e.renderBufferDirect(s,null,r,t,n,null),n.onAfterShadow(e,n,i,s,r,t,null)}}const l=n.children;for(let e=0,t=l.length;e<t;e++)S(l[e],i,s,o,a)}function M(e){e.target.removeEventListener("dispose",M);for(const t in c){const n=c[t],r=e.target.uuid;r in n&&(n[r].dispose(),delete n[r])}}this.render=function(t,n,a){if(!1===_.enabled)return;if(!1===_.autoUpdate&&!1===_.needsUpdate)return;if(0===t.length)return;const l=e.getRenderTarget(),c=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),d=e.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);const p=3!==b&&3===this.type,f=3===b&&3!==this.type;for(let l=0,c=t.length;l<c;l++){const c=t[l],u=c.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;i.copy(u.mapSize);const m=u.getFrameExtents();if(i.multiply(m),s.copy(u.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(s.x=Math.floor(h/m.x),i.x=s.x*m.x,u.mapSize.x=s.x),i.y>h&&(s.y=Math.floor(h/m.y),i.y=s.y*m.y,u.mapSize.y=s.y)),null===u.map||!0===p||!0===f){const e=3!==this.type?{minFilter:G,magFilter:G}:{};null!==u.map&&u.map.dispose(),u.map=new mt(i.x,i.y,e),u.map.texture.name=c.name+".shadowMap",u.camera.updateProjectionMatrix()}e.setRenderTarget(u.map),e.clear();const g=u.getViewportCount();for(let e=0;e<g;e++){const t=u.getViewport(e);o.set(s.x*t.x,s.y*t.y,s.x*t.z,s.y*t.w),d.viewport(o),u.updateMatrices(c,e),r=u.getFrustum(),S(n,a,u.camera,c,this.type)}!0!==u.isPointLightShadow&&3===this.type&&y(u,a),u.needsUpdate=!1}b=this.type,_.needsUpdate=!1,e.setRenderTarget(l,c,u)}}function xo(e,t,n){const r=n.isWebGL2,i=new function(){let t=!1;const n=new pt;let r=null;const i=new pt(0,0,0,0);return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,s,o,a){!0===a&&(t*=o,r*=o,s*=o),n.set(t,r,s,o),!1===i.equals(n)&&(e.clearColor(t,r,s,o),i.copy(n))},reset:function(){t=!1,r=null,i.set(-1,0,0,0)}}},s=new function(){let t=!1,n=null,r=null,i=null;return{setTest:function(t){t?oe(e.DEPTH_TEST):ae(e.DEPTH_TEST)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}r=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,n=null,r=null,i=null}}},o=new function(){let t=!1,n=null,r=null,i=null,s=null,o=null,a=null,l=null,c=null;return{setTest:function(n){t||(n?oe(e.STENCIL_TEST):ae(e.STENCIL_TEST))},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,o){r===t&&i===n&&s===o||(e.stencilFunc(t,n,o),r=t,i=n,s=o)},setOp:function(t,n,r){o===t&&a===n&&l===r||(e.stencilOp(t,n,r),o=t,a=n,l=r)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,n=null,r=null,i=null,s=null,o=null,a=null,l=null,c=null}}},a=new WeakMap,l=new WeakMap;let c={},h={},u=new WeakMap,d=[],p=null,f=!1,m=null,g=null,v=null,x=null,F=null,k=null,z=null,B=new zn(0,0,0),V=0,$=!1,G=null,H=null,j=null,W=null,X=null;const Y=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let q=!1,Z=0;const K=e.getParameter(e.VERSION);-1!==K.indexOf("WebGL")?(Z=parseFloat(/^WebGL (\d)/.exec(K)[1]),q=Z>=1):-1!==K.indexOf("OpenGL ES")&&(Z=parseFloat(/^OpenGL ES (\d)/.exec(K)[1]),q=Z>=2);let J=null,Q={};const ee=e.getParameter(e.SCISSOR_BOX),te=e.getParameter(e.VIEWPORT),ne=(new pt).fromArray(ee),re=(new pt).fromArray(te);function ie(t,n,i,s){const o=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let a=0;a<i;a++)!r||t!==e.TEXTURE_3D&&t!==e.TEXTURE_2D_ARRAY?e.texImage2D(n+a,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,o):e.texImage3D(n,0,e.RGBA,1,1,s,0,e.RGBA,e.UNSIGNED_BYTE,o);return a}const se={};function oe(t){!0!==c[t]&&(e.enable(t),c[t]=!0)}function ae(t){!1!==c[t]&&(e.disable(t),c[t]=!1)}se[e.TEXTURE_2D]=ie(e.TEXTURE_2D,e.TEXTURE_2D,1),se[e.TEXTURE_CUBE_MAP]=ie(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),r&&(se[e.TEXTURE_2D_ARRAY]=ie(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),se[e.TEXTURE_3D]=ie(e.TEXTURE_3D,e.TEXTURE_3D,1,1)),i.setClear(0,0,0,1),s.setClear(1),o.setClear(0),oe(e.DEPTH_TEST),s.setFunc(3),ue(!1),de(1),oe(e.CULL_FACE),he(0);const le={[_]:e.FUNC_ADD,[b]:e.FUNC_SUBTRACT,[y]:e.FUNC_REVERSE_SUBTRACT};if(r)le[103]=e.MIN,le[104]=e.MAX;else{const e=t.get("EXT_blend_minmax");null!==e&&(le[103]=e.MIN_EXT,le[104]=e.MAX_EXT)}const ce={[E]:e.ZERO,[S]:e.ONE,[M]:e.SRC_COLOR,[T]:e.SRC_ALPHA,[L]:e.SRC_ALPHA_SATURATE,[P]:e.DST_COLOR,[C]:e.DST_ALPHA,[A]:e.ONE_MINUS_SRC_COLOR,[w]:e.ONE_MINUS_SRC_ALPHA,[D]:e.ONE_MINUS_DST_COLOR,[R]:e.ONE_MINUS_DST_ALPHA,[I]:e.CONSTANT_COLOR,[N]:e.ONE_MINUS_CONSTANT_COLOR,[O]:e.CONSTANT_ALPHA,[U]:e.ONE_MINUS_CONSTANT_ALPHA};function he(t,n,r,i,s,o,a,l,c,h){if(0!==t){if(!1===f&&(oe(e.BLEND),f=!0),5===t)s=s||n,o=o||r,a=a||i,n===g&&s===F||(e.blendEquationSeparate(le[n],le[s]),g=n,F=s),r===v&&i===x&&o===k&&a===z||(e.blendFuncSeparate(ce[r],ce[i],ce[o],ce[a]),v=r,x=i,k=o,z=a),!1!==l.equals(B)&&c===V||(e.blendColor(l.r,l.g,l.b,c),B.copy(l),V=c),m=t,$=!1;else if(t!==m||h!==$){if(g===_&&F===_||(e.blendEquation(e.FUNC_ADD),g=_,F=_),h)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}v=null,x=null,k=null,z=null,B.set(0,0,0),V=0,m=t,$=h}}else!0===f&&(ae(e.BLEND),f=!1)}function ue(t){G!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),G=t)}function de(t){0!==t?(oe(e.CULL_FACE),t!==H&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):ae(e.CULL_FACE),H=t}function pe(t,n,r){t?(oe(e.POLYGON_OFFSET_FILL),W===n&&X===r||(e.polygonOffset(n,r),W=n,X=r)):ae(e.POLYGON_OFFSET_FILL)}return{buffers:{color:i,depth:s,stencil:o},enable:oe,disable:ae,bindFramebuffer:function(t,n){return h[t]!==n&&(e.bindFramebuffer(t,n),h[t]=n,r&&(t===e.DRAW_FRAMEBUFFER&&(h[e.FRAMEBUFFER]=n),t===e.FRAMEBUFFER&&(h[e.DRAW_FRAMEBUFFER]=n)),!0)},drawBuffers:function(r,i){let s=d,o=!1;if(r){s=u.get(i),void 0===s&&(s=[],u.set(i,s));const t=r.textures;if(s.length!==t.length||s[0]!==e.COLOR_ATTACHMENT0){for(let n=0,r=t.length;n<r;n++)s[n]=e.COLOR_ATTACHMENT0+n;s.length=t.length,o=!0}}else s[0]!==e.BACK&&(s[0]=e.BACK,o=!0);if(o)if(n.isWebGL2)e.drawBuffers(s);else{if(!0!==t.has("WEBGL_draw_buffers"))throw new Error("THREE.WebGLState: Usage of gl.drawBuffers() require WebGL2 or WEBGL_draw_buffers extension");t.get("WEBGL_draw_buffers").drawBuffersWEBGL(s)}},useProgram:function(t){return p!==t&&(e.useProgram(t),p=t,!0)},setBlending:he,setMaterial:function(t,n){2===t.side?ae(e.CULL_FACE):oe(e.CULL_FACE);let r=1===t.side;n&&(r=!r),ue(r),1===t.blending&&!1===t.transparent?he(0):he(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.blendColor,t.blendAlpha,t.premultipliedAlpha),s.setFunc(t.depthFunc),s.setTest(t.depthTest),s.setMask(t.depthWrite),i.setMask(t.colorWrite);const a=t.stencilWrite;o.setTest(a),a&&(o.setMask(t.stencilWriteMask),o.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),o.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),pe(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?oe(e.SAMPLE_ALPHA_TO_COVERAGE):ae(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:ue,setCullFace:de,setLineWidth:function(t){t!==j&&(q&&e.lineWidth(t),j=t)},setPolygonOffset:pe,setScissorTest:function(t){t?oe(e.SCISSOR_TEST):ae(e.SCISSOR_TEST)},activeTexture:function(t){void 0===t&&(t=e.TEXTURE0+Y-1),J!==t&&(e.activeTexture(t),J=t)},bindTexture:function(t,n,r){void 0===r&&(r=null===J?e.TEXTURE0+Y-1:J);let i=Q[r];void 0===i&&(i={type:void 0,texture:void 0},Q[r]=i),i.type===t&&i.texture===n||(J!==r&&(e.activeTexture(r),J=r),e.bindTexture(t,n||se[t]),i.type=t,i.texture=n)},unbindTexture:function(){const t=Q[J];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(t,n){let r=l.get(n);void 0===r&&(r=new WeakMap,l.set(n,r));let i=r.get(t);void 0===i&&(i=e.getUniformBlockIndex(n,t.name),r.set(t,i))},uniformBlockBinding:function(t,n){const r=l.get(n).get(t);a.get(n)!==r&&(e.uniformBlockBinding(n,r,t.__bindingPointIndex),a.set(n,r))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===ne.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),ne.copy(t))},viewport:function(t){!1===re.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),re.copy(t))},reset:function(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.blendColor(0,0,0,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),!0===r&&(e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),c={},J=null,Q={},h={},u=new WeakMap,d=[],p=null,f=!1,m=null,g=null,v=null,x=null,F=null,k=null,z=null,B=new zn(0,0,0),V=0,$=!1,G=null,H=null,j=null,W=null,X=null,ne.set(0,0,e.canvas.width,e.canvas.height),re.set(0,0,e.canvas.width,e.canvas.height),i.reset(),s.reset(),o.reset()}}}function _o(e,t,n,r,i,s,o){const a=i.isWebGL2,l=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,c="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),h=new We,u=new WeakMap;let d;const p=new WeakMap;let f=!1;try{f="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function m(e,t){return f?new OffscreenCanvas(e,t):Ze("canvas")}function g(e,t,n,r){let i=1;const s=ie(e);if((s.width>r||s.height>r)&&(i=r/Math.max(s.width,s.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&e instanceof VideoFrame){const r=t?$e:Math.floor,o=r(i*s.width),a=r(i*s.height);void 0===d&&(d=m(o,a));const l=n?m(o,a):d;return l.width=o,l.height=a,l.getContext("2d").drawImage(e,0,0,o,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+s.width+"x"+s.height+") to ("+o+"x"+a+")."),l}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+s.width+"x"+s.height+")."),e}return e}function v(e){const t=ie(e);return Ve(t.width)&&Ve(t.height)}function x(e,t){return e.generateMipmaps&&t&&e.minFilter!==G&&e.minFilter!==W}function _(t){e.generateMipmap(t)}function b(n,r,i,s,o=!1){if(!1===a)return r;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let l=r;if(r===e.RED&&(i===e.FLOAT&&(l=e.R32F),i===e.HALF_FLOAT&&(l=e.R16F),i===e.UNSIGNED_BYTE&&(l=e.R8)),r===e.RED_INTEGER&&(i===e.UNSIGNED_BYTE&&(l=e.R8UI),i===e.UNSIGNED_SHORT&&(l=e.R16UI),i===e.UNSIGNED_INT&&(l=e.R32UI),i===e.BYTE&&(l=e.R8I),i===e.SHORT&&(l=e.R16I),i===e.INT&&(l=e.R32I)),r===e.RG&&(i===e.FLOAT&&(l=e.RG32F),i===e.HALF_FLOAT&&(l=e.RG16F),i===e.UNSIGNED_BYTE&&(l=e.RG8)),r===e.RG_INTEGER&&(i===e.UNSIGNED_BYTE&&(l=e.RG8UI),i===e.UNSIGNED_SHORT&&(l=e.RG16UI),i===e.UNSIGNED_INT&&(l=e.RG32UI),i===e.BYTE&&(l=e.RG8I),i===e.SHORT&&(l=e.RG16I),i===e.INT&&(l=e.RG32I)),r===e.RGBA){const t=o?ve:rt.getTransfer(s);i===e.FLOAT&&(l=e.RGBA32F),i===e.HALF_FLOAT&&(l=e.RGBA16F),i===e.UNSIGNED_BYTE&&(l=t===xe?e.SRGB8_ALPHA8:e.RGBA8),i===e.UNSIGNED_SHORT_4_4_4_4&&(l=e.RGBA4),i===e.UNSIGNED_SHORT_5_5_5_1&&(l=e.RGB5_A1)}return l!==e.R16F&&l!==e.R32F&&l!==e.RG16F&&l!==e.RG32F&&l!==e.RGBA16F&&l!==e.RGBA32F||t.get("EXT_color_buffer_float"),l}function y(e,t,n){return!0===x(e,n)||e.isFramebufferTexture&&e.minFilter!==G&&e.minFilter!==W?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function E(t){return t===G||1004===t||t===j?e.NEAREST:e.LINEAR}function S(e){const t=e.target;t.removeEventListener("dispose",S),function(e){const t=r.get(e);if(void 0===t.__webglInit)return;const n=e.source,i=p.get(n);if(i){const r=i[t.__cacheKey];r.usedTimes--,0===r.usedTimes&&A(e),0===Object.keys(i).length&&p.delete(n)}r.remove(e)}(t),t.isVideoTexture&&u.delete(t)}function M(t){const n=t.target;n.removeEventListener("dispose",M),function(t){const n=r.get(t);if(t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++){if(Array.isArray(n.__webglFramebuffer[t]))for(let r=0;r<n.__webglFramebuffer[t].length;r++)e.deleteFramebuffer(n.__webglFramebuffer[t][r]);else e.deleteFramebuffer(n.__webglFramebuffer[t]);n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[t])}else{if(Array.isArray(n.__webglFramebuffer))for(let t=0;t<n.__webglFramebuffer.length;t++)e.deleteFramebuffer(n.__webglFramebuffer[t]);else e.deleteFramebuffer(n.__webglFramebuffer);if(n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&e.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer)for(let t=0;t<n.__webglColorRenderbuffer.length;t++)n.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(n.__webglColorRenderbuffer[t]);n.__webglDepthRenderbuffer&&e.deleteRenderbuffer(n.__webglDepthRenderbuffer)}const i=t.textures;for(let t=0,n=i.length;t<n;t++){const n=r.get(i[t]);n.__webglTexture&&(e.deleteTexture(n.__webglTexture),o.memory.textures--),r.remove(i[t])}r.remove(t)}(n)}function A(t){const n=r.get(t);e.deleteTexture(n.__webglTexture);const i=t.source;delete p.get(i)[n.__cacheKey],o.memory.textures--}let T=0;function w(t,i){const s=r.get(t);if(t.isVideoTexture&&function(e){const t=o.render.frame;u.get(e)!==t&&(u.set(e,t),e.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&s.__version!==t.version){const e=t.image;if(null===e)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==e.complete)return void I(s,t,i);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(e.TEXTURE_2D,s.__webglTexture,e.TEXTURE0+i)}const C={[B]:e.REPEAT,[V]:e.CLAMP_TO_EDGE,[$]:e.MIRRORED_REPEAT},R={[G]:e.NEAREST,[H]:e.NEAREST_MIPMAP_NEAREST,[j]:e.NEAREST_MIPMAP_LINEAR,[W]:e.LINEAR,[X]:e.LINEAR_MIPMAP_NEAREST,[Y]:e.LINEAR_MIPMAP_LINEAR},P={[Ee]:e.NEVER,[Re]:e.ALWAYS,[Se]:e.LESS,[Ae]:e.LEQUAL,[Me]:e.EQUAL,[Ce]:e.GEQUAL,[Te]:e.GREATER,[we]:e.NOTEQUAL};function D(n,s,o){if(s.type!==J||!1!==t.has("OES_texture_float_linear")||s.magFilter!==W&&s.magFilter!==X&&s.magFilter!==j&&s.magFilter!==Y&&s.minFilter!==W&&s.minFilter!==X&&s.minFilter!==j&&s.minFilter!==Y||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),o?(e.texParameteri(n,e.TEXTURE_WRAP_S,C[s.wrapS]),e.texParameteri(n,e.TEXTURE_WRAP_T,C[s.wrapT]),n!==e.TEXTURE_3D&&n!==e.TEXTURE_2D_ARRAY||e.texParameteri(n,e.TEXTURE_WRAP_R,C[s.wrapR]),e.texParameteri(n,e.TEXTURE_MAG_FILTER,R[s.magFilter]),e.texParameteri(n,e.TEXTURE_MIN_FILTER,R[s.minFilter])):(e.texParameteri(n,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(n,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),n!==e.TEXTURE_3D&&n!==e.TEXTURE_2D_ARRAY||e.texParameteri(n,e.TEXTURE_WRAP_R,e.CLAMP_TO_EDGE),s.wrapS===V&&s.wrapT===V||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,e.TEXTURE_MAG_FILTER,E(s.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,E(s.minFilter)),s.minFilter!==G&&s.minFilter!==W&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),s.compareFunction&&(e.texParameteri(n,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(n,e.TEXTURE_COMPARE_FUNC,P[s.compareFunction])),!0===t.has("EXT_texture_filter_anisotropic")){if(s.magFilter===G)return;if(s.minFilter!==j&&s.minFilter!==Y)return;if(s.type===J&&!1===t.has("OES_texture_float_linear"))return;if(!1===a&&s.type===Q&&!1===t.has("OES_texture_half_float_linear"))return;if(s.anisotropy>1||r.get(s).__currentAnisotropy){const o=t.get("EXT_texture_filter_anisotropic");e.texParameterf(n,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,i.getMaxAnisotropy())),r.get(s).__currentAnisotropy=s.anisotropy}}}function L(t,n){let r=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",S));const i=n.source;let s=p.get(i);void 0===s&&(s={},p.set(i,s));const a=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.colorSpace),t.join()}(n);if(a!==t.__cacheKey){void 0===s[a]&&(s[a]={texture:e.createTexture(),usedTimes:0},o.memory.textures++,r=!0),s[a].usedTimes++;const i=s[t.__cacheKey];void 0!==i&&(s[t.__cacheKey].usedTimes--,0===i.usedTimes&&A(n)),t.__cacheKey=a,t.__webglTexture=s[a].texture}return r}function I(t,o,l){let c=e.TEXTURE_2D;(o.isDataArrayTexture||o.isCompressedArrayTexture)&&(c=e.TEXTURE_2D_ARRAY),o.isData3DTexture&&(c=e.TEXTURE_3D);const h=L(t,o),u=o.source;n.bindTexture(c,t.__webglTexture,e.TEXTURE0+l);const d=r.get(u);if(u.version!==d.__version||!0===h){n.activeTexture(e.TEXTURE0+l);const t=rt.getPrimaries(rt.workingColorSpace),r=o.colorSpace===de?null:rt.getPrimaries(o.colorSpace),p=o.colorSpace===de||t===r?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,o.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,o.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,o.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,p);const f=function(e){return!a&&(e.wrapS!==V||e.wrapT!==V||e.minFilter!==G&&e.minFilter!==W)}(o)&&!1===v(o.image);let m=g(o.image,f,!1,i.maxTextureSize);m=z(o,m);const E=v(m)||a,S=s.convert(o.format,o.colorSpace);let M,A=s.convert(o.type),T=b(o.internalFormat,S,A,o.colorSpace,o.isVideoTexture);D(c,o,E);const w=o.mipmaps,C=a&&!0!==o.isVideoTexture&&36196!==T,R=void 0===d.__version||!0===h,P=u.dataReady,L=y(o,m,E);if(o.isDepthTexture)T=e.DEPTH_COMPONENT,a?T=o.type===J?e.DEPTH_COMPONENT32F:o.type===K?e.DEPTH_COMPONENT24:o.type===ee?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT16:o.type===J&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),o.format===ne&&T===e.DEPTH_COMPONENT&&o.type!==Z&&o.type!==K&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),o.type=K,A=s.convert(o.type)),o.format===re&&T===e.DEPTH_COMPONENT&&(T=e.DEPTH_STENCIL,o.type!==ee&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),o.type=ee,A=s.convert(o.type))),R&&(C?n.texStorage2D(e.TEXTURE_2D,1,T,m.width,m.height):n.texImage2D(e.TEXTURE_2D,0,T,m.width,m.height,0,S,A,null));else if(o.isDataTexture)if(w.length>0&&E){C&&R&&n.texStorage2D(e.TEXTURE_2D,L,T,w[0].width,w[0].height);for(let t=0,r=w.length;t<r;t++)M=w[t],C?P&&n.texSubImage2D(e.TEXTURE_2D,t,0,0,M.width,M.height,S,A,M.data):n.texImage2D(e.TEXTURE_2D,t,T,M.width,M.height,0,S,A,M.data);o.generateMipmaps=!1}else C?(R&&n.texStorage2D(e.TEXTURE_2D,L,T,m.width,m.height),P&&n.texSubImage2D(e.TEXTURE_2D,0,0,0,m.width,m.height,S,A,m.data)):n.texImage2D(e.TEXTURE_2D,0,T,m.width,m.height,0,S,A,m.data);else if(o.isCompressedTexture)if(o.isCompressedArrayTexture){C&&R&&n.texStorage3D(e.TEXTURE_2D_ARRAY,L,T,w[0].width,w[0].height,m.depth);for(let t=0,r=w.length;t<r;t++)M=w[t],o.format!==te?null!==S?C?P&&n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,M.width,M.height,m.depth,S,M.data,0,0):n.compressedTexImage3D(e.TEXTURE_2D_ARRAY,t,T,M.width,M.height,m.depth,0,M.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):C?P&&n.texSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,M.width,M.height,m.depth,S,A,M.data):n.texImage3D(e.TEXTURE_2D_ARRAY,t,T,M.width,M.height,m.depth,0,S,A,M.data)}else{C&&R&&n.texStorage2D(e.TEXTURE_2D,L,T,w[0].width,w[0].height);for(let t=0,r=w.length;t<r;t++)M=w[t],o.format!==te?null!==S?C?P&&n.compressedTexSubImage2D(e.TEXTURE_2D,t,0,0,M.width,M.height,S,M.data):n.compressedTexImage2D(e.TEXTURE_2D,t,T,M.width,M.height,0,M.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):C?P&&n.texSubImage2D(e.TEXTURE_2D,t,0,0,M.width,M.height,S,A,M.data):n.texImage2D(e.TEXTURE_2D,t,T,M.width,M.height,0,S,A,M.data)}else if(o.isDataArrayTexture)C?(R&&n.texStorage3D(e.TEXTURE_2D_ARRAY,L,T,m.width,m.height,m.depth),P&&n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,m.width,m.height,m.depth,S,A,m.data)):n.texImage3D(e.TEXTURE_2D_ARRAY,0,T,m.width,m.height,m.depth,0,S,A,m.data);else if(o.isData3DTexture)C?(R&&n.texStorage3D(e.TEXTURE_3D,L,T,m.width,m.height,m.depth),P&&n.texSubImage3D(e.TEXTURE_3D,0,0,0,0,m.width,m.height,m.depth,S,A,m.data)):n.texImage3D(e.TEXTURE_3D,0,T,m.width,m.height,m.depth,0,S,A,m.data);else if(o.isFramebufferTexture){if(R)if(C)n.texStorage2D(e.TEXTURE_2D,L,T,m.width,m.height);else{let t=m.width,r=m.height;for(let i=0;i<L;i++)n.texImage2D(e.TEXTURE_2D,i,T,t,r,0,S,A,null),t>>=1,r>>=1}}else if(w.length>0&&E){if(C&&R){const t=ie(w[0]);n.texStorage2D(e.TEXTURE_2D,L,T,t.width,t.height)}for(let t=0,r=w.length;t<r;t++)M=w[t],C?P&&n.texSubImage2D(e.TEXTURE_2D,t,0,0,S,A,M):n.texImage2D(e.TEXTURE_2D,t,T,S,A,M);o.generateMipmaps=!1}else if(C){if(R){const t=ie(m);n.texStorage2D(e.TEXTURE_2D,L,T,t.width,t.height)}P&&n.texSubImage2D(e.TEXTURE_2D,0,0,0,S,A,m)}else n.texImage2D(e.TEXTURE_2D,0,T,S,A,m);x(o,E)&&_(c),d.__version=u.version,o.onUpdate&&o.onUpdate(o)}t.__version=o.version}function N(t,i,o,a,c,h){const u=s.convert(o.format,o.colorSpace),d=s.convert(o.type),p=b(o.internalFormat,u,d,o.colorSpace);if(!r.get(i).__hasExternalTextures){const t=Math.max(1,i.width>>h),r=Math.max(1,i.height>>h);c===e.TEXTURE_3D||c===e.TEXTURE_2D_ARRAY?n.texImage3D(c,h,p,t,r,i.depth,0,u,d,null):n.texImage2D(c,h,p,t,r,0,u,d,null)}n.bindFramebuffer(e.FRAMEBUFFER,t),k(i)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,a,c,r.get(o).__webglTexture,0,F(i)):(c===e.TEXTURE_2D||c>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&c<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,a,c,r.get(o).__webglTexture,h),n.bindFramebuffer(e.FRAMEBUFFER,null)}function O(t,n,r){if(e.bindRenderbuffer(e.RENDERBUFFER,t),n.depthBuffer&&!n.stencilBuffer){let i=!0===a?e.DEPTH_COMPONENT24:e.DEPTH_COMPONENT16;if(r||k(n)){const t=n.depthTexture;t&&t.isDepthTexture&&(t.type===J?i=e.DEPTH_COMPONENT32F:t.type===K&&(i=e.DEPTH_COMPONENT24));const r=F(n);k(n)?l.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,r,i,n.width,n.height):e.renderbufferStorageMultisample(e.RENDERBUFFER,r,i,n.width,n.height)}else e.renderbufferStorage(e.RENDERBUFFER,i,n.width,n.height);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)}else if(n.depthBuffer&&n.stencilBuffer){const i=F(n);r&&!1===k(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,i,e.DEPTH24_STENCIL8,n.width,n.height):k(n)?l.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,i,e.DEPTH24_STENCIL8,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)}else{const t=n.textures;for(let i=0;i<t.length;i++){const o=t[i],a=s.convert(o.format,o.colorSpace),c=s.convert(o.type),h=b(o.internalFormat,a,c,o.colorSpace),u=F(n);r&&!1===k(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,u,h,n.width,n.height):k(n)?l.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,u,h,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,h,n.width,n.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function U(t){const i=r.get(t),s=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!i.__autoAllocateDepthBuffer){if(s)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(e.FRAMEBUFFER,t),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),w(i.depthTexture,0);const s=r.get(i.depthTexture).__webglTexture,o=F(i);if(i.depthTexture.format===ne)k(i)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,s,0,o):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,s,0);else{if(i.depthTexture.format!==re)throw new Error("Unknown depthTexture format");k(i)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,s,0,o):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,s,0)}}(i.__webglFramebuffer,t)}else if(s){i.__webglDepthbuffer=[];for(let r=0;r<6;r++)n.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer[r]),i.__webglDepthbuffer[r]=e.createRenderbuffer(),O(i.__webglDepthbuffer[r],t,!1)}else n.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer),i.__webglDepthbuffer=e.createRenderbuffer(),O(i.__webglDepthbuffer,t,!1);n.bindFramebuffer(e.FRAMEBUFFER,null)}function F(e){return Math.min(i.maxSamples,e.samples)}function k(e){const n=r.get(e);return a&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function z(e,n){const r=e.colorSpace,i=e.format,s=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===De||r!==fe&&r!==de&&(rt.getTransfer(r)===xe?!1===a?!0===t.has("EXT_sRGB")&&i===te?(e.format=De,e.minFilter=W,e.generateMipmaps=!1):n=at.sRGBToLinear(n):i===te&&s===q||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",r)),n}function ie(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement?(h.width=e.naturalWidth||e.width,h.height=e.naturalHeight||e.height):"undefined"!=typeof VideoFrame&&e instanceof VideoFrame?(h.width=e.displayWidth,h.height=e.displayHeight):(h.width=e.width,h.height=e.height),h}this.allocateTextureUnit=function(){const e=T;return e>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+i.maxTextures),T+=1,e},this.resetTextureUnits=function(){T=0},this.setTexture2D=w,this.setTexture2DArray=function(t,i){const s=r.get(t);t.version>0&&s.__version!==t.version?I(s,t,i):n.bindTexture(e.TEXTURE_2D_ARRAY,s.__webglTexture,e.TEXTURE0+i)},this.setTexture3D=function(t,i){const s=r.get(t);t.version>0&&s.__version!==t.version?I(s,t,i):n.bindTexture(e.TEXTURE_3D,s.__webglTexture,e.TEXTURE0+i)},this.setTextureCube=function(t,o){const l=r.get(t);t.version>0&&l.__version!==t.version?function(t,o,l){if(6!==o.image.length)return;const c=L(t,o),h=o.source;n.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+l);const u=r.get(h);if(h.version!==u.__version||!0===c){n.activeTexture(e.TEXTURE0+l);const t=rt.getPrimaries(rt.workingColorSpace),r=o.colorSpace===de?null:rt.getPrimaries(o.colorSpace),d=o.colorSpace===de||t===r?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,o.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,o.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,o.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);const p=o.isCompressedTexture||o.image[0].isCompressedTexture,f=o.image[0]&&o.image[0].isDataTexture,m=[];for(let e=0;e<6;e++)m[e]=p||f?f?o.image[e].image:o.image[e]:g(o.image[e],!1,!0,i.maxCubemapSize),m[e]=z(o,m[e]);const E=m[0],S=v(E)||a,M=s.convert(o.format,o.colorSpace),A=s.convert(o.type),T=b(o.internalFormat,M,A,o.colorSpace),w=a&&!0!==o.isVideoTexture,C=void 0===u.__version||!0===c,R=h.dataReady;let P,L=y(o,E,S);if(D(e.TEXTURE_CUBE_MAP,o,S),p){w&&C&&n.texStorage2D(e.TEXTURE_CUBE_MAP,L,T,E.width,E.height);for(let t=0;t<6;t++){P=m[t].mipmaps;for(let r=0;r<P.length;r++){const i=P[r];o.format!==te?null!==M?w?R&&n.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r,0,0,i.width,i.height,M,i.data):n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r,T,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):w?R&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r,0,0,i.width,i.height,M,A,i.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r,T,i.width,i.height,0,M,A,i.data)}}}else{if(P=o.mipmaps,w&&C){P.length>0&&L++;const t=ie(m[0]);n.texStorage2D(e.TEXTURE_CUBE_MAP,L,T,t.width,t.height)}for(let t=0;t<6;t++)if(f){w?R&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,m[t].width,m[t].height,M,A,m[t].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,T,m[t].width,m[t].height,0,M,A,m[t].data);for(let r=0;r<P.length;r++){const i=P[r].image[t].image;w?R&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r+1,0,0,i.width,i.height,M,A,i.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r+1,T,i.width,i.height,0,M,A,i.data)}}else{w?R&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,M,A,m[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,T,M,A,m[t]);for(let r=0;r<P.length;r++){const i=P[r];w?R&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r+1,0,0,M,A,i.image[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r+1,T,M,A,i.image[t])}}}x(o,S)&&_(e.TEXTURE_CUBE_MAP),u.__version=h.version,o.onUpdate&&o.onUpdate(o)}t.__version=o.version}(l,t,o):n.bindTexture(e.TEXTURE_CUBE_MAP,l.__webglTexture,e.TEXTURE0+o)},this.rebindTextures=function(t,n,i){const s=r.get(t);void 0!==n&&N(s.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,0),void 0!==i&&U(t)},this.setupRenderTarget=function(t){const l=t.texture,c=r.get(t),h=r.get(l);t.addEventListener("dispose",M);const u=t.textures,d=!0===t.isWebGLCubeRenderTarget,p=u.length>1,f=v(t)||a;if(p||(void 0===h.__webglTexture&&(h.__webglTexture=e.createTexture()),h.__version=l.version,o.memory.textures++),d){c.__webglFramebuffer=[];for(let t=0;t<6;t++)if(a&&l.mipmaps&&l.mipmaps.length>0){c.__webglFramebuffer[t]=[];for(let n=0;n<l.mipmaps.length;n++)c.__webglFramebuffer[t][n]=e.createFramebuffer()}else c.__webglFramebuffer[t]=e.createFramebuffer()}else{if(a&&l.mipmaps&&l.mipmaps.length>0){c.__webglFramebuffer=[];for(let t=0;t<l.mipmaps.length;t++)c.__webglFramebuffer[t]=e.createFramebuffer()}else c.__webglFramebuffer=e.createFramebuffer();if(p)if(i.drawBuffers)for(let t=0,n=u.length;t<n;t++){const n=r.get(u[t]);void 0===n.__webglTexture&&(n.__webglTexture=e.createTexture(),o.memory.textures++)}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&t.samples>0&&!1===k(t)){c.__webglMultisampledFramebuffer=e.createFramebuffer(),c.__webglColorRenderbuffer=[],n.bindFramebuffer(e.FRAMEBUFFER,c.__webglMultisampledFramebuffer);for(let n=0;n<u.length;n++){const r=u[n];c.__webglColorRenderbuffer[n]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,c.__webglColorRenderbuffer[n]);const i=s.convert(r.format,r.colorSpace),o=s.convert(r.type),a=b(r.internalFormat,i,o,r.colorSpace,!0===t.isXRRenderTarget),l=F(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,l,a,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+n,e.RENDERBUFFER,c.__webglColorRenderbuffer[n])}e.bindRenderbuffer(e.RENDERBUFFER,null),t.depthBuffer&&(c.__webglDepthRenderbuffer=e.createRenderbuffer(),O(c.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(e.FRAMEBUFFER,null)}}if(d){n.bindTexture(e.TEXTURE_CUBE_MAP,h.__webglTexture),D(e.TEXTURE_CUBE_MAP,l,f);for(let n=0;n<6;n++)if(a&&l.mipmaps&&l.mipmaps.length>0)for(let r=0;r<l.mipmaps.length;r++)N(c.__webglFramebuffer[n][r],t,l,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,r);else N(c.__webglFramebuffer[n],t,l,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);x(l,f)&&_(e.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(p){for(let i=0,s=u.length;i<s;i++){const s=u[i],o=r.get(s);n.bindTexture(e.TEXTURE_2D,o.__webglTexture),D(e.TEXTURE_2D,s,f),N(c.__webglFramebuffer,t,s,e.COLOR_ATTACHMENT0+i,e.TEXTURE_2D,0),x(s,f)&&_(e.TEXTURE_2D)}n.unbindTexture()}else{let r=e.TEXTURE_2D;if((t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(a?r=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(r,h.__webglTexture),D(r,l,f),a&&l.mipmaps&&l.mipmaps.length>0)for(let n=0;n<l.mipmaps.length;n++)N(c.__webglFramebuffer[n],t,l,e.COLOR_ATTACHMENT0,r,n);else N(c.__webglFramebuffer,t,l,e.COLOR_ATTACHMENT0,r,0);x(l,f)&&_(r),n.unbindTexture()}t.depthBuffer&&U(t)},this.updateRenderTargetMipmap=function(t){const i=v(t)||a,s=t.textures;for(let o=0,a=s.length;o<a;o++){const a=s[o];if(x(a,i)){const i=t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,s=r.get(a).__webglTexture;n.bindTexture(i,s),_(i),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(a&&t.samples>0&&!1===k(t)){const i=t.textures,s=t.width,o=t.height;let a=e.COLOR_BUFFER_BIT;const l=[],h=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,u=r.get(t),d=i.length>1;if(d)for(let t=0;t<i.length;t++)n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null),n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0);n.bindFramebuffer(e.READ_FRAMEBUFFER,u.__webglMultisampledFramebuffer),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglFramebuffer);for(let n=0;n<i.length;n++){l.push(e.COLOR_ATTACHMENT0+n),t.depthBuffer&&l.push(h);const p=void 0!==u.__ignoreDepthValues&&u.__ignoreDepthValues;if(!1===p&&(t.depthBuffer&&(a|=e.DEPTH_BUFFER_BIT),t.stencilBuffer&&(a|=e.STENCIL_BUFFER_BIT)),d&&e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,u.__webglColorRenderbuffer[n]),!0===p&&(e.invalidateFramebuffer(e.READ_FRAMEBUFFER,[h]),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[h])),d){const t=r.get(i[n]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,s,o,0,0,s,o,a,e.NEAREST),c&&e.invalidateFramebuffer(e.READ_FRAMEBUFFER,l)}if(n.bindFramebuffer(e.READ_FRAMEBUFFER,null),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),d)for(let t=0;t<i.length;t++){n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,u.__webglColorRenderbuffer[t]);const s=r.get(i[t]).__webglTexture;n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,s,0)}n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=U,this.setupFrameBufferTexture=N,this.useMultisampledRTT=k}function bo(e,t,n){const r=n.isWebGL2;return{convert:function(n,i=""){let s;const o=rt.getTransfer(i);if(n===q)return e.UNSIGNED_BYTE;if(1017===n)return e.UNSIGNED_SHORT_4_4_4_4;if(1018===n)return e.UNSIGNED_SHORT_5_5_5_1;if(1010===n)return e.BYTE;if(1011===n)return e.SHORT;if(n===Z)return e.UNSIGNED_SHORT;if(1013===n)return e.INT;if(n===K)return e.UNSIGNED_INT;if(n===J)return e.FLOAT;if(n===Q)return r?e.HALF_FLOAT:(s=t.get("OES_texture_half_float"),null!==s?s.HALF_FLOAT_OES:null);if(1021===n)return e.ALPHA;if(n===te)return e.RGBA;if(1024===n)return e.LUMINANCE;if(1025===n)return e.LUMINANCE_ALPHA;if(n===ne)return e.DEPTH_COMPONENT;if(n===re)return e.DEPTH_STENCIL;if(n===De)return s=t.get("EXT_sRGB"),null!==s?s.SRGB_ALPHA_EXT:null;if(1028===n)return e.RED;if(1029===n)return e.RED_INTEGER;if(1030===n)return e.RG;if(1031===n)return e.RG_INTEGER;if(1033===n)return e.RGBA_INTEGER;if(n===ie||n===se||n===oe||n===ae)if(o===xe){if(s=t.get("WEBGL_compressed_texture_s3tc_srgb"),null===s)return null;if(n===ie)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===se)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===oe)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===ae)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(s=t.get("WEBGL_compressed_texture_s3tc"),null===s)return null;if(n===ie)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===se)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===oe)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===ae)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===n||35841===n||35842===n||35843===n){if(s=t.get("WEBGL_compressed_texture_pvrtc"),null===s)return null;if(35840===n)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===n)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===n)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===n)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===n)return s=t.get("WEBGL_compressed_texture_etc1"),null!==s?s.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===n||37496===n){if(s=t.get("WEBGL_compressed_texture_etc"),null===s)return null;if(37492===n)return o===xe?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(37496===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}if(37808===n||37809===n||37810===n||37811===n||37812===n||37813===n||37814===n||37815===n||37816===n||37817===n||37818===n||37819===n||37820===n||37821===n){if(s=t.get("WEBGL_compressed_texture_astc"),null===s)return null;if(37808===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===n)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===le||36494===n||36495===n){if(s=t.get("EXT_texture_compression_bptc"),null===s)return null;if(n===le)return o===xe?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(36494===n)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(36495===n)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(36283===n||36284===n||36285===n||36286===n){if(s=t.get("EXT_texture_compression_rgtc"),null===s)return null;if(n===le)return s.COMPRESSED_RED_RGTC1_EXT;if(36284===n)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===n)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===n)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===ee?r?e.UNSIGNED_INT_24_8:(s=t.get("WEBGL_depth_texture"),null!==s?s.UNSIGNED_INT_24_8_WEBGL:null):void 0!==e[n]?e[n]:null}}}class yo extends Ir{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Eo extends Sn{constructor(){super(),this.isGroup=!0,this.type="Group"}}const So={type:"move"};class Mo{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Eo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Eo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new _t,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new _t),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Eo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new _t,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new _t),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let r=null,i=null,s=null;const o=this._targetRay,a=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){s=!0;for(const r of e.hand.values()){const e=t.getJointPose(r,n),i=this._getHandJoint(l,r);null!==e&&(i.matrix.fromArray(e.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.matrixWorldNeedsUpdate=!0,i.jointRadius=e.radius),i.visible=null!==e}const r=l.joints["index-finger-tip"],i=l.joints["thumb-tip"],o=r.position.distanceTo(i.position),a=.02,c=.005;l.inputState.pinching&&o>a+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&o<=a-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==a&&e.gripSpace&&(i=t.getPose(e.gripSpace,n),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1));null!==o&&(r=t.getPose(e.targetRaySpace,n),null===r&&null!==i&&(r=i),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(So)))}return null!==o&&(o.visible=null!==r),null!==a&&(a.visible=null!==i),null!==l&&(l.visible=null!==s),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){const n=new Eo;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Ao{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(null===this.texture){const r=new dt;e.properties.get(r).__webglTexture=t.texture,t.depthNear==n.depthNear&&t.depthFar==n.depthFar||(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=r}}render(e,t){if(null!==this.texture){if(null===this.mesh){const e=t.cameras[0].viewport,n=new Cr({extensions:{fragDepth:!0},vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new yr(new Xr(20,20),n)}e.render(this.mesh,t)}}reset(){this.texture=null,this.mesh=null}}class To extends Ne{constructor(e,t){super();const n=this;let r=null,i=1,s=null,o="local-floor",a=1,l=null,c=null,h=null,u=null,d=null,p=null;const f=new Ao,m=t.getContextAttributes();let g=null,v=null;const x=[],_=[],b=new We;let y=null;const E=new Ir;E.layers.enable(1),E.viewport=new pt;const S=new Ir;S.layers.enable(2),S.viewport=new pt;const M=[E,S],A=new yo;A.layers.enable(1),A.layers.enable(2);let T=null,w=null;function C(e){const t=_.indexOf(e.inputSource);if(-1===t)return;const n=x[t];void 0!==n&&(n.update(e.inputSource,e.frame,l||s),n.dispatchEvent({type:e.type,data:e.inputSource}))}function R(){r.removeEventListener("select",C),r.removeEventListener("selectstart",C),r.removeEventListener("selectend",C),r.removeEventListener("squeeze",C),r.removeEventListener("squeezestart",C),r.removeEventListener("squeezeend",C),r.removeEventListener("end",R),r.removeEventListener("inputsourceschange",P);for(let e=0;e<x.length;e++){const t=_[e];null!==t&&(_[e]=null,x[e].disconnect(t))}T=null,w=null,f.reset(),e.setRenderTarget(g),d=null,u=null,h=null,r=null,v=null,O.stop(),n.isPresenting=!1,e.setPixelRatio(y),e.setSize(b.width,b.height,!1),n.dispatchEvent({type:"sessionend"})}function P(e){for(let t=0;t<e.removed.length;t++){const n=e.removed[t],r=_.indexOf(n);r>=0&&(_[r]=null,x[r].disconnect(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t];let r=_.indexOf(n);if(-1===r){for(let e=0;e<x.length;e++){if(e>=_.length){_.push(n),r=e;break}if(null===_[e]){_[e]=n,r=e;break}}if(-1===r)break}const i=x[r];i&&i.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=x[e];return void 0===t&&(t=new Mo,x[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=x[e];return void 0===t&&(t=new Mo,x[e]=t),t.getGripSpace()},this.getHand=function(e){let t=x[e];return void 0===t&&(t=new Mo,x[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){o=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||s},this.setReferenceSpace=function(e){l=e},this.getBaseLayer=function(){return null!==u?u:d},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(c){if(r=c,null!==r){if(g=e.getRenderTarget(),r.addEventListener("select",C),r.addEventListener("selectstart",C),r.addEventListener("selectend",C),r.addEventListener("squeeze",C),r.addEventListener("squeezestart",C),r.addEventListener("squeezeend",C),r.addEventListener("end",R),r.addEventListener("inputsourceschange",P),!0!==m.xrCompatible&&await t.makeXRCompatible(),y=e.getPixelRatio(),e.getSize(b),void 0===r.renderState.layers||!1===e.capabilities.isWebGL2){const n={antialias:void 0!==r.renderState.layers||m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:i};d=new XRWebGLLayer(r,t,n),r.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),v=new mt(d.framebufferWidth,d.framebufferHeight,{format:te,type:q,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil})}else{let n=null,s=null,o=null;m.depth&&(o=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,n=m.stencil?re:ne,s=m.stencil?ee:K);const a={colorFormat:t.RGBA8,depthFormat:o,scaleFactor:i};h=new XRWebGLBinding(r,t),u=h.createProjectionLayer(a),r.updateRenderState({layers:[u]}),e.setPixelRatio(1),e.setSize(u.textureWidth,u.textureHeight,!1),v=new mt(u.textureWidth,u.textureHeight,{format:te,type:q,depthTexture:new Pi(u.textureWidth,u.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0}),e.properties.get(v).__ignoreDepthValues=u.ignoreDepthValues}v.isXRRenderTarget=!0,this.setFoveation(a),l=null,s=await r.requestReferenceSpace(o),O.setContext(r),O.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==r)return r.environmentBlendMode};const D=new _t,L=new _t;function I(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===r)return;null!==f.texture&&(e.near=f.depthNear,e.far=f.depthFar),A.near=S.near=E.near=e.near,A.far=S.far=E.far=e.far,T===A.near&&w===A.far||(r.updateRenderState({depthNear:A.near,depthFar:A.far}),T=A.near,w=A.far,E.near=T,E.far=w,S.near=T,S.far=w,E.updateProjectionMatrix(),S.updateProjectionMatrix(),e.updateProjectionMatrix());const t=e.parent,n=A.cameras;I(A,t);for(let e=0;e<n.length;e++)I(n[e],t);2===n.length?function(e,t,n){D.setFromMatrixPosition(t.matrixWorld),L.setFromMatrixPosition(n.matrixWorld);const r=D.distanceTo(L),i=t.projectionMatrix.elements,s=n.projectionMatrix.elements,o=i[14]/(i[10]-1),a=i[14]/(i[10]+1),l=(i[9]+1)/i[5],c=(i[9]-1)/i[5],h=(i[8]-1)/i[0],u=(s[8]+1)/s[0],d=o*h,p=o*u,f=r/(-h+u),m=f*-h;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(f),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=o+f,v=a+f,x=d-m,_=p+(r-m),b=l*a/v*g,y=c*a/v*g;e.projectionMatrix.makePerspective(x,_,b,y,g,v),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}(A,E,S):A.projectionMatrix.copy(E.projectionMatrix),function(e,t,n){null===n?e.matrix.copy(t.matrixWorld):(e.matrix.copy(n.matrixWorld),e.matrix.invert(),e.matrix.multiply(t.matrixWorld)),e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*Fe*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)}(e,A,t)},this.getCamera=function(){return A},this.getFoveation=function(){if(null!==u||null!==d)return a},this.setFoveation=function(e){a=e,null!==u&&(u.fixedFoveation=e),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=e)},this.hasDepthSensing=function(){return null!==f.texture};let N=null;const O=new jr;O.setAnimationLoop((function(t,i){if(c=i.getViewerPose(l||s),p=i,null!==c){const t=c.views;null!==d&&(e.setRenderTargetFramebuffer(v,d.framebuffer),e.setRenderTarget(v));let n=!1;t.length!==A.cameras.length&&(A.cameras.length=0,n=!0);for(let r=0;r<t.length;r++){const i=t[r];let s=null;if(null!==d)s=d.getViewport(i);else{const t=h.getViewSubImage(u,i);s=t.viewport,0===r&&(e.setRenderTargetTextures(v,t.colorTexture,u.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(v))}let o=M[r];void 0===o&&(o=new Ir,o.layers.enable(r),o.viewport=new pt,M[r]=o),o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.quaternion,o.scale),o.projectionMatrix.fromArray(i.projectionMatrix),o.projectionMatrixInverse.copy(o.projectionMatrix).invert(),o.viewport.set(s.x,s.y,s.width,s.height),0===r&&(A.matrix.copy(o.matrix),A.matrix.decompose(A.position,A.quaternion,A.scale)),!0===n&&A.cameras.push(o)}const i=r.enabledFeatures;if(i&&i.includes("depth-sensing")){const n=h.getDepthInformation(t[0]);n&&n.isValid&&n.texture&&f.init(e,n,r.renderState)}}for(let e=0;e<x.length;e++){const t=_[e],n=x[e];null!==t&&void 0!==n&&n.update(t,i,l||s)}f.render(e,A),N&&N(t,i),i.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:i}),p=null})),this.setAnimationLoop=function(e){N=e},this.dispose=function(){}}}const wo=new on,Co=new qt;function Ro(e,t){function n(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function r(r,i){r.opacity.value=i.opacity,i.color&&r.diffuse.value.copy(i.color),i.emissive&&r.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(r.map.value=i.map,n(i.map,r.mapTransform)),i.alphaMap&&(r.alphaMap.value=i.alphaMap,n(i.alphaMap,r.alphaMapTransform)),i.bumpMap&&(r.bumpMap.value=i.bumpMap,n(i.bumpMap,r.bumpMapTransform),r.bumpScale.value=i.bumpScale,1===i.side&&(r.bumpScale.value*=-1)),i.normalMap&&(r.normalMap.value=i.normalMap,n(i.normalMap,r.normalMapTransform),r.normalScale.value.copy(i.normalScale),1===i.side&&r.normalScale.value.negate()),i.displacementMap&&(r.displacementMap.value=i.displacementMap,n(i.displacementMap,r.displacementMapTransform),r.displacementScale.value=i.displacementScale,r.displacementBias.value=i.displacementBias),i.emissiveMap&&(r.emissiveMap.value=i.emissiveMap,n(i.emissiveMap,r.emissiveMapTransform)),i.specularMap&&(r.specularMap.value=i.specularMap,n(i.specularMap,r.specularMapTransform)),i.alphaTest>0&&(r.alphaTest.value=i.alphaTest);const s=t.get(i),o=s.envMap,a=s.envMapRotation;if(o&&(r.envMap.value=o,wo.copy(a),wo.x*=-1,wo.y*=-1,wo.z*=-1,o.isCubeTexture&&!1===o.isRenderTargetTexture&&(wo.y*=-1,wo.z*=-1),r.envMapRotation.value.setFromMatrix4(Co.makeRotationFromEuler(wo)),r.flipEnvMap.value=o.isCubeTexture&&!1===o.isRenderTargetTexture?-1:1,r.reflectivity.value=i.reflectivity,r.ior.value=i.ior,r.refractionRatio.value=i.refractionRatio),i.lightMap){r.lightMap.value=i.lightMap;const t=!0===e._useLegacyLights?Math.PI:1;r.lightMapIntensity.value=i.lightMapIntensity*t,n(i.lightMap,r.lightMapTransform)}i.aoMap&&(r.aoMap.value=i.aoMap,r.aoMapIntensity.value=i.aoMapIntensity,n(i.aoMap,r.aoMapTransform))}return{refreshFogUniforms:function(t,n){n.color.getRGB(t.fogColor.value,Tr(e)),n.isFog?(t.fogNear.value=n.near,t.fogFar.value=n.far):n.isFogExp2&&(t.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,i,s,o,a){i.isMeshBasicMaterial||i.isMeshLambertMaterial?r(e,i):i.isMeshToonMaterial?(r(e,i),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(e,i)):i.isMeshPhongMaterial?(r(e,i),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)}(e,i)):i.isMeshStandardMaterial?(r(e,i),function(e,r){e.metalness.value=r.metalness,r.metalnessMap&&(e.metalnessMap.value=r.metalnessMap,n(r.metalnessMap,e.metalnessMapTransform)),e.roughness.value=r.roughness,r.roughnessMap&&(e.roughnessMap.value=r.roughnessMap,n(r.roughnessMap,e.roughnessMapTransform));t.get(r).envMap&&(e.envMapIntensity.value=r.envMapIntensity)}(e,i),i.isMeshPhysicalMaterial&&function(e,t,r){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap,n(t.sheenColorMap,e.sheenColorMapTransform)),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap,n(t.sheenRoughnessMap,e.sheenRoughnessMapTransform))),t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap,n(t.clearcoatMap,e.clearcoatMapTransform)),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap,n(t.clearcoatRoughnessMap,e.clearcoatRoughnessMapTransform)),t.clearcoatNormalMap&&(e.clearcoatNormalMap.value=t.clearcoatNormalMap,n(t.clearcoatNormalMap,e.clearcoatNormalMapTransform),e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),1===t.side&&e.clearcoatNormalScale.value.negate())),t.iridescence>0&&(e.iridescence.value=t.iridescence,e.iridescenceIOR.value=t.iridescenceIOR,e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(e.iridescenceMap.value=t.iridescenceMap,n(t.iridescenceMap,e.iridescenceMapTransform)),t.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=t.iridescenceThicknessMap,n(t.iridescenceThicknessMap,e.iridescenceThicknessMapTransform))),t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=r.texture,e.transmissionSamplerSize.value.set(r.width,r.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap,n(t.transmissionMap,e.transmissionMapTransform)),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap,n(t.thicknessMap,e.thicknessMapTransform)),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor)),t.anisotropy>0&&(e.anisotropyVector.value.set(t.anisotropy*Math.cos(t.anisotropyRotation),t.anisotropy*Math.sin(t.anisotropyRotation)),t.anisotropyMap&&(e.anisotropyMap.value=t.anisotropyMap,n(t.anisotropyMap,e.anisotropyMapTransform))),e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap,n(t.specularColorMap,e.specularColorMapTransform)),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap,n(t.specularIntensityMap,e.specularIntensityMapTransform))}(e,i,a)):i.isMeshMatcapMaterial?(r(e,i),function(e,t){t.matcap&&(e.matcap.value=t.matcap)}(e,i)):i.isMeshDepthMaterial?r(e,i):i.isMeshDistanceMaterial?(r(e,i),function(e,n){const r=t.get(n).light;e.referencePosition.value.setFromMatrixPosition(r.matrixWorld),e.nearDistance.value=r.shadow.camera.near,e.farDistance.value=r.shadow.camera.far}(e,i)):i.isMeshNormalMaterial?r(e,i):i.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform))}(e,i),i.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,i)):i.isPointsMaterial?function(e,t,r,i){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*r,e.scale.value=.5*i,t.map&&(e.map.value=t.map,n(t.map,e.uvTransform)),t.alphaMap&&(e.alphaMap.value=t.alphaMap,n(t.alphaMap,e.alphaMapTransform)),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,i,s,o):i.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform)),t.alphaMap&&(e.alphaMap.value=t.alphaMap,n(t.alphaMap,e.alphaMapTransform)),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,i):i.isShadowMaterial?(e.color.value.copy(i.color),e.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function Po(e,t,n,r){let i={},s={},o=[];const a=n.isWebGL2?e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(e,t,n,r){const i=e.value,s=t+"_"+n;if(void 0===r[s])return r[s]="number"==typeof i||"boolean"==typeof i?i:i.clone(),!0;{const e=r[s];if("number"==typeof i||"boolean"==typeof i){if(e!==i)return r[s]=i,!0}else if(!1===e.equals(i))return e.copy(i),!0}return!1}function c(e){const t={boundary:0,storage:0};return"number"==typeof e||"boolean"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function h(t){const n=t.target;n.removeEventListener("dispose",h);const r=o.indexOf(n.__bindingPointIndex);o.splice(r,1),e.deleteBuffer(i[n.id]),delete i[n.id],delete s[n.id]}return{bind:function(e,t){const n=t.program;r.uniformBlockBinding(e,n)},update:function(n,u){let d=i[n.id];void 0===d&&(function(e){const t=e.uniforms;let n=0;for(let e=0,r=t.length;e<r;e++){const r=Array.isArray(t[e])?t[e]:[t[e]];for(let e=0,t=r.length;e<t;e++){const t=r[e],i=Array.isArray(t.value)?t.value:[t.value];for(let e=0,r=i.length;e<r;e++){const r=c(i[e]),s=n%16;0!==s&&16-s<r.boundary&&(n+=16-s),t.__data=new Float32Array(r.storage/Float32Array.BYTES_PER_ELEMENT),t.__offset=n,n+=r.storage}}}const r=n%16;r>0&&(n+=16-r),e.__size=n,e.__cache={}}(n),d=function(t){const n=function(){for(let e=0;e<a;e++)if(-1===o.indexOf(e))return o.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=n;const r=e.createBuffer(),i=t.__size,s=t.usage;return e.bindBuffer(e.UNIFORM_BUFFER,r),e.bufferData(e.UNIFORM_BUFFER,i,s),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,n,r),r}(n),i[n.id]=d,n.addEventListener("dispose",h));const p=u.program;r.updateUBOMapping(n,p);const f=t.render.frame;s[n.id]!==f&&(function(t){const n=i[t.id],r=t.uniforms,s=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,n);for(let t=0,n=r.length;t<n;t++){const n=Array.isArray(r[t])?r[t]:[r[t]];for(let r=0,i=n.length;r<i;r++){const i=n[r];if(!0===l(i,t,r,s)){const t=i.__offset,n=Array.isArray(i.value)?i.value:[i.value];let r=0;for(let s=0;s<n.length;s++){const o=n[s],a=c(o);"number"==typeof o||"boolean"==typeof o?(i.__data[0]=o,e.bufferSubData(e.UNIFORM_BUFFER,t+r,i.__data)):o.isMatrix3?(i.__data[0]=o.elements[0],i.__data[1]=o.elements[1],i.__data[2]=o.elements[2],i.__data[3]=0,i.__data[4]=o.elements[3],i.__data[5]=o.elements[4],i.__data[6]=o.elements[5],i.__data[7]=0,i.__data[8]=o.elements[6],i.__data[9]=o.elements[7],i.__data[10]=o.elements[8],i.__data[11]=0):(o.toArray(i.__data,r),r+=a.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,t,i.__data)}}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(n),s[n.id]=f)},dispose:function(){for(const t in i)e.deleteBuffer(i[t]);o=[],i={},s={}}}}class Do{constructor(e={}){const{canvas:t=Ke(),context:n=null,depth:r=!0,stencil:i=!0,alpha:s=!1,antialias:o=!1,premultipliedAlpha:a=!0,preserveDrawingBuffer:l=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:h=!1}=e;let u;this.isWebGLRenderer=!0,u=null!==n?n.getContextAttributes().alpha:s;const d=new Uint32Array(4),p=new Int32Array(4);let f=null,g=null;const v=[],x=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=pe,this._useLegacyLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const _=this;let b=!1,y=0,E=0,S=null,M=-1,A=null;const T=new pt,w=new pt;let C=null;const R=new zn(0);let P=0,D=t.width,L=t.height,I=1,N=null,O=null;const U=new pt(0,0,D,L),F=new pt(0,0,D,L);let k=!1;const z=new Hr;let B=!1,V=!1,$=null;const G=new qt,H=new We,j=new _t,W={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function X(){return null===S?I:1}let ne,re,ie,se,oe,ae,le,ce,he,ue,de,me,ge,ve,xe,_e,be,ye,Ee,Se,Me,Ae,Te,we,Ce=n;function Re(e,n){for(let r=0;r<e.length;r++){const i=e[r],s=t.getContext(i,n);if(null!==s)return s}return null}try{const e={alpha:!0,depth:r,stencil:i,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${m}`),t.addEventListener("webglcontextlost",Le,!1),t.addEventListener("webglcontextrestored",Ie,!1),t.addEventListener("webglcontextcreationerror",Ne,!1),null===Ce){const t=["webgl2","webgl","experimental-webgl"];if(!0===_.isWebGL1Renderer&&t.shift(),Ce=Re(t,e),null===Ce)throw Re(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}"undefined"!=typeof WebGLRenderingContext&&Ce instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),void 0===Ce.getShaderPrecisionFormat&&(Ce.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function Pe(){ne=new Ei(Ce),re=new ri(Ce,ne,e),ne.init(re),Ae=new bo(Ce,ne,re),ie=new xo(Ce,ne,re),se=new Ai(Ce),oe=new ro,ae=new _o(Ce,ne,ie,oe,re,Ae,se),le=new si(_),ce=new yi(_),he=new Wr(Ce,re),Te=new ti(Ce,ne,he,re),ue=new Si(Ce,he,se,Te),de=new Ri(Ce,ue,he,se),Ee=new Ci(Ce,re,ae),_e=new ii(oe),me=new no(_,le,ce,ne,re,Te,_e),ge=new Ro(_,oe),ve=new ao,xe=new fo(ne,re),ye=new ei(_,le,ce,ie,de,u,a),be=new vo(_,de,re),we=new Po(Ce,se,re,ie),Se=new ni(Ce,ne,se,re),Me=new Mi(Ce,ne,se,re),se.programs=me.programs,_.capabilities=re,_.extensions=ne,_.properties=oe,_.renderLists=ve,_.shadowMap=be,_.state=ie,_.info=se}Pe();const De=new To(_,Ce);function Le(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function Ie(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;const e=se.autoReset,t=be.enabled,n=be.autoUpdate,r=be.needsUpdate,i=be.type;Pe(),se.autoReset=e,be.enabled=t,be.autoUpdate=n,be.needsUpdate=r,be.type=i}function Ne(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function Oe(e){const t=e.target;t.removeEventListener("dispose",Oe),function(e){(function(e){const t=oe.get(e).programs;void 0!==t&&(t.forEach((function(e){me.releaseProgram(e)})),e.isShaderMaterial&&me.releaseShaderCache(e))})(e),oe.remove(e)}(t)}function Ue(e,t,n){!0===e.transparent&&2===e.side&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,Xe(e,t,n),e.side=0,e.needsUpdate=!0,Xe(e,t,n),e.side=2):Xe(e,t,n)}this.xr=De,this.getContext=function(){return Ce},this.getContextAttributes=function(){return Ce.getContextAttributes()},this.forceContextLoss=function(){const e=ne.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=ne.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return I},this.setPixelRatio=function(e){void 0!==e&&(I=e,this.setSize(D,L,!1))},this.getSize=function(e){return e.set(D,L)},this.setSize=function(e,n,r=!0){De.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(D=e,L=n,t.width=Math.floor(e*I),t.height=Math.floor(n*I),!0===r&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(D*I,L*I).floor()},this.setDrawingBufferSize=function(e,n,r){D=e,L=n,I=r,t.width=Math.floor(e*r),t.height=Math.floor(n*r),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(T)},this.getViewport=function(e){return e.copy(U)},this.setViewport=function(e,t,n,r){e.isVector4?U.set(e.x,e.y,e.z,e.w):U.set(e,t,n,r),ie.viewport(T.copy(U).multiplyScalar(I).round())},this.getScissor=function(e){return e.copy(F)},this.setScissor=function(e,t,n,r){e.isVector4?F.set(e.x,e.y,e.z,e.w):F.set(e,t,n,r),ie.scissor(w.copy(F).multiplyScalar(I).round())},this.getScissorTest=function(){return k},this.setScissorTest=function(e){ie.setScissorTest(k=e)},this.setOpaqueSort=function(e){N=e},this.setTransparentSort=function(e){O=e},this.getClearColor=function(e){return e.copy(ye.getClearColor())},this.setClearColor=function(){ye.setClearColor.apply(ye,arguments)},this.getClearAlpha=function(){return ye.getClearAlpha()},this.setClearAlpha=function(){ye.setClearAlpha.apply(ye,arguments)},this.clear=function(e=!0,t=!0,n=!0){let r=0;if(e){let e=!1;if(null!==S){const t=S.texture.format;e=1033===t||1031===t||1029===t}if(e){const e=S.texture.type,t=e===q||e===K||e===Z||e===ee||1017===e||1018===e,n=ye.getClearColor(),r=ye.getClearAlpha(),i=n.r,s=n.g,o=n.b;t?(d[0]=i,d[1]=s,d[2]=o,d[3]=r,Ce.clearBufferuiv(Ce.COLOR,0,d)):(p[0]=i,p[1]=s,p[2]=o,p[3]=r,Ce.clearBufferiv(Ce.COLOR,0,p))}else r|=Ce.COLOR_BUFFER_BIT}t&&(r|=Ce.DEPTH_BUFFER_BIT),n&&(r|=Ce.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),Ce.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Le,!1),t.removeEventListener("webglcontextrestored",Ie,!1),t.removeEventListener("webglcontextcreationerror",Ne,!1),ve.dispose(),xe.dispose(),oe.dispose(),le.dispose(),ce.dispose(),de.dispose(),Te.dispose(),we.dispose(),me.dispose(),De.dispose(),De.removeEventListener("sessionstart",ke),De.removeEventListener("sessionend",ze),$&&($.dispose(),$=null),Be.stop()},this.renderBufferDirect=function(e,t,n,r,i,s){null===t&&(t=W);const o=i.isMesh&&i.matrixWorld.determinant()<0,a=function(e,t,n,r,i){!0!==t.isScene&&(t=W),ae.resetTextureUnits();const s=t.fog,o=r.isMeshStandardMaterial?t.environment:null,a=null===S?_.outputColorSpace:!0===S.isXRRenderTarget?S.texture.colorSpace:fe,l=(r.isMeshStandardMaterial?ce:le).get(r.envMap||o),c=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,h=!!n.attributes.tangent&&(!!r.normalMap||r.anisotropy>0),u=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,p=!!n.morphAttributes.color;let f=0;r.toneMapped&&(null!==S&&!0!==S.isXRRenderTarget||(f=_.toneMapping));const m=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,v=void 0!==m?m.length:0,x=oe.get(r),b=g.state.lights;if(!0===B&&(!0===V||e!==A)){const t=e===A&&r.id===M;_e.setState(r,e,t)}let y=!1;r.version===x.__version?x.needsLights&&x.lightsStateVersion!==b.state.version||x.outputColorSpace!==a||i.isBatchedMesh&&!1===x.batching?y=!0:i.isBatchedMesh||!0!==x.batching?i.isInstancedMesh&&!1===x.instancing?y=!0:i.isInstancedMesh||!0!==x.instancing?i.isSkinnedMesh&&!1===x.skinning?y=!0:i.isSkinnedMesh||!0!==x.skinning?i.isInstancedMesh&&!0===x.instancingColor&&null===i.instanceColor||i.isInstancedMesh&&!1===x.instancingColor&&null!==i.instanceColor||i.isInstancedMesh&&!0===x.instancingMorph&&null===i.morphTexture||i.isInstancedMesh&&!1===x.instancingMorph&&null!==i.morphTexture||x.envMap!==l||!0===r.fog&&x.fog!==s?y=!0:void 0===x.numClippingPlanes||x.numClippingPlanes===_e.numPlanes&&x.numIntersection===_e.numIntersection?(x.vertexAlphas!==c||x.vertexTangents!==h||x.morphTargets!==u||x.morphNormals!==d||x.morphColors!==p||x.toneMapping!==f||!0===re.isWebGL2&&x.morphTargetsCount!==v)&&(y=!0):y=!0:y=!0:y=!0:y=!0:(y=!0,x.__version=r.version);let E=x.currentProgram;!0===y&&(E=Xe(r,t,i));let T=!1,w=!1,C=!1;const R=E.getUniforms(),P=x.uniforms;if(ie.useProgram(E.program)&&(T=!0,w=!0,C=!0),r.id!==M&&(M=r.id,w=!0),T||A!==e){R.setValue(Ce,"projectionMatrix",e.projectionMatrix),R.setValue(Ce,"viewMatrix",e.matrixWorldInverse);const t=R.map.cameraPosition;void 0!==t&&t.setValue(Ce,j.setFromMatrixPosition(e.matrixWorld)),re.logarithmicDepthBuffer&&R.setValue(Ce,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&R.setValue(Ce,"isOrthographic",!0===e.isOrthographicCamera),A!==e&&(A=e,w=!0,C=!0)}if(i.isSkinnedMesh){R.setOptional(Ce,i,"bindMatrix"),R.setOptional(Ce,i,"bindMatrixInverse");const e=i.skeleton;e&&(re.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),R.setValue(Ce,"boneTexture",e.boneTexture,ae)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}i.isBatchedMesh&&(R.setOptional(Ce,i,"batchingTexture"),R.setValue(Ce,"batchingTexture",i._matricesTexture,ae));const D=n.morphAttributes;var N,O;if((void 0!==D.position||void 0!==D.normal||void 0!==D.color&&!0===re.isWebGL2)&&Ee.update(i,n,E),(w||x.receiveShadow!==i.receiveShadow)&&(x.receiveShadow=i.receiveShadow,R.setValue(Ce,"receiveShadow",i.receiveShadow)),r.isMeshGouraudMaterial&&null!==r.envMap&&(P.envMap.value=l,P.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),w&&(R.setValue(Ce,"toneMappingExposure",_.toneMappingExposure),x.needsLights&&(O=C,(N=P).ambientLightColor.needsUpdate=O,N.lightProbe.needsUpdate=O,N.directionalLights.needsUpdate=O,N.directionalLightShadows.needsUpdate=O,N.pointLights.needsUpdate=O,N.pointLightShadows.needsUpdate=O,N.spotLights.needsUpdate=O,N.spotLightShadows.needsUpdate=O,N.rectAreaLights.needsUpdate=O,N.hemisphereLights.needsUpdate=O),s&&!0===r.fog&&ge.refreshFogUniforms(P,s),ge.refreshMaterialUniforms(P,r,I,L,$),Os.upload(Ce,Ye(x),P,ae)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(Os.upload(Ce,Ye(x),P,ae),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&R.setValue(Ce,"center",i.center),R.setValue(Ce,"modelViewMatrix",i.modelViewMatrix),R.setValue(Ce,"normalMatrix",i.normalMatrix),R.setValue(Ce,"modelMatrix",i.matrixWorld),r.isShaderMaterial||r.isRawShaderMaterial){const e=r.uniformsGroups;for(let t=0,n=e.length;t<n;t++)if(re.isWebGL2){const n=e[t];we.update(n,E),we.bind(n,E)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return E}(e,t,n,r,i);ie.setMaterial(r,o);let l=n.index,c=1;if(!0===r.wireframe){if(l=ue.getWireframeAttribute(n),void 0===l)return;c=2}const h=n.drawRange,u=n.attributes.position;let d=h.start*c,p=(h.start+h.count)*c;null!==s&&(d=Math.max(d,s.start*c),p=Math.min(p,(s.start+s.count)*c)),null!==l?(d=Math.max(d,0),p=Math.min(p,l.count)):null!=u&&(d=Math.max(d,0),p=Math.min(p,u.count));const f=p-d;if(f<0||f===1/0)return;let m;Te.setup(i,r,a,n,l);let v=Se;if(null!==l&&(m=he.get(l),v=Me,v.setIndex(m)),i.isMesh)!0===r.wireframe?(ie.setLineWidth(r.wireframeLinewidth*X()),v.setMode(Ce.LINES)):v.setMode(Ce.TRIANGLES);else if(i.isLine){let e=r.linewidth;void 0===e&&(e=1),ie.setLineWidth(e*X()),i.isLineSegments?v.setMode(Ce.LINES):i.isLineLoop?v.setMode(Ce.LINE_LOOP):v.setMode(Ce.LINE_STRIP)}else i.isPoints?v.setMode(Ce.POINTS):i.isSprite&&v.setMode(Ce.TRIANGLES);if(i.isBatchedMesh)v.renderMultiDraw(i._multiDrawStarts,i._multiDrawCounts,i._multiDrawCount);else if(i.isInstancedMesh)v.renderInstances(d,f,i.count);else if(n.isInstancedBufferGeometry){const e=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,t=Math.min(n.instanceCount,e);v.renderInstances(d,f,t)}else v.render(d,f)},this.compile=function(e,t,n=null){null===n&&(n=e),g=xe.get(n),g.init(),x.push(g),n.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(g.pushLight(e),e.castShadow&&g.pushShadow(e))})),e!==n&&e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(g.pushLight(e),e.castShadow&&g.pushShadow(e))})),g.setupLights(_._useLegacyLights);const r=new Set;return e.traverse((function(e){const t=e.material;if(t)if(Array.isArray(t))for(let i=0;i<t.length;i++){const s=t[i];Ue(s,n,e),r.add(s)}else Ue(t,n,e),r.add(t)})),x.pop(),g=null,r},this.compileAsync=function(e,t,n=null){const r=this.compile(e,t,n);return new Promise((t=>{function n(){r.forEach((function(e){oe.get(e).currentProgram.isReady()&&r.delete(e)})),0!==r.size?setTimeout(n,10):t(e)}null!==ne.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)}))};let Fe=null;function ke(){Be.stop()}function ze(){Be.start()}const Be=new jr;function Ve(e,t,n,r){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)g.pushLight(e),e.castShadow&&g.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||z.intersectsSprite(e)){r&&j.setFromMatrixPosition(e.matrixWorld).applyMatrix4(G);const t=de.update(e),i=e.material;i.visible&&f.push(e,t,i,n,j.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||z.intersectsObject(e))){const t=de.update(e),i=e.material;if(r&&(void 0!==e.boundingSphere?(null===e.boundingSphere&&e.computeBoundingSphere(),j.copy(e.boundingSphere.center)):(null===t.boundingSphere&&t.computeBoundingSphere(),j.copy(t.boundingSphere.center)),j.applyMatrix4(e.matrixWorld).applyMatrix4(G)),Array.isArray(i)){const r=t.groups;for(let s=0,o=r.length;s<o;s++){const o=r[s],a=i[o.materialIndex];a&&a.visible&&f.push(e,t,a,n,j.z,o)}}else i.visible&&f.push(e,t,i,n,j.z,null)}const i=e.children;for(let e=0,s=i.length;e<s;e++)Ve(i[e],t,n,r)}function Ge(e,t,n,r){const i=e.opaque,s=e.transmissive,o=e.transparent;g.setupLightsView(n),!0===B&&_e.setGlobalState(_.clippingPlanes,n),s.length>0&&function(e,t,n,r){if(null!==(!0===n.isScene?n.overrideMaterial:null))return;const i=re.isWebGL2;null===$&&($=new mt(1,1,{generateMipmaps:!0,type:ne.has("EXT_color_buffer_half_float")?Q:q,minFilter:Y,samples:i?4:0})),_.getDrawingBufferSize(H),i?$.setSize(H.x,H.y):$.setSize($e(H.x),$e(H.y));const s=_.getRenderTarget();_.setRenderTarget($),_.getClearColor(R),P=_.getClearAlpha(),P<1&&_.setClearColor(16777215,.5),_.clear();const o=_.toneMapping;_.toneMapping=0,He(e,n,r),ae.updateMultisampleRenderTarget($),ae.updateRenderTargetMipmap($);let a=!1;for(let e=0,i=t.length;e<i;e++){const i=t[e],s=i.object,o=i.geometry,l=i.material,c=i.group;if(2===l.side&&s.layers.test(r.layers)){const e=l.side;l.side=1,l.needsUpdate=!0,je(s,n,r,o,l,c),l.side=e,l.needsUpdate=!0,a=!0}}!0===a&&(ae.updateMultisampleRenderTarget($),ae.updateRenderTargetMipmap($)),_.setRenderTarget(s),_.setClearColor(R,P),_.toneMapping=o}(i,s,t,n),r&&ie.viewport(T.copy(r)),i.length>0&&He(i,t,n),s.length>0&&He(s,t,n),o.length>0&&He(o,t,n),ie.buffers.depth.setTest(!0),ie.buffers.depth.setMask(!0),ie.buffers.color.setMask(!0),ie.setPolygonOffset(!1)}function He(e,t,n){const r=!0===t.isScene?t.overrideMaterial:null;for(let i=0,s=e.length;i<s;i++){const s=e[i],o=s.object,a=s.geometry,l=null===r?s.material:r,c=s.group;o.layers.test(n.layers)&&je(o,t,n,a,l,c)}}function je(e,t,n,r,i,s){e.onBeforeRender(_,t,n,r,i,s),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),i.onBeforeRender(_,t,n,r,e,s),!0===i.transparent&&2===i.side&&!1===i.forceSinglePass?(i.side=1,i.needsUpdate=!0,_.renderBufferDirect(n,t,r,i,e,s),i.side=0,i.needsUpdate=!0,_.renderBufferDirect(n,t,r,i,e,s),i.side=2):_.renderBufferDirect(n,t,r,i,e,s),e.onAfterRender(_,t,n,r,i,s)}function Xe(e,t,n){!0!==t.isScene&&(t=W);const r=oe.get(e),i=g.state.lights,s=g.state.shadowsArray,o=i.state.version,a=me.getParameters(e,i.state,s,t,n),l=me.getProgramCacheKey(a);let c=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?ce:le).get(e.envMap||r.environment),r.envMapRotation=null!==r.environment&&null===e.envMap?t.environmentRotation:e.envMapRotation,void 0===c&&(e.addEventListener("dispose",Oe),c=new Map,r.programs=c);let h=c.get(l);if(void 0!==h){if(r.currentProgram===h&&r.lightsStateVersion===o)return qe(e,a),h}else a.uniforms=me.getUniforms(e),e.onBuild(n,a,_),e.onBeforeCompile(a,_),h=me.acquireProgram(a,l),c.set(l,h),r.uniforms=a.uniforms;const u=r.uniforms;return(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(u.clippingPlanes=_e.uniform),qe(e,a),r.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),r.lightsStateVersion=o,r.needsLights&&(u.ambientLightColor.value=i.state.ambient,u.lightProbe.value=i.state.probe,u.directionalLights.value=i.state.directional,u.directionalLightShadows.value=i.state.directionalShadow,u.spotLights.value=i.state.spot,u.spotLightShadows.value=i.state.spotShadow,u.rectAreaLights.value=i.state.rectArea,u.ltc_1.value=i.state.rectAreaLTC1,u.ltc_2.value=i.state.rectAreaLTC2,u.pointLights.value=i.state.point,u.pointLightShadows.value=i.state.pointShadow,u.hemisphereLights.value=i.state.hemi,u.directionalShadowMap.value=i.state.directionalShadowMap,u.directionalShadowMatrix.value=i.state.directionalShadowMatrix,u.spotShadowMap.value=i.state.spotShadowMap,u.spotLightMatrix.value=i.state.spotLightMatrix,u.spotLightMap.value=i.state.spotLightMap,u.pointShadowMap.value=i.state.pointShadowMap,u.pointShadowMatrix.value=i.state.pointShadowMatrix),r.currentProgram=h,r.uniformsList=null,h}function Ye(e){if(null===e.uniformsList){const t=e.currentProgram.getUniforms();e.uniformsList=Os.seqWithValue(t.seq,e.uniforms)}return e.uniformsList}function qe(e,t){const n=oe.get(e);n.outputColorSpace=t.outputColorSpace,n.batching=t.batching,n.instancing=t.instancing,n.instancingColor=t.instancingColor,n.instancingMorph=t.instancingMorph,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}Be.setAnimationLoop((function(e){Fe&&Fe(e)})),"undefined"!=typeof self&&Be.setContext(self),this.setAnimationLoop=function(e){Fe=e,De.setAnimationLoop(e),null===e?Be.stop():Be.start()},De.addEventListener("sessionstart",ke),De.addEventListener("sessionend",ze),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===b)return;!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===De.enabled&&!0===De.isPresenting&&(!0===De.cameraAutoUpdate&&De.updateCamera(t),t=De.getCamera()),!0===e.isScene&&e.onBeforeRender(_,e,t,S),g=xe.get(e,x.length),g.init(),x.push(g),G.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),z.setFromProjectionMatrix(G),V=this.localClippingEnabled,B=_e.init(this.clippingPlanes,V),f=ve.get(e,v.length),f.init(),v.push(f),Ve(e,t,0,_.sortObjects),f.finish(),!0===_.sortObjects&&f.sort(N,O),this.info.render.frame++,!0===B&&_e.beginShadows();const n=g.state.shadowsArray;if(be.render(n,e,t),!0===B&&_e.endShadows(),!0===this.info.autoReset&&this.info.reset(),!1!==De.enabled&&!1!==De.isPresenting&&!1!==De.hasDepthSensing()||ye.render(f,e),g.setupLights(_._useLegacyLights),t.isArrayCamera){const n=t.cameras;for(let t=0,r=n.length;t<r;t++){const r=n[t];Ge(f,e,r,r.viewport)}}else Ge(f,e,t);null!==S&&(ae.updateMultisampleRenderTarget(S),ae.updateRenderTargetMipmap(S)),!0===e.isScene&&e.onAfterRender(_,e,t),Te.resetDefaultState(),M=-1,A=null,x.pop(),g=x.length>0?x[x.length-1]:null,v.pop(),f=v.length>0?v[v.length-1]:null},this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return E},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(e,t,n){oe.get(e.texture).__webglTexture=t,oe.get(e.depthTexture).__webglTexture=n;const r=oe.get(e);r.__hasExternalTextures=!0,r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||!0===ne.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(e,t){const n=oe.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,n=0){S=e,y=t,E=n;let r=!0,i=null,s=!1,o=!1;if(e){const a=oe.get(e);void 0!==a.__useDefaultFramebuffer?(ie.bindFramebuffer(Ce.FRAMEBUFFER,null),r=!1):void 0===a.__webglFramebuffer?ae.setupRenderTarget(e):a.__hasExternalTextures&&ae.rebindTextures(e,oe.get(e.texture).__webglTexture,oe.get(e.depthTexture).__webglTexture);const l=e.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(o=!0);const c=oe.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(i=Array.isArray(c[t])?c[t][n]:c[t],s=!0):i=re.isWebGL2&&e.samples>0&&!1===ae.useMultisampledRTT(e)?oe.get(e).__webglMultisampledFramebuffer:Array.isArray(c)?c[n]:c,T.copy(e.viewport),w.copy(e.scissor),C=e.scissorTest}else T.copy(U).multiplyScalar(I).floor(),w.copy(F).multiplyScalar(I).floor(),C=k;if(ie.bindFramebuffer(Ce.FRAMEBUFFER,i)&&re.drawBuffers&&r&&ie.drawBuffers(e,i),ie.viewport(T),ie.scissor(w),ie.setScissorTest(C),s){const r=oe.get(e.texture);Ce.framebufferTexture2D(Ce.FRAMEBUFFER,Ce.COLOR_ATTACHMENT0,Ce.TEXTURE_CUBE_MAP_POSITIVE_X+t,r.__webglTexture,n)}else if(o){const r=oe.get(e.texture),i=t||0;Ce.framebufferTextureLayer(Ce.FRAMEBUFFER,Ce.COLOR_ATTACHMENT0,r.__webglTexture,n||0,i)}M=-1},this.readRenderTargetPixels=function(e,t,n,r,i,s,o){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let a=oe.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(a=a[o]),a){ie.bindFramebuffer(Ce.FRAMEBUFFER,a);try{const o=e.texture,a=o.format,l=o.type;if(a!==te&&Ae.convert(a)!==Ce.getParameter(Ce.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const c=l===Q&&(ne.has("EXT_color_buffer_half_float")||re.isWebGL2&&ne.has("EXT_color_buffer_float"));if(!(l===q||Ae.convert(l)===Ce.getParameter(Ce.IMPLEMENTATION_COLOR_READ_TYPE)||l===J&&(re.isWebGL2||ne.has("OES_texture_float")||ne.has("WEBGL_color_buffer_float"))||c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-r&&n>=0&&n<=e.height-i&&Ce.readPixels(t,n,r,i,Ae.convert(a),Ae.convert(l),s)}finally{const e=null!==S?oe.get(S).__webglFramebuffer:null;ie.bindFramebuffer(Ce.FRAMEBUFFER,e)}}},this.copyFramebufferToTexture=function(e,t,n=0){const r=Math.pow(2,-n),i=Math.floor(t.image.width*r),s=Math.floor(t.image.height*r);ae.setTexture2D(t,0),Ce.copyTexSubImage2D(Ce.TEXTURE_2D,n,0,0,e.x,e.y,i,s),ie.unbindTexture()},this.copyTextureToTexture=function(e,t,n,r=0){const i=t.image.width,s=t.image.height,o=Ae.convert(n.format),a=Ae.convert(n.type);ae.setTexture2D(n,0),Ce.pixelStorei(Ce.UNPACK_FLIP_Y_WEBGL,n.flipY),Ce.pixelStorei(Ce.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),Ce.pixelStorei(Ce.UNPACK_ALIGNMENT,n.unpackAlignment),t.isDataTexture?Ce.texSubImage2D(Ce.TEXTURE_2D,r,e.x,e.y,i,s,o,a,t.image.data):t.isCompressedTexture?Ce.compressedTexSubImage2D(Ce.TEXTURE_2D,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):Ce.texSubImage2D(Ce.TEXTURE_2D,r,e.x,e.y,o,a,t.image),0===r&&n.generateMipmaps&&Ce.generateMipmap(Ce.TEXTURE_2D),ie.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,r,i=0){if(_.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const s=Math.round(e.max.x-e.min.x),o=Math.round(e.max.y-e.min.y),a=e.max.z-e.min.z+1,l=Ae.convert(r.format),c=Ae.convert(r.type);let h;if(r.isData3DTexture)ae.setTexture3D(r,0),h=Ce.TEXTURE_3D;else{if(!r.isDataArrayTexture&&!r.isCompressedArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");ae.setTexture2DArray(r,0),h=Ce.TEXTURE_2D_ARRAY}Ce.pixelStorei(Ce.UNPACK_FLIP_Y_WEBGL,r.flipY),Ce.pixelStorei(Ce.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),Ce.pixelStorei(Ce.UNPACK_ALIGNMENT,r.unpackAlignment);const u=Ce.getParameter(Ce.UNPACK_ROW_LENGTH),d=Ce.getParameter(Ce.UNPACK_IMAGE_HEIGHT),p=Ce.getParameter(Ce.UNPACK_SKIP_PIXELS),f=Ce.getParameter(Ce.UNPACK_SKIP_ROWS),m=Ce.getParameter(Ce.UNPACK_SKIP_IMAGES),g=n.isCompressedTexture?n.mipmaps[i]:n.image;Ce.pixelStorei(Ce.UNPACK_ROW_LENGTH,g.width),Ce.pixelStorei(Ce.UNPACK_IMAGE_HEIGHT,g.height),Ce.pixelStorei(Ce.UNPACK_SKIP_PIXELS,e.min.x),Ce.pixelStorei(Ce.UNPACK_SKIP_ROWS,e.min.y),Ce.pixelStorei(Ce.UNPACK_SKIP_IMAGES,e.min.z),n.isDataTexture||n.isData3DTexture?Ce.texSubImage3D(h,i,t.x,t.y,t.z,s,o,a,l,c,g.data):r.isCompressedArrayTexture?Ce.compressedTexSubImage3D(h,i,t.x,t.y,t.z,s,o,a,l,g.data):Ce.texSubImage3D(h,i,t.x,t.y,t.z,s,o,a,l,c,g),Ce.pixelStorei(Ce.UNPACK_ROW_LENGTH,u),Ce.pixelStorei(Ce.UNPACK_IMAGE_HEIGHT,d),Ce.pixelStorei(Ce.UNPACK_SKIP_PIXELS,p),Ce.pixelStorei(Ce.UNPACK_SKIP_ROWS,f),Ce.pixelStorei(Ce.UNPACK_SKIP_IMAGES,m),0===i&&r.generateMipmaps&&Ce.generateMipmap(h),ie.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?ae.setTextureCube(e,0):e.isData3DTexture?ae.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?ae.setTexture2DArray(e,0):ae.setTexture2D(e,0),ie.unbindTexture()},this.resetState=function(){y=0,E=0,S=null,ie.reset(),Te.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Le}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===me?"display-p3":"srgb",t.unpackColorSpace=rt.workingColorSpace===ge?"display-p3":"srgb"}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}(class extends Do{}).prototype.isWebGL1Renderer=!0;class Lo extends Sn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new on,this.environmentRotation=new on,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentRotation.copy(e.environmentRotation),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class Io extends $n{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new zn(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const No=new _t,Oo=new _t,Uo=new qt,Fo=new Yt,ko=new Bt;class zo extends Sn{constructor(e=new rr,t=new Io){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,r=t.count;e<r;e++)No.fromBufferAttribute(t,e-1),Oo.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=No.distanceTo(Oo);e.setAttribute("lineDistance",new qn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,i=e.params.Line.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),ko.copy(n.boundingSphere),ko.applyMatrix4(r),ko.radius+=i,!1===e.ray.intersectsSphere(ko))return;Uo.copy(r).invert(),Fo.copy(e.ray).applyMatrix4(Uo);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o,l=new _t,c=new _t,h=new _t,u=new _t,d=this.isLineSegments?2:1,p=n.index,f=n.attributes.position;if(null!==p)for(let n=Math.max(0,s.start),r=Math.min(p.count,s.start+s.count)-1;n<r;n+=d){const r=p.getX(n),i=p.getX(n+1);if(l.fromBufferAttribute(f,r),c.fromBufferAttribute(f,i),Fo.distanceSqToSegment(l,c,u,h)>a)continue;u.applyMatrix4(this.matrixWorld);const s=e.ray.origin.distanceTo(u);s<e.near||s>e.far||t.push({distance:s,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,s.start),r=Math.min(f.count,s.start+s.count)-1;n<r;n+=d){if(l.fromBufferAttribute(f,n),c.fromBufferAttribute(f,n+1),Fo.distanceSqToSegment(l,c,u,h)>a)continue;u.applyMatrix4(this.matrixWorld);const r=e.ray.origin.distanceTo(u);r<e.near||r>e.far||t.push({distance:r,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}const Bo=new _t,Vo=new _t;class $o extends zo{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[];for(let e=0,r=t.count;e<r;e+=2)Bo.fromBufferAttribute(t,e),Vo.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+Bo.distanceTo(Vo);e.setAttribute("lineDistance",new qn(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Go extends $n{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new zn(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Ho=new qt,jo=new Yt,Wo=new Bt,Xo=new _t;class Yo extends Sn{constructor(e=new rr,t=new Go){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,i=e.params.Points.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Wo.copy(n.boundingSphere),Wo.applyMatrix4(r),Wo.radius+=i,!1===e.ray.intersectsSphere(Wo))return;Ho.copy(r).invert(),jo.copy(e.ray).applyMatrix4(Ho);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o,l=n.index,c=n.attributes.position;if(null!==l)for(let n=Math.max(0,s.start),i=Math.min(l.count,s.start+s.count);n<i;n++){const i=l.getX(n);Xo.fromBufferAttribute(c,i),qo(Xo,i,a,r,e,t,this)}else for(let n=Math.max(0,s.start),i=Math.min(c.count,s.start+s.count);n<i;n++)Xo.fromBufferAttribute(c,n),qo(Xo,n,a,r,e,t,this)}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}function qo(e,t,n,r,i,s,o){const a=jo.distanceSqToPoint(e);if(a<n){const n=new _t;jo.closestPointToPoint(e,n),n.applyMatrix4(r);const l=i.ray.origin.distanceTo(n);if(l<i.near||l>i.far)return;s.push({distance:l,distanceToRay:Math.sqrt(a),point:n,index:t,face:null,object:o})}}class Zo extends rr{constructor(e=1,t=1,n=1,r=32,i=1,s=!1,o=0,a=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a};const l=this;r=Math.floor(r),i=Math.floor(i);const c=[],h=[],u=[],d=[];let p=0;const f=[],m=n/2;let g=0;function v(n){const i=p,s=new We,f=new _t;let v=0;const x=!0===n?e:t,_=!0===n?1:-1;for(let e=1;e<=r;e++)h.push(0,m*_,0),u.push(0,_,0),d.push(.5,.5),p++;const b=p;for(let e=0;e<=r;e++){const t=e/r*a+o,n=Math.cos(t),i=Math.sin(t);f.x=x*i,f.y=m*_,f.z=x*n,h.push(f.x,f.y,f.z),u.push(0,_,0),s.x=.5*n+.5,s.y=.5*i*_+.5,d.push(s.x,s.y),p++}for(let e=0;e<r;e++){const t=i+e,r=b+e;!0===n?c.push(r,r+1,t):c.push(r+1,r,t),v+=3}l.addGroup(g,v,!0===n?1:2),g+=v}!function(){const s=new _t,v=new _t;let x=0;const _=(t-e)/n;for(let l=0;l<=i;l++){const c=[],g=l/i,x=g*(t-e)+e;for(let e=0;e<=r;e++){const t=e/r,i=t*a+o,l=Math.sin(i),f=Math.cos(i);v.x=x*l,v.y=-g*n+m,v.z=x*f,h.push(v.x,v.y,v.z),s.set(l,_,f).normalize(),u.push(s.x,s.y,s.z),d.push(t,1-g),c.push(p++)}f.push(c)}for(let e=0;e<r;e++)for(let t=0;t<i;t++){const n=f[t][e],r=f[t+1][e],i=f[t+1][e+1],s=f[t][e+1];c.push(n,r,s),c.push(r,i,s),x+=6}l.addGroup(g,x,0),g+=x}(),!1===s&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(c),this.setAttribute("position",new qn(h,3)),this.setAttribute("normal",new qn(u,3)),this.setAttribute("uv",new qn(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Zo(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ko extends $n{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new zn(16777215),this.specular=new zn(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new zn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new We(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new on,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}function Jo(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)}class Qo{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,r=t[n],i=t[n-1];e:{t:{let s;n:{r:if(!(e<r)){for(let s=n+2;;){if(void 0===r){if(e<i)break r;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===s)break;if(i=r,r=t[++n],e<r)break t}s=t.length;break n}if(e>=i)break e;{const o=t[1];e<o&&(n=2,i=o);for(let s=n-2;;){if(void 0===i)return this._cachedIndex=0,this.copySampleValue_(0);if(n===s)break;if(r=i,i=t[--n-1],e>=i)break t}s=n,n=0}}for(;n<s;){const r=n+s>>>1;e<t[r]?s=r:n=r+1}if(r=t[n],i=t[n-1],void 0===i)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===r)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r;for(let e=0;e!==r;++e)t[e]=n[i+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class ea extends Qo{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,n){const r=this.parameterPositions;let i=e-2,s=e+1,o=r[i],a=r[s];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:i=e,o=2*t-n;break;case 2402:i=r.length-2,o=t+r[i]-r[i+1];break;default:i=e,o=n}if(void 0===a)switch(this.getSettings_().endingEnd){case 2401:s=e,a=2*n-t;break;case 2402:s=1,a=n+r[1]-r[0];break;default:s=e-1,a=t}const l=.5*(n-t),c=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(a-n),this._offsetPrev=i*c,this._offsetNext=s*c}interpolate_(e,t,n,r){const i=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,l=a-o,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,x=(-1-d)*m+(1.5+d)*f+.5*p,_=d*m-d*f;for(let e=0;e!==o;++e)i[e]=g*s[c+e]+v*s[l+e]+x*s[a+e]+_*s[h+e];return i}}class ta extends Qo{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const i=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,l=a-o,c=(n-t)/(r-t),h=1-c;for(let e=0;e!==o;++e)i[e]=s[l+e]*h+s[a+e]*c;return i}}class na extends Qo{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class ra{constructor(e,t,n,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Jo(t,this.TimeBufferType),this.values=Jo(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Jo(e.times,Array),values:Jo(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new na(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new ta(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new ea(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case ce:t=this.InterpolantFactoryMethodDiscrete;break;case he:t=this.InterpolantFactoryMethodLinear;break;case ue:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ce;case this.InterpolantFactoryMethodLinear:return he;case this.InterpolantFactoryMethodSmooth:return ue}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this}trim(e,t){const n=this.times,r=n.length;let i=0,s=r-1;for(;i!==r&&n[i]<e;)++i;for(;-1!==s&&n[s]>t;)--s;if(++s,0!==i||s!==r){i>=s&&(s=Math.max(s,1),i=s-1);const e=this.getValueSize();this.times=n.slice(i,s),this.values=this.values.slice(i*e,s*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let t=0;t!==i;t++){const r=n[t];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,r),e=!1;break}if(null!==s&&s>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,r,s),e=!1;break}s=r}if(void 0!==r&&(o=r,ArrayBuffer.isView(o)&&!(o instanceof DataView)))for(let t=0,n=r.length;t!==n;++t){const n=r[t];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,n),e=!1;break}}var o;return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),r=this.getInterpolation()===ue,i=e.length-1;let s=1;for(let o=1;o<i;++o){let i=!1;const a=e[o];if(a!==e[o+1]&&(1!==o||a!==e[0]))if(r)i=!0;else{const e=o*n,r=e-n,s=e+n;for(let o=0;o!==n;++o){const n=t[e+o];if(n!==t[r+o]||n!==t[s+o]){i=!0;break}}}if(i){if(o!==s){e[s]=e[o];const r=o*n,i=s*n;for(let e=0;e!==n;++e)t[i+e]=t[r+e]}++s}}if(i>0){e[s]=e[i];for(let e=i*n,r=s*n,o=0;o!==n;++o)t[r+o]=t[e+o];++s}return s!==e.length?(this.times=e.slice(0,s),this.values=t.slice(0,s*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}ra.prototype.TimeBufferType=Float32Array,ra.prototype.ValueBufferType=Float32Array,ra.prototype.DefaultInterpolation=he;class ia extends ra{}ia.prototype.ValueTypeName="bool",ia.prototype.ValueBufferType=Array,ia.prototype.DefaultInterpolation=ce,ia.prototype.InterpolantFactoryMethodLinear=void 0,ia.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends ra{}).prototype.ValueTypeName="color";(class extends ra{}).prototype.ValueTypeName="number";class sa extends Qo{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const i=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(n-t)/(r-t);let l=e*o;for(let e=l+o;l!==e;l+=4)xt.slerpFlat(i,0,s,l-o,s,l,a);return i}}class oa extends ra{InterpolantFactoryMethodLinear(e){return new sa(this.times,this.values,this.getValueSize(),e)}}oa.prototype.ValueTypeName="quaternion",oa.prototype.DefaultInterpolation=he,oa.prototype.InterpolantFactoryMethodSmooth=void 0;class aa extends ra{}aa.prototype.ValueTypeName="string",aa.prototype.ValueBufferType=Array,aa.prototype.DefaultInterpolation=ce,aa.prototype.InterpolantFactoryMethodLinear=void 0,aa.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends ra{}).prototype.ValueTypeName="vector";const la={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class ca{constructor(e,t,n){const r=this;let i,s=!1,o=0,a=0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){a++,!1===s&&void 0!==r.onStart&&r.onStart(e,o,a),s=!0},this.itemEnd=function(e){o++,void 0!==r.onProgress&&r.onProgress(e,o,a),o===a&&(s=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return i?i(e):e},this.setURLModifier=function(e){return i=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=l.length;t<n;t+=2){const n=l[t],r=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return r}return null}}}const ha=new ca;class ua{constructor(e){this.manager=void 0!==e?e:ha,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise((function(r,i){n.load(e,r,t,i)}))}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}ua.DEFAULT_MATERIAL_NAME="__DEFAULT";const da={};class pa extends Error{constructor(e,t){super(e),this.response=t}}class fa extends ua{constructor(e){super(e)}load(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=la.get(e);if(void 0!==i)return this.manager.itemStart(e),setTimeout((()=>{t&&t(i),this.manager.itemEnd(e)}),0),i;if(void 0!==da[e])return void da[e].push({onLoad:t,onProgress:n,onError:r});da[e]=[],da[e].push({onLoad:t,onProgress:n,onError:r});const s=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,a=this.responseType;fetch(s).then((t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;const n=da[e],r=t.body.getReader(),i=t.headers.get("Content-Length")||t.headers.get("X-File-Size"),s=i?parseInt(i):0,o=0!==s;let a=0;const l=new ReadableStream({start(e){!function t(){r.read().then((({done:r,value:i})=>{if(r)e.close();else{a+=i.byteLength;const r=new ProgressEvent("progress",{lengthComputable:o,loaded:a,total:s});for(let e=0,t=n.length;e<t;e++){const t=n[e];t.onProgress&&t.onProgress(r)}e.enqueue(i),t()}}))}()}});return new Response(l)}throw new pa(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)})).then((e=>{switch(a){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then((e=>(new DOMParser).parseFromString(e,o)));case"json":return e.json();default:if(void 0===o)return e.text();{const t=/charset="?([^;"\s]*)"?/i.exec(o),n=t&&t[1]?t[1].toLowerCase():void 0,r=new TextDecoder(n);return e.arrayBuffer().then((e=>r.decode(e)))}}})).then((t=>{la.add(e,t);const n=da[e];delete da[e];for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onLoad&&r.onLoad(t)}})).catch((t=>{const n=da[e];if(void 0===n)throw this.manager.itemError(e),t;delete da[e];for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onError&&r.onError(t)}this.manager.itemError(e)})).finally((()=>{this.manager.itemEnd(e)})),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class ma extends Sn{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new zn(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}const ga=new qt,va=new _t,xa=new _t;class _a{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new We(512,512),this.map=null,this.mapPass=null,this.matrix=new qt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Hr,this._frameExtents=new We(1,1),this._viewportCount=1,this._viewports=[new pt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;va.setFromMatrixPosition(e.matrixWorld),t.position.copy(va),xa.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(xa),t.updateMatrixWorld(),ga.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ga),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(ga)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class ba extends _a{constructor(){super(new oi(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ya extends ma{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Sn.DEFAULT_UP),this.updateMatrix(),this.target=new Sn,this.shadow=new ba}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Ea extends ma{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}const Sa="\\[\\]\\.:\\/",Ma=new RegExp("["+Sa+"]","g"),Aa="[^"+Sa+"]",Ta="[^"+Sa.replace("\\.","")+"]",wa=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Aa)+/(WCOD+)?/.source.replace("WCOD",Ta)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Aa)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Aa)+"$"),Ca=["material","materials","bones","map"];class Ra{constructor(e,t,n){this.path=t,this.parsedPath=n||Ra.parseTrackName(t),this.node=Ra.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Ra.Composite(e,t,n):new Ra(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Ma,"")}static parseTrackName(e){const t=wa.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const e=n.nodeName.substring(r+1);-1!==Ca.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let r=0;r<e.length;r++){const i=e[r];if(i.name===t||i.uuid===t)return i;const s=n(i.children);if(s)return s}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)e[t++]=n[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,r=t.propertyName;let i=t.propertyIndex;if(e||(e=Ra.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(n){let r=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===r){r=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);e=e.material.map;break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==r){if(void 0===e[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[r]}}const s=e[r];if(void 0===s){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",e)}let o=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ra.Composite=class{constructor(e,t,n){const r=n||Ra.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},Ra.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Ra.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Ra.prototype.GetterByBindingType=[Ra.prototype._getValue_direct,Ra.prototype._getValue_array,Ra.prototype._getValue_arrayElement,Ra.prototype._getValue_toArray],Ra.prototype.SetterByBindingTypeAndVersioning=[[Ra.prototype._setValue_direct,Ra.prototype._setValue_direct_setNeedsUpdate,Ra.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ra.prototype._setValue_array,Ra.prototype._setValue_array_setNeedsUpdate,Ra.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ra.prototype._setValue_arrayElement,Ra.prototype._setValue_arrayElement_setNeedsUpdate,Ra.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ra.prototype._setValue_fromArray,Ra.prototype._setValue_fromArray_setNeedsUpdate,Ra.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1);const Pa=new qt;class Da{constructor(e,t,n=0,r=1/0){this.ray=new Yt(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new an,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Pa.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Pa),this}intersectObject(e,t=!0,n=[]){return Ia(e,this,n,t),n.sort(La),n}intersectObjects(e,t=!0,n=[]){for(let r=0,i=e.length;r<i;r++)Ia(e[r],this,n,t);return n.sort(La),n}}function La(e,t){return e.distance-t.distance}function Ia(e,t,n,r){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===r){const r=e.children;for(let e=0,i=r.length;e<i;e++)Ia(r[e],t,n,!0)}}class Na{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(ze(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class Oa extends $o{constructor(e=10,t=10,n=4473924,r=8947848){n=new zn(n),r=new zn(r);const i=t/2,s=e/t,o=e/2,a=[],l=[];for(let e=0,c=0,h=-o;e<=t;e++,h+=s){a.push(-o,0,h,o,0,h),a.push(h,0,-o,h,0,o);const t=e===i?n:r;t.toArray(l,c),c+=3,t.toArray(l,c),c+=3,t.toArray(l,c),c+=3,t.toArray(l,c),c+=3}const c=new rr;c.setAttribute("position",new qn(a,3)),c.setAttribute("color",new qn(l,3)),super(c,new Io({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ua extends $o{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=new rr;n.setAttribute("position",new qn(t,3)),n.setAttribute("color",new qn([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(n,new Io({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(e,t,n){const r=new zn,i=this.geometry.attributes.color.array;return r.set(e),r.toArray(i,0),r.toArray(i,3),r.set(t),r.toArray(i,6),r.toArray(i,9),r.set(n),r.toArray(i,12),r.toArray(i,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:m}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=m);const Fa={type:"change"},ka={type:"start"},za={type:"end"},Ba=new Yt,Va=new Vr,$a=Math.cos(70*je);class Ga extends Ne{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new _t,this.cursor=new _t,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:0,MIDDLE:1,RIGHT:2},this.touches={ONE:0,TWO:2},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",q),this._domElementKeyEvents=e},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",q),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Fa),n.update(),i=r.NONE},this.update=function(){const t=new _t,h=(new xt).setFromUnitVectors(e.up,new _t(0,1,0)),u=h.clone().invert(),d=new _t,p=new xt,f=new _t,m=2*Math.PI;return function(g=null){const v=n.object.position;t.copy(v).sub(n.target),t.applyQuaternion(h),o.setFromVector3(t),n.autoRotate&&i===r.NONE&&T(function(e){return null!==e?2*Math.PI/60*n.autoRotateSpeed*e:2*Math.PI/60/60*n.autoRotateSpeed}(g)),n.enableDamping?(o.theta+=a.theta*n.dampingFactor,o.phi+=a.phi*n.dampingFactor):(o.theta+=a.theta,o.phi+=a.phi);let x=n.minAzimuthAngle,E=n.maxAzimuthAngle;isFinite(x)&&isFinite(E)&&(x<-Math.PI?x+=m:x>Math.PI&&(x-=m),E<-Math.PI?E+=m:E>Math.PI&&(E-=m),o.theta=x<=E?Math.max(x,Math.min(E,o.theta)):o.theta>(x+E)/2?Math.max(x,o.theta):Math.min(E,o.theta)),o.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,o.phi)),o.makeSafe(),!0===n.enableDamping?n.target.addScaledVector(c,n.dampingFactor):n.target.add(c),n.target.sub(n.cursor),n.target.clampLength(n.minTargetRadius,n.maxTargetRadius),n.target.add(n.cursor);let S=!1;if(n.zoomToCursor&&y||n.object.isOrthographicCamera)o.radius=N(o.radius);else{const e=o.radius;o.radius=N(o.radius*l),S=e!=o.radius}if(t.setFromSpherical(o),t.applyQuaternion(u),v.copy(n.target).add(t),n.object.lookAt(n.target),!0===n.enableDamping?(a.theta*=1-n.dampingFactor,a.phi*=1-n.dampingFactor,c.multiplyScalar(1-n.dampingFactor)):(a.set(0,0,0),c.set(0,0,0)),n.zoomToCursor&&y){let r=null;if(n.object.isPerspectiveCamera){const e=t.length();r=N(e*l);const i=e-r;n.object.position.addScaledVector(_,i),n.object.updateMatrixWorld(),S=!!i}else if(n.object.isOrthographicCamera){const e=new _t(b.x,b.y,0);e.unproject(n.object);const i=n.object.zoom;n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/l)),n.object.updateProjectionMatrix(),S=i!==n.object.zoom;const s=new _t(b.x,b.y,0);s.unproject(n.object),n.object.position.sub(s).add(e),n.object.updateMatrixWorld(),r=t.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;null!==r&&(this.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(r).add(n.object.position):(Ba.origin.copy(n.object.position),Ba.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(Ba.direction))<$a?e.lookAt(n.target):(Va.setFromNormalAndCoplanarPoint(n.object.up,n.target),Ba.intersectPlane(Va,n.target))))}else if(n.object.isOrthographicCamera){const e=n.object.zoom;n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/l)),e!==n.object.zoom&&(n.object.updateProjectionMatrix(),S=!0)}return l=1,y=!1,!!(S||d.distanceToSquared(n.object.position)>s||8*(1-p.dot(n.object.quaternion))>s||f.distanceToSquared(n.target)>s)&&(n.dispatchEvent(Fa),d.copy(n.object.position),p.copy(n.object.quaternion),f.copy(n.target),!0)}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",K),n.domElement.removeEventListener("pointerdown",G),n.domElement.removeEventListener("pointercancel",j),n.domElement.removeEventListener("wheel",W),n.domElement.removeEventListener("pointermove",H),n.domElement.removeEventListener("pointerup",j),n.domElement.getRootNode().removeEventListener("keydown",X,{capture:!0}),null!==n._domElementKeyEvents&&(n._domElementKeyEvents.removeEventListener("keydown",q),n._domElementKeyEvents=null)};const n=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let i=r.NONE;const s=1e-6,o=new Na,a=new Na;let l=1;const c=new _t,h=new We,u=new We,d=new We,p=new We,f=new We,m=new We,g=new We,v=new We,x=new We,_=new _t,b=new We;let y=!1;const E=[],S={};let M=!1;function A(e){const t=Math.abs(.01*e);return Math.pow(.95,n.zoomSpeed*t)}function T(e){a.theta-=e}function w(e){a.phi-=e}const C=function(){const e=new _t;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),c.add(e)}}(),R=function(){const e=new _t;return function(t,r){!0===n.screenSpacePanning?e.setFromMatrixColumn(r,1):(e.setFromMatrixColumn(r,0),e.crossVectors(n.object.up,e)),e.multiplyScalar(t),c.add(e)}}(),P=function(){const e=new _t;return function(t,r){const i=n.domElement;if(n.object.isPerspectiveCamera){const s=n.object.position;e.copy(s).sub(n.target);let o=e.length();o*=Math.tan(n.object.fov/2*Math.PI/180),C(2*t*o/i.clientHeight,n.object.matrix),R(2*r*o/i.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(C(t*(n.object.right-n.object.left)/n.object.zoom/i.clientWidth,n.object.matrix),R(r*(n.object.top-n.object.bottom)/n.object.zoom/i.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function D(e){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?l/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function L(e){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?l*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function I(e,t){if(!n.zoomToCursor)return;y=!0;const r=n.domElement.getBoundingClientRect(),i=e-r.left,s=t-r.top,o=r.width,a=r.height;b.x=i/o*2-1,b.y=-s/a*2+1,_.set(b.x,b.y,1).unproject(n.object).sub(n.object.position).normalize()}function N(e){return Math.max(n.minDistance,Math.min(n.maxDistance,e))}function O(e){h.set(e.clientX,e.clientY)}function U(e){p.set(e.clientX,e.clientY)}function F(e){if(1===E.length)h.set(e.pageX,e.pageY);else{const t=Q(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);h.set(n,r)}}function k(e){if(1===E.length)p.set(e.pageX,e.pageY);else{const t=Q(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);p.set(n,r)}}function z(e){const t=Q(e),n=e.pageX-t.x,r=e.pageY-t.y,i=Math.sqrt(n*n+r*r);g.set(0,i)}function B(e){if(1==E.length)u.set(e.pageX,e.pageY);else{const t=Q(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);u.set(n,r)}d.subVectors(u,h).multiplyScalar(n.rotateSpeed);const t=n.domElement;T(2*Math.PI*d.x/t.clientHeight),w(2*Math.PI*d.y/t.clientHeight),h.copy(u)}function V(e){if(1===E.length)f.set(e.pageX,e.pageY);else{const t=Q(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);f.set(n,r)}m.subVectors(f,p).multiplyScalar(n.panSpeed),P(m.x,m.y),p.copy(f)}function $(e){const t=Q(e),r=e.pageX-t.x,i=e.pageY-t.y,s=Math.sqrt(r*r+i*i);v.set(0,s),x.set(0,Math.pow(v.y/g.y,n.zoomSpeed)),D(x.y),g.copy(v),I(.5*(e.pageX+t.x),.5*(e.pageY+t.y))}function G(e){!1!==n.enabled&&(0===E.length&&(n.domElement.setPointerCapture(e.pointerId),n.domElement.addEventListener("pointermove",H),n.domElement.addEventListener("pointerup",j)),function(e){for(let t=0;t<E.length;t++)if(E[t]==e.pointerId)return!0;return!1}(e)||(function(e){E.push(e.pointerId)}(e),"touch"===e.pointerType?Z(e):function(e){let t;switch(e.button){case 0:t=n.mouseButtons.LEFT;break;case 1:t=n.mouseButtons.MIDDLE;break;case 2:t=n.mouseButtons.RIGHT;break;default:t=-1}switch(t){case 1:if(!1===n.enableZoom)return;!function(e){I(e.clientX,e.clientX),g.set(e.clientX,e.clientY)}(e),i=r.DOLLY;break;case 0:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enablePan)return;U(e),i=r.PAN}else{if(!1===n.enableRotate)return;O(e),i=r.ROTATE}break;case 2:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enableRotate)return;O(e),i=r.ROTATE}else{if(!1===n.enablePan)return;U(e),i=r.PAN}break;default:i=r.NONE}i!==r.NONE&&n.dispatchEvent(ka)}(e)))}function H(e){!1!==n.enabled&&("touch"===e.pointerType?function(e){switch(J(e),i){case r.TOUCH_ROTATE:if(!1===n.enableRotate)return;B(e),n.update();break;case r.TOUCH_PAN:if(!1===n.enablePan)return;V(e),n.update();break;case r.TOUCH_DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;!function(e){n.enableZoom&&$(e),n.enablePan&&V(e)}(e),n.update();break;case r.TOUCH_DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;!function(e){n.enableZoom&&$(e),n.enableRotate&&B(e)}(e),n.update();break;default:i=r.NONE}}(e):function(e){switch(i){case r.ROTATE:if(!1===n.enableRotate)return;!function(e){u.set(e.clientX,e.clientY),d.subVectors(u,h).multiplyScalar(n.rotateSpeed);const t=n.domElement;T(2*Math.PI*d.x/t.clientHeight),w(2*Math.PI*d.y/t.clientHeight),h.copy(u),n.update()}(e);break;case r.DOLLY:if(!1===n.enableZoom)return;!function(e){v.set(e.clientX,e.clientY),x.subVectors(v,g),x.y>0?D(A(x.y)):x.y<0&&L(A(x.y)),g.copy(v),n.update()}(e);break;case r.PAN:if(!1===n.enablePan)return;!function(e){f.set(e.clientX,e.clientY),m.subVectors(f,p).multiplyScalar(n.panSpeed),P(m.x,m.y),p.copy(f),n.update()}(e)}}(e))}function j(e){switch(function(e){delete S[e.pointerId];for(let t=0;t<E.length;t++)if(E[t]==e.pointerId)return void E.splice(t,1)}(e),E.length){case 0:n.domElement.releasePointerCapture(e.pointerId),n.domElement.removeEventListener("pointermove",H),n.domElement.removeEventListener("pointerup",j),n.dispatchEvent(za),i=r.NONE;break;case 1:const t=E[0],s=S[t];Z({pointerId:t,pageX:s.x,pageY:s.y})}}function W(e){!1!==n.enabled&&!1!==n.enableZoom&&i===r.NONE&&(e.preventDefault(),n.dispatchEvent(ka),function(e){I(e.clientX,e.clientY),e.deltaY<0?L(A(e.deltaY)):e.deltaY>0&&D(A(e.deltaY)),n.update()}(function(e){const t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100}return e.ctrlKey&&!M&&(n.deltaY*=10),n}(e)),n.dispatchEvent(za))}function X(e){"Control"===e.key&&(M=!0,n.domElement.getRootNode().addEventListener("keyup",Y,{passive:!0,capture:!0}))}function Y(e){"Control"===e.key&&(M=!1,n.domElement.getRootNode().removeEventListener("keyup",Y,{passive:!0,capture:!0}))}function q(e){!1!==n.enabled&&!1!==n.enablePan&&function(e){let t=!1;switch(e.code){case n.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?w(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):P(0,n.keyPanSpeed),t=!0;break;case n.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?w(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):P(0,-n.keyPanSpeed),t=!0;break;case n.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?T(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):P(n.keyPanSpeed,0),t=!0;break;case n.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?T(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):P(-n.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),n.update())}(e)}function Z(e){switch(J(e),E.length){case 1:switch(n.touches.ONE){case 0:if(!1===n.enableRotate)return;F(e),i=r.TOUCH_ROTATE;break;case 1:if(!1===n.enablePan)return;k(e),i=r.TOUCH_PAN;break;default:i=r.NONE}break;case 2:switch(n.touches.TWO){case 2:if(!1===n.enableZoom&&!1===n.enablePan)return;!function(e){n.enableZoom&&z(e),n.enablePan&&k(e)}(e),i=r.TOUCH_DOLLY_PAN;break;case 3:if(!1===n.enableZoom&&!1===n.enableRotate)return;!function(e){n.enableZoom&&z(e),n.enableRotate&&F(e)}(e),i=r.TOUCH_DOLLY_ROTATE;break;default:i=r.NONE}break;default:i=r.NONE}i!==r.NONE&&n.dispatchEvent(ka)}function K(e){!1!==n.enabled&&e.preventDefault()}function J(e){let t=S[e.pointerId];void 0===t&&(t=new We,S[e.pointerId]=t),t.set(e.pageX,e.pageY)}function Q(e){const t=e.pointerId===E[0]?E[1]:E[0];return S[t]}n.domElement.addEventListener("contextmenu",K),n.domElement.addEventListener("pointerdown",G),n.domElement.addEventListener("pointercancel",j),n.domElement.addEventListener("wheel",W,{passive:!1}),n.domElement.getRootNode().addEventListener("keydown",X,{passive:!0,capture:!0}),this.update()}}const Ha=new Hr,ja=new _t,Wa=new _t,Xa=new _t,Ya=new _t,qa=new _t,Za=new _t,Ka=new _t,Ja=new _t,Qa=new _t,el=new _t,tl=new _t,nl=new _t,rl=new _t,il=new _t,sl=new qt,ol=new xt,al=new _t;class ll{constructor(e,t,n=Number.MAX_VALUE){this.camera=e,this.scene=t,this.startPoint=new _t,this.endPoint=new _t,this.collection=[],this.instances={},this.deep=n}select(e,t){return this.startPoint=e||this.startPoint,this.endPoint=t||this.endPoint,this.collection=[],this.updateFrustum(this.startPoint,this.endPoint),this.searchChildInFrustum(Ha,this.scene),this.collection}updateFrustum(e,t){if(e=e||this.startPoint,t=t||this.endPoint,e.x===t.x&&(t.x+=Number.EPSILON),e.y===t.y&&(t.y+=Number.EPSILON),this.camera.updateProjectionMatrix(),this.camera.updateMatrixWorld(),this.camera.isPerspectiveCamera){Wa.copy(e),Wa.x=Math.min(e.x,t.x),Wa.y=Math.max(e.y,t.y),t.x=Math.max(e.x,t.x),t.y=Math.min(e.y,t.y),Xa.setFromMatrixPosition(this.camera.matrixWorld),Ya.copy(Wa),qa.set(t.x,Wa.y,0),Za.copy(t),Ka.set(Wa.x,t.y,0),Ya.unproject(this.camera),qa.unproject(this.camera),Za.unproject(this.camera),Ka.unproject(this.camera),nl.copy(Ya).sub(Xa),rl.copy(qa).sub(Xa),il.copy(Za).sub(Xa),nl.normalize(),rl.normalize(),il.normalize(),nl.multiplyScalar(this.deep),rl.multiplyScalar(this.deep),il.multiplyScalar(this.deep),nl.add(Xa),rl.add(Xa),il.add(Xa);const n=Ha.planes;n[0].setFromCoplanarPoints(Xa,Ya,qa),n[1].setFromCoplanarPoints(Xa,qa,Za),n[2].setFromCoplanarPoints(Za,Ka,Xa),n[3].setFromCoplanarPoints(Ka,Ya,Xa),n[4].setFromCoplanarPoints(qa,Za,Ka),n[5].setFromCoplanarPoints(il,rl,nl),n[5].normal.multiplyScalar(-1)}else if(this.camera.isOrthographicCamera){const n=Math.min(e.x,t.x),r=Math.max(e.y,t.y),i=Math.max(e.x,t.x),s=Math.min(e.y,t.y);Ya.set(n,r,-1),qa.set(i,r,-1),Za.set(i,s,-1),Ka.set(n,s,-1),Ja.set(n,r,1),Qa.set(i,r,1),el.set(i,s,1),tl.set(n,s,1),Ya.unproject(this.camera),qa.unproject(this.camera),Za.unproject(this.camera),Ka.unproject(this.camera),Ja.unproject(this.camera),Qa.unproject(this.camera),el.unproject(this.camera),tl.unproject(this.camera);const o=Ha.planes;o[0].setFromCoplanarPoints(Ya,Ja,Qa),o[1].setFromCoplanarPoints(qa,Qa,el),o[2].setFromCoplanarPoints(el,tl,Ka),o[3].setFromCoplanarPoints(tl,Ja,Ya),o[4].setFromCoplanarPoints(qa,Za,Ka),o[5].setFromCoplanarPoints(el,Qa,Ja),o[5].normal.multiplyScalar(-1)}else console.error("THREE.SelectionBox: Unsupported camera type.")}searchChildInFrustum(e,t){if(t.isMesh||t.isLine||t.isPoints)if(t.isInstancedMesh){this.instances[t.uuid]=[];for(let n=0;n<t.count;n++)t.getMatrixAt(n,sl),sl.decompose(ja,ol,al),ja.applyMatrix4(t.matrixWorld),e.containsPoint(ja)&&this.instances[t.uuid].push(n)}else null===t.geometry.boundingSphere&&t.geometry.computeBoundingSphere(),ja.copy(t.geometry.boundingSphere.center),ja.applyMatrix4(t.matrixWorld),e.containsPoint(ja)&&this.collection.push(t);if(t.children.length>0)for(let n=0;n<t.children.length;n++)this.searchChildInFrustum(e,t.children[n])}}class cl{constructor(e,t){this.element=document.createElement("div"),this.element.classList.add(t),this.element.style.pointerEvents="none",this.renderer=e,this.startPoint=new We,this.pointTopLeft=new We,this.pointBottomRight=new We,this.isDown=!1,this.enabled=!0,this.onPointerDown=function(e){!1!==this.enabled&&(this.isDown=!0,this.onSelectStart(e))}.bind(this),this.onPointerMove=function(e){!1!==this.enabled&&this.isDown&&this.onSelectMove(e)}.bind(this),this.onPointerUp=function(){!1!==this.enabled&&(this.isDown=!1,this.onSelectOver())}.bind(this),this.renderer.domElement.addEventListener("pointerdown",this.onPointerDown),this.renderer.domElement.addEventListener("pointermove",this.onPointerMove),this.renderer.domElement.addEventListener("pointerup",this.onPointerUp)}dispose(){this.renderer.domElement.removeEventListener("pointerdown",this.onPointerDown),this.renderer.domElement.removeEventListener("pointermove",this.onPointerMove),this.renderer.domElement.removeEventListener("pointerup",this.onPointerUp)}onSelectStart(e){this.element.style.display="none",this.renderer.domElement.parentElement.appendChild(this.element),this.element.style.left=e.clientX+"px",this.element.style.top=e.clientY+"px",this.element.style.width="0px",this.element.style.height="0px",this.startPoint.x=e.clientX,this.startPoint.y=e.clientY}onSelectMove(e){this.element.style.display="block",this.pointBottomRight.x=Math.max(this.startPoint.x,e.clientX),this.pointBottomRight.y=Math.max(this.startPoint.y,e.clientY),this.pointTopLeft.x=Math.min(this.startPoint.x,e.clientX),this.pointTopLeft.y=Math.min(this.startPoint.y,e.clientY),this.element.style.left=this.pointTopLeft.x+"px",this.element.style.top=this.pointTopLeft.y+"px",this.element.style.width=this.pointBottomRight.x-this.pointTopLeft.x+"px",this.element.style.height=this.pointBottomRight.y-this.pointTopLeft.y+"px"}onSelectOver(){this.element.parentElement.removeChild(this.element)}}const{path2:hl,geom2:ul}=n(80715).geometries,{line:dl,arc:pl,cuboid:fl,polyhedron:ml,cylinder:gl}=n(80715).primitives,{extrudeLinear:vl}=n(80715).extrusions,{mirrorX:xl,mirrorY:_l,translate:bl,rotateX:yl,rotateY:El}=n(80715).transforms,{union:Sl,subtract:Ml,intersect:Al}=n(80715).booleans,Tl=class{constructor(e,t,n,r,i,s){this.x=e,this.z=t,this.iRow=n,this.iCol=r,this.model=s,this.group=1,this.hovered=!1,this.selected=!1,this.existing=i,this.orientation=!0,this.hoveredColor=this.colorMap(100,1,90),this.selectedColor=this.colorMap(0,1,90,!0),this.bottomColor=this.colorMap(0,20,90),this.params={type:"flat",connected:!1,height:9.8,angle:46,thickness:.4,beamLength:3},this.paramsRange={type:["arc","flat","ori","cus"],connected:[!1,!0],height:[1,20],angle:[20,70],thickness:[.1,.8],beamLength:[1,4]},this.paramsName={type:"Type",connected:"Connected",height:"Height",angle:"Angle",thickness:"Thickness",beamLength:"Beam Length"},this.mesh=null,this.geometry=null,this.topCSG=null,this.bottomMesh=null,this.sheetMesh=null,this.createMeshes(),this.updateGeometry()}colorMap(e,t,n,r=!1){let i=85,s=50*(1-(e-t)/(n-t))+40;return r&&(i=100,s=50),["hsl(",204,",",i,"%,",s,"%)"].join("")}uploadEndEffector(){document.getElementById("topFileInput").click()}unSelect(){this.selected=!1,this.updateAppearance()}select(){console.log(this.existing),this.selected=!0,this.updateAppearance()}hover(){this.hovered=!0,this.updateAppearance()}unHover(){this.hovered=!1,this.updateAppearance()}updateAppearance(){if(this.hovered)this.setColor(this.hoveredColor);else if(this.selected)this.setColor(this.selectedColor);else{let e=(this.params.thickness-this.paramsRange.thickness[0])/(this.paramsRange.thickness[1]-this.paramsRange.thickness[0])*.5+.5*(1-(this.params.beamLength-this.paramsRange.beamLength[0])/(this.paramsRange.beamLength[1]-this.paramsRange.beamLength[0])),t=0,n=1,r=this.colorMap(e,t,n);2===this.group?this.setColor("#40E0D0"):this.setColor(r)}this.mesh.visible=this.hovered||this.selected||this.existing,this.bottomMesh.visible=this.hovered||this.selected||this.existing,this.sheetMesh.visible=this.hovered||this.selected||this.existing}createMeshes(){const e=new Ko({color:this.bottomColor,transparent:!0});e.side=2,e.flatShading=!0,this.createSwitchGeometry(),this.mesh=new yr(this.geometry,e),this.mesh.position.set(this.x,0,this.z),this.mesh.module=this;let t=this.createBottomGeometry();this.bottomMesh=new yr(t,e),this.bottomMesh.position.set(this.x,0,this.z),this.bottomMesh.module=this,this.sheetGeometry=this.createSheetGeometry(),this.sheetMesh=new yr(this.sheetGeometry,e),this.sheetMesh.position.set(this.x,0,this.z),this.sheetMesh.module=this,this.updateAppearance()}createSheetGeometry(){const e=this.params,t=e.angle,n=e.thickness,r=e.beamLength,i=e.height;e.connected,e.type;const s=(2*n+.6)/Math.cos(t*Math.PI/180),o=(Math.cos(t*Math.PI/180),(r+(a=n+.3)/Math.tan(t/180*Math.PI)+a*Math.tan(t/180*Math.PI))*Math.sin(t*Math.PI/180));var a;Math.max(2.4+o+r*Math.sin(t*Math.PI/180)+s,i);const l=1.2+o+n/Math.cos(t*Math.PI/180)-.4;let c=null;return c=this.orientation?fl({size:[10,10,1.6],center:[0,0,-(l+1.6)/2]}):fl({size:[10,10+l+1.6,1.6],center:[0,0,-5]}),this.CSG2Geom(c)}createBottomGeometry(){const e=this.params,t=e.angle,n=e.thickness,r=e.beamLength,i=e.height;e.connected,e.type;const s=(2*n+.6)/Math.cos(t*Math.PI/180),o=(Math.cos(t*Math.PI/180),(r+(a=n+.3)/Math.tan(t/180*Math.PI)+a*Math.tan(t/180*Math.PI))*Math.sin(t*Math.PI/180));var a;Math.max(2.4+o+r*Math.sin(t*Math.PI/180)+s,i);const l=1.2+o+n/Math.cos(t*Math.PI/180)-.4;let c=bl([0,4.6-1.1,l/2+.5],Ml(Ml(Ml(Ml(Ml(fl({size:[9.2,9.2,l+1.6]}),bl([0,0,1.6],fl({size:[8,7.2,l]}))),bl([1.5,0,-1.5],yl(Math.PI/2,gl({radius:.3,height:10,center:[0,0,0]})))),bl([-1.5,0,-1.5],yl(Math.PI/2,gl({radius:.3,height:10,center:[0,0,0]})))),bl([-1.5,0,-.5],yl(Math.PI/2,gl({radius:.3,height:10,center:[0,0,0]}))),bl([1.5,0,-.5],yl(Math.PI/2,gl({radius:.3,height:10,center:[0,0,0]}))))));return bl([0,4.6-1.1,l/2+.5],fl({size:[9.2,9.2,l+1.6]})),this.CSG2Geom(c)}createSwitchGeometry(){const e=this.params,t=.6,n=1.2,r=e.angle,i=e.thickness,s=e.beamLength,o=e.height,a=e.connected,l=e.type,c=(2*i+t)/Math.cos(r*Math.PI/180),h=3-s*Math.cos(r*Math.PI/180),u=p(i+.3)*Math.sin(r*Math.PI/180),d=Math.max(2.4+u+s*Math.sin(r*Math.PI/180)+c,o);function p(e){return s+e/Math.tan(r*Math.PI/180)+e*Math.tan(r*Math.PI/180)}function f(){return Math.min(.8,(i+t)*Math.sin(r*Math.PI/180))}const m=function(e,r,i,s){const o=function(e,r,i){const s=function(e,r,i){const s=fl({size:[4,6,n],center:[2,0,.6]}),o=bl([4-h,0,n],fl({size:[h,6,u],center:[h/2,0,u/2]})),a=bl([0,0,n+u+r*Math.sin(e*Math.PI/180)],fl({size:[1,6,c],center:[.5,0,c/2]})),l=bl([1-i*Math.sin(e*Math.PI/180),0,n+u+p(i)*Math.sin(e*Math.PI/180)-i*Math.cos(e*Math.PI/180)],El(e*Math.PI/180,fl({size:[p(i),6,i],center:[p(i)/2,0,i/2]}))),d=Al(fl({size:[4,6,c+1.2+u+r*Math.sin(e*Math.PI/180)],center:[2,0,(c+1.2+u+r*Math.sin(e*Math.PI/180))/2]}),bl([1-i*Math.sin(e*Math.PI/180),0,c+1.2+u+r*Math.sin(e*Math.PI/180)-i*Math.cos(e*Math.PI/180)],El(e*Math.PI/180,fl({size:[p(2*i+t),6,i],center:[p(2*i+t)/2,0,i/2]}))));console.log(f()),console.log(c+r*Math.sin(e*Math.PI/180)-2.6*Math.tan(e*Math.PI/180));let m=c+r*Math.sin(e*Math.PI/180)-2.6*Math.tan(e*Math.PI/180);m<0&&(m=.1);const g=bl([4-f(),0,1.2+u],fl({size:[f(),6,m],center:[f()/2,0,(c+r*Math.sin(e*Math.PI/180)-2.6*Math.tan(e*Math.PI/180))/2]})),v=bl([4-h,-3,1.2],ml({points:[[0,0,0],[0,6,0],[0,6,u],[0,0,u],[-.8,0,0],[-.8,6,0]],faces:[[0,1,2,3],[5,4,3,2],[0,4,5,1],[0,3,4],[5,2,1]]}));return Sl(s,o,a,l,d,g,v)}(e,r,i),o=xl(s),a=bl([0,0,c/2+1.2+u+r*Math.sin(e*Math.PI/180)],yl(Math.PI/2,gl({radius:.4,height:6}))),l=Ml(Sl(s,o),a),d=2*(4-h),m=Ml(bl([-(4-h),0,1.2+.6],Ml(fl({size:[d,6,.6],center:[d/2,0,.3]}),fl({size:[1.2,8,2.8],center:[.6,0,.4]}))),Sl(bl([-(4-h-1.3-1),1.4,(n+.6+i+.5)/2],gl({radius:.3,height:n+.6+i+.5})),bl([-(4-h-1.3-1),-1.4,(n+.6+i+.5)/2],gl({radius:.3,height:n+.6+i+.5}))));return Sl(l,m)}(e,r,i);let m;switch(l){case"arc":m=function(e,t){const n=bl([0,0,d-4],Al(yl(Math.PI/2,Ml(gl({radius:4,height:6}),gl({radius:3.6,height:6}))),fl({size:[8,6,4],center:[0,0,2]})));let r=Math.max(d-1.2-4-(u+c+t*Math.sin(e*Math.PI/180))+2.6*Math.tan(e*Math.PI/180),0);const i=bl([3.8,0,1.2+u+c+t*Math.sin(e*Math.PI/180)-2.6*Math.tan(e*Math.PI/180)],fl({size:[.4,6,r]})),s=bl([-3.8,0,1.2+u+c+t*Math.sin(e*Math.PI/180)-2.6*Math.tan(e*Math.PI/180)],fl({size:[.4,6,r]}));return Sl(n,i,s)}(e,r);break;case"flat":m=bl([0,0,d/2],Ml(fl({size:[8,6,d]}),fl({size:[7.2,6,d-.8]})));break;case"ori":m=function(e,t){let r=2.4+u+t*Math.sin(Math.PI*e/180)+c;const i=Ml(bl([0,0,r/2],Ml(fl({size:[8,6,r]}),fl({size:[7.2,6,r-.8]}))),bl([-1,-1,c+n+u+t*Math.sin(Math.PI*e/180)],fl({size:[2,8,3],center:[1,0,1.5]}))),s=bl([0,0,r],fl({size:[4,6,.8+r-c-u-n-t*Math.sin(e)],center:[0,0,-(.8+r-c-u-n-t*Math.sin(e))/2]})),o=Al(bl([0,0,.6+c+u+t*Math.sin(Math.PI*e/180)],El(40*Math.PI/180,fl({size:[.4,6,3],center:[-.2,0,1.5]}))),s);return Sl(i,o,xl(o))}(e,r);break;case"cus":m=bl([0,0,d/2],s)}if(a){const t=d-(n+u+r*Math.sin(e*Math.PI/180)+c),i=bl([-.2,0,c+1.2+u+r*Math.sin(e)],fl({size:[.4,6,t],center:[.2,0,0]}));return Sl(o,i,m)}return Sl(o,m)}(r,s,i,this.topCSG);this.geometry=this.CSG2Geom(m)}addToScene(e){e.add(this.mesh),e.add(this.bottomMesh),e.add(this.sheetMesh)}exist(){this.existing=!0,this.mesh.visible=this.hovered||this.existing||this.selected,this.bottomMesh.visible=this.hovered||this.selected||this.existing,this.sheetMesh.visible=this.hovered||this.selected||this.existing}unExist(){this.existing=!1,this.mesh.visible=this.hovered||this.existing||this.selected,this.bottomMesh.visible=this.hovered||this.selected||this.existing,this.sheetMesh.visible=this.hovered||this.selected||this.existing}updateGeometry(){this.createSwitchGeometry(),this.sheetGeometry=this.createSheetGeometry();let e=this.createBottomGeometry();this.model.orientation?(this.geometry.rotateX(-Math.PI/2),e.rotateX(-Math.PI/2)):(this.geometry.rotateX(0),e.rotateX(0)),this.sheetGeometry.rotateX(-Math.PI/2),this.mesh.geometry.dispose(),this.mesh.geometry=this.geometry,this.sheetMesh.geometry.dispose(),this.sheetMesh.geometry=this.sheetGeometry,this.bottomMesh.geometry.dispose(),this.bottomMesh.geometry=e}setColor(e){const t=new Ko({color:e});t.side=2,t.flatShading=!0,this.mesh.material.dispose(),this.mesh.material=t}CSG2Geom(e){const t=[],n=[];let r=0;const i=e=>{void 0===e.index&&(e.index=r++,t.push(e[0],e[1],e[2]||0))};for(let t of e.polygons){let e=t.vertices;e.forEach(i);let r=e[0].index;for(let t=2;t<e.length;t++)n.push(r,e[t-1].index,e[t].index)}const s=new rr;return s.setAttribute("position",new Wn(new Float32Array(t),3)),s.setIndex(n),s.computeVertexNormals(),s}exportToObj(e){let t="";const n=e.getAttribute("position"),r=e.getAttribute("normal"),i=e.getAttribute("uv"),s=e.getIndex();for(let e=0;e<n.count;e++)t+=`v ${n.getX(e)} ${n.getY(e)} ${n.getZ(e)}\n`;if(void 0!==r)for(let e=0;e<r.count;e++)t+=`vn ${r.getX(e)} ${r.getY(e)} ${r.getZ(e)}\n`;if(void 0!==i)for(let e=0;e<i.count;e++)t+=`vt ${i.getX(e)} ${i.getY(e)}\n`;if(null!==s)for(let e=0;e<s.count;e+=3)t+=`f ${s.getX(e)+1} ${s.getX(e+1)+1} ${s.getX(e+2)+1}\n`;else for(let e=0;e<n.count;e+=3)t+=`f ${e+1} ${e+2} ${e+3}\n`;return t}downloadObjFile(){const e=this.mesh.geometry,t=this.exportToObj(e),n=new Blob([t],{type:"text/plain"}),r=URL.createObjectURL(n),i=document.createElement("a");i.href=r,i.download=`module_${this.iRow}_${this.iCol}.obj`,i.click()}downloadBottomObjFile(){const e=this.bottomMesh.geometry,t=this.exportToObj(e),n=new Blob([t],{type:"text/plain"}),r=URL.createObjectURL(n),i=document.createElement("a");i.href=r,i.download="bottom.obj",i.click()}getBottomGeometry(){return this.bottomMesh.geometry}setTransparency(e){this.mesh.material.transparent=e<1,this.mesh.material.opacity=e,this.bottomMesh.material.transparent=e<1,this.bottomMesh.material.opacity=e,this.sheetMesh.material.transparent=e<1,this.sheetMesh.material.opacity=e}},wl=class{static createStraightPipe(e,t,n=.2,r=1){const i=new _t(e[0],e[1],e[2]),s=new _t(t[0],t[1],t[2]),o=(new _t).subVectors(s,i),a=o.length(),l=new Zo(n,n,a,8);let c=4620980;2===r&&(c=4251856);const h=new Ko({color:c}),u=new yr(l,h);return u.position.copy(i),u.position.addScaledVector(o,.5),u.quaternion.setFromUnitVectors(new _t(0,1,0),o.normalize()),u}};class Cl{constructor(e,t,n,r,i="div"){this.parent=e,this.object=t,this.property=n,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement(i),this.domElement.classList.add("controller"),this.domElement.classList.add(r),this.$name=document.createElement("div"),this.$name.classList.add("name"),Cl.nextNameID=Cl.nextNameID||0,this.$name.id="lil-gui-name-"+ ++Cl.nextNameID,this.$widget=document.createElement("div"),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.domElement.addEventListener("keydown",(e=>e.stopPropagation())),this.domElement.addEventListener("keyup",(e=>e.stopPropagation())),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(n)}name(e){return this._name=e,this.$name.textContent=e,this}onChange(e){return this._onChange=e,this}_callOnChange(){this.parent._callOnChange(this),void 0!==this._onChange&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),void 0!==this._onFinishChange&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(e=!0){return this.disable(!e)}disable(e=!0){return e===this._disabled||(this._disabled=e,this.domElement.classList.toggle("disabled",e),this.$disable.toggleAttribute("disabled",e)),this}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(e){const t=this.parent.add(this.object,this.property,e);return t.name(this._name),this.destroy(),t}min(e){return this}max(e){return this}step(e){return this}decimals(e){return this}listen(e=!0){return this._listening=e,void 0!==this._listenCallbackID&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const e=this.save();e!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=e}getValue(){return this.object[this.property]}setValue(e){return this.getValue()!==e&&(this.object[this.property]=e,this._callOnChange(),this.updateDisplay()),this}updateDisplay(){return this}load(e){return this.setValue(e),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class Rl extends Cl{constructor(e,t,n){super(e,t,n,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",(()=>{this.setValue(this.$input.checked),this._callOnFinishChange()})),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function Pl(e){let t,n;return(t=e.match(/(#|0x)?([a-f0-9]{6})/i))?n=t[2]:(t=e.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?n=parseInt(t[1]).toString(16).padStart(2,0)+parseInt(t[2]).toString(16).padStart(2,0)+parseInt(t[3]).toString(16).padStart(2,0):(t=e.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(n=t[1]+t[1]+t[2]+t[2]+t[3]+t[3]),!!n&&"#"+n}const Dl={isPrimitive:!0,match:e=>"string"==typeof e,fromHexString:Pl,toHexString:Pl},Ll={isPrimitive:!0,match:e=>"number"==typeof e,fromHexString:e=>parseInt(e.substring(1),16),toHexString:e=>"#"+e.toString(16).padStart(6,0)},Il={isPrimitive:!1,match:e=>Array.isArray(e),fromHexString(e,t,n=1){const r=Ll.fromHexString(e);t[0]=(r>>16&255)/255*n,t[1]=(r>>8&255)/255*n,t[2]=(255&r)/255*n},toHexString:([e,t,n],r=1)=>Ll.toHexString(e*(r=255/r)<<16^t*r<<8^n*r)},Nl={isPrimitive:!1,match:e=>Object(e)===e,fromHexString(e,t,n=1){const r=Ll.fromHexString(e);t.r=(r>>16&255)/255*n,t.g=(r>>8&255)/255*n,t.b=(255&r)/255*n},toHexString:({r:e,g:t,b:n},r=1)=>Ll.toHexString(e*(r=255/r)<<16^t*r<<8^n*r)},Ol=[Dl,Ll,Il,Nl];class Ul extends Cl{constructor(e,t,n,r){var i;super(e,t,n,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=(i=this.initialValue,Ol.find((e=>e.match(i)))),this._rgbScale=r,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",(()=>{this._setValueFromHexString(this.$input.value)})),this.$input.addEventListener("blur",(()=>{this._callOnFinishChange()})),this.$text.addEventListener("input",(()=>{const e=Pl(this.$text.value);e&&this._setValueFromHexString(e)})),this.$text.addEventListener("focus",(()=>{this._textFocused=!0,this.$text.select()})),this.$text.addEventListener("blur",(()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()})),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(e){if(this._format.isPrimitive){const t=this._format.fromHexString(e);this.setValue(t)}else this._format.fromHexString(e,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(e){return this._setValueFromHexString(e),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class Fl extends Cl{constructor(e,t,n){super(e,t,n,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",(e=>{e.preventDefault(),this.getValue().call(this.object),this._callOnChange()})),this.$button.addEventListener("touchstart",(()=>{}),{passive:!0}),this.$disable=this.$button}}class kl extends Cl{constructor(e,t,n,r,i,s){super(e,t,n,"number"),this._initInput(),this.min(r),this.max(i);const o=void 0!==s;this.step(o?s:this._getImplicitStep(),o),this.updateDisplay()}decimals(e){return this._decimals=e,this.updateDisplay(),this}min(e){return this._min=e,this._onUpdateMinMax(),this}max(e){return this._max=e,this._onUpdateMinMax(),this}step(e,t=!0){return this._step=e,this._stepExplicit=t,this}updateDisplay(){const e=this.getValue();if(this._hasSlider){let t=(e-this._min)/(this._max-this._min);t=Math.max(0,Math.min(t,1)),this.$fill.style.width=100*t+"%"}return this._inputFocused||(this.$input.value=void 0===this._decimals?e:e.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),window.matchMedia("(pointer: coarse)").matches&&(this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any")),this.$widget.appendChild(this.$input),this.$disable=this.$input;const e=e=>{const t=parseFloat(this.$input.value);isNaN(t)||(this._snapClampSetValue(t+e),this.$input.value=this.getValue())};let t,n,r,i,s,o=!1;const a=e=>{if(o){const r=e.clientX-t,i=e.clientY-n;Math.abs(i)>5?(e.preventDefault(),this.$input.blur(),o=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(r)>5&&l()}if(!o){const t=e.clientY-r;s-=t*this._step*this._arrowKeyMultiplier(e),i+s>this._max?s=this._max-i:i+s<this._min&&(s=this._min-i),this._snapClampSetValue(i+s)}r=e.clientY},l=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",a),window.removeEventListener("mouseup",l)};this.$input.addEventListener("input",(()=>{let e=parseFloat(this.$input.value);isNaN(e)||(this._stepExplicit&&(e=this._snap(e)),this.setValue(this._clamp(e)))})),this.$input.addEventListener("keydown",(t=>{"Enter"===t.key&&this.$input.blur(),"ArrowUp"===t.code&&(t.preventDefault(),e(this._step*this._arrowKeyMultiplier(t))),"ArrowDown"===t.code&&(t.preventDefault(),e(this._step*this._arrowKeyMultiplier(t)*-1))})),this.$input.addEventListener("wheel",(t=>{this._inputFocused&&(t.preventDefault(),e(this._step*this._normalizeMouseWheel(t)))}),{passive:!1}),this.$input.addEventListener("mousedown",(e=>{t=e.clientX,n=r=e.clientY,o=!0,i=this.getValue(),s=0,window.addEventListener("mousemove",a),window.addEventListener("mouseup",l)})),this.$input.addEventListener("focus",(()=>{this._inputFocused=!0})),this.$input.addEventListener("blur",(()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()}))}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const e=e=>{const t=this.$slider.getBoundingClientRect();let n=(r=e,i=t.left,s=t.right,o=this._min,(r-i)/(s-i)*(this._max-o)+o);var r,i,s,o;this._snapClampSetValue(n)},t=t=>{e(t.clientX)},n=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",t),window.removeEventListener("mouseup",n)};let r,i,s=!1;const o=t=>{t.preventDefault(),this._setDraggingStyle(!0),e(t.touches[0].clientX),s=!1},a=t=>{if(s){const e=t.touches[0].clientX-r,n=t.touches[0].clientY-i;Math.abs(e)>Math.abs(n)?o(t):(window.removeEventListener("touchmove",a),window.removeEventListener("touchend",l))}else t.preventDefault(),e(t.touches[0].clientX)},l=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",a),window.removeEventListener("touchend",l)},c=this._callOnFinishChange.bind(this);let h;this.$slider.addEventListener("mousedown",(r=>{this._setDraggingStyle(!0),e(r.clientX),window.addEventListener("mousemove",t),window.addEventListener("mouseup",n)})),this.$slider.addEventListener("touchstart",(e=>{e.touches.length>1||(this._hasScrollBar?(r=e.touches[0].clientX,i=e.touches[0].clientY,s=!0):o(e),window.addEventListener("touchmove",a,{passive:!1}),window.addEventListener("touchend",l))}),{passive:!1}),this.$slider.addEventListener("wheel",(e=>{if(Math.abs(e.deltaX)<Math.abs(e.deltaY)&&this._hasScrollBar)return;e.preventDefault();const t=this._normalizeMouseWheel(e)*this._step;this._snapClampSetValue(this.getValue()+t),this.$input.value=this.getValue(),clearTimeout(h),h=setTimeout(c,400)}),{passive:!1})}_setDraggingStyle(e,t="horizontal"){this.$slider&&this.$slider.classList.toggle("active",e),document.body.classList.toggle("lil-gui-dragging",e),document.body.classList.toggle(`lil-gui-${t}`,e)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(e){let{deltaX:t,deltaY:n}=e;return Math.floor(e.deltaY)!==e.deltaY&&e.wheelDelta&&(t=0,n=-e.wheelDelta/120,n*=this._stepExplicit?1:10),t+-n}_arrowKeyMultiplier(e){let t=this._stepExplicit?1:10;return e.shiftKey?t*=10:e.altKey&&(t/=10),t}_snap(e){const t=Math.round(e/this._step)*this._step;return parseFloat(t.toPrecision(15))}_clamp(e){return e<this._min&&(e=this._min),e>this._max&&(e=this._max),e}_snapClampSetValue(e){this.setValue(this._clamp(this._snap(e)))}get _hasScrollBar(){const e=this.parent.root.$children;return e.scrollHeight>e.clientHeight}get _hasMin(){return void 0!==this._min}get _hasMax(){return void 0!==this._max}}class zl extends Cl{constructor(e,t,n,r){super(e,t,n,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$select.addEventListener("change",(()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()})),this.$select.addEventListener("focus",(()=>{this.$display.classList.add("focus")})),this.$select.addEventListener("blur",(()=>{this.$display.classList.remove("focus")})),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.options(r)}options(e){return this._values=Array.isArray(e)?e:Object.values(e),this._names=Array.isArray(e)?e:Object.keys(e),this.$select.replaceChildren(),this._names.forEach((e=>{const t=document.createElement("option");t.textContent=e,this.$select.appendChild(t)})),this.updateDisplay(),this}updateDisplay(){const e=this.getValue(),t=this._values.indexOf(e);return this.$select.selectedIndex=t,this.$display.textContent=-1===t?e:this._names[t],this}}class Bl extends Cl{constructor(e,t,n){super(e,t,n,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("spellcheck","false"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",(()=>{this.setValue(this.$input.value)})),this.$input.addEventListener("keydown",(e=>{"Enter"===e.code&&this.$input.blur()})),this.$input.addEventListener("blur",(()=>{this._callOnFinishChange()})),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}let Vl=!1;class $l{constructor({parent:e,autoPlace:t=void 0===e,container:n,width:r,title:i="Controls",closeFolders:s=!1,injectStyles:o=!0,touchStyles:a=!0}={}){if(this.parent=e,this.root=e?e.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("div"),this.$title.classList.add("title"),this.$title.setAttribute("role","button"),this.$title.setAttribute("aria-expanded",!0),this.$title.setAttribute("tabindex",0),this.$title.addEventListener("click",(()=>this.openAnimated(this._closed))),this.$title.addEventListener("keydown",(e=>{"Enter"!==e.code&&"Space"!==e.code||(e.preventDefault(),this.$title.click())})),this.$title.addEventListener("touchstart",(()=>{}),{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(i),this.parent)return this.parent.children.push(this),this.parent.folders.push(this),void this.parent.$children.appendChild(this.domElement);this.domElement.classList.add("root"),a&&this.domElement.classList.add("allow-touch-styles"),!Vl&&o&&(function(){const e=document.createElement("style");e.innerHTML='.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, "Droid Sans Mono", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n  background: var(--background-color);\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: " ";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: "lil-gui";\n  content: "↕";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  height: var(--title-height);\n  line-height: calc(var(--title-height) - 4px);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  -webkit-tap-highlight-color: transparent;\n  cursor: pointer;\n  outline: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: "lil-gui";\n  content: "▾";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: "▸";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: "Empty";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui label, .lil-gui input, .lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n}\n.lil-gui input {\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  width: var(--checkbox-size);\n  height: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: "lil-gui";\n  content: "✓";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  border: none;\n}\n@media (hover: hover) {\n  .lil-gui button:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui button:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: "lil-gui";\n  src: url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff");\n}';const t=document.querySelector("head link[rel=stylesheet], head style");t?document.head.insertBefore(e,t):document.head.appendChild(e)}(),Vl=!0),n?n.appendChild(this.domElement):t&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),r&&this.domElement.style.setProperty("--width",r+"px"),this._closeFolders=s}add(e,t,n,r,i){if(Object(n)===n)return new zl(this,e,t,n);const s=e[t];switch(typeof s){case"number":return new kl(this,e,t,n,r,i);case"boolean":return new Rl(this,e,t);case"string":return new Bl(this,e,t);case"function":return new Fl(this,e,t)}console.error("gui.add failed\n\tproperty:",t,"\n\tobject:",e,"\n\tvalue:",s)}addColor(e,t,n=1){return new Ul(this,e,t,n)}addFolder(e){const t=new $l({parent:this,title:e});return this.root._closeFolders&&t.close(),t}load(e,t=!0){return e.controllers&&this.controllers.forEach((t=>{t instanceof Fl||t._name in e.controllers&&t.load(e.controllers[t._name])})),t&&e.folders&&this.folders.forEach((t=>{t._title in e.folders&&t.load(e.folders[t._title])})),this}save(e=!0){const t={controllers:{},folders:{}};return this.controllers.forEach((e=>{if(!(e instanceof Fl)){if(e._name in t.controllers)throw new Error(`Cannot save GUI with duplicate property "${e._name}"`);t.controllers[e._name]=e.save()}})),e&&this.folders.forEach((e=>{if(e._title in t.folders)throw new Error(`Cannot save GUI with duplicate folder "${e._title}"`);t.folders[e._title]=e.save()})),t}open(e=!0){return this._setClosed(!e),this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}_setClosed(e){this._closed!==e&&(this._closed=e,this._callOnOpenClose(this))}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(e=!0){return this._setClosed(!e),this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame((()=>{const t=this.$children.clientHeight;this.$children.style.height=t+"px",this.domElement.classList.add("transition");const n=e=>{e.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",n))};this.$children.addEventListener("transitionend",n);const r=e?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!e),requestAnimationFrame((()=>{this.$children.style.height=r+"px"}))})),this}title(e){return this._title=e,this.$title.textContent=e,this}reset(e=!0){return(e?this.controllersRecursive():this.controllers).forEach((e=>e.reset())),this}onChange(e){return this._onChange=e,this}_callOnChange(e){this.parent&&this.parent._callOnChange(e),void 0!==this._onChange&&this._onChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(e){this.parent&&this.parent._callOnFinishChange(e),void 0!==this._onFinishChange&&this._onFinishChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onOpenClose(e){return this._onOpenClose=e,this}_callOnOpenClose(e){this.parent&&this.parent._callOnOpenClose(e),void 0!==this._onOpenClose&&this._onOpenClose.call(this,e)}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach((e=>e.destroy()))}controllersRecursive(){let e=Array.from(this.controllers);return this.folders.forEach((t=>{e=e.concat(t.controllersRecursive())})),e}foldersRecursive(){let e=Array.from(this.folders);return this.folders.forEach((t=>{e=e.concat(t.foldersRecursive())})),e}}const Gl=/^[og]\s*(.+)?/,Hl=/^mtllib /,jl=/^usemtl /,Wl=/^usemap /,Xl=/\s+/,Yl=new _t,ql=new _t,Zl=new _t,Kl=new _t,Jl=new _t,Ql=new zn;function ec(){const e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);const n=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(e,t){const n=this._finalize(!1);n&&(n.inherited||n.groupCount<=0)&&this.materials.splice(n.index,1);const r={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==n?n.smooth:this.smooth,groupStart:void 0!==n?n.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){const t={index:"number"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(r),r},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){const t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(let e=this.materials.length-1;e>=0;e--)this.materials[e].groupCount<=0&&this.materials.splice(e,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},n&&n.name&&"function"==typeof n.clone){const e=n.clone(0);e.inherited=!0,this.object.materials.push(e)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){const n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseNormalIndex:function(e,t){const n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseUVIndex:function(e,t){const n=parseInt(e,10);return 2*(n>=0?n-1:n+t/2)},addVertex:function(e,t,n){const r=this.vertices,i=this.object.geometry.vertices;i.push(r[e+0],r[e+1],r[e+2]),i.push(r[t+0],r[t+1],r[t+2]),i.push(r[n+0],r[n+1],r[n+2])},addVertexPoint:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,n){const r=this.normals,i=this.object.geometry.normals;i.push(r[e+0],r[e+1],r[e+2]),i.push(r[t+0],r[t+1],r[t+2]),i.push(r[n+0],r[n+1],r[n+2])},addFaceNormal:function(e,t,n){const r=this.vertices,i=this.object.geometry.normals;Yl.fromArray(r,e),ql.fromArray(r,t),Zl.fromArray(r,n),Jl.subVectors(Zl,ql),Kl.subVectors(Yl,ql),Jl.cross(Kl),Jl.normalize(),i.push(Jl.x,Jl.y,Jl.z),i.push(Jl.x,Jl.y,Jl.z),i.push(Jl.x,Jl.y,Jl.z)},addColor:function(e,t,n){const r=this.colors,i=this.object.geometry.colors;void 0!==r[e]&&i.push(r[e+0],r[e+1],r[e+2]),void 0!==r[t]&&i.push(r[t+0],r[t+1],r[t+2]),void 0!==r[n]&&i.push(r[n+0],r[n+1],r[n+2])},addUV:function(e,t,n){const r=this.uvs,i=this.object.geometry.uvs;i.push(r[e+0],r[e+1]),i.push(r[t+0],r[t+1]),i.push(r[n+0],r[n+1])},addDefaultUV:function(){const e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){const t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,n,r,i,s,o,a,l){const c=this.vertices.length;let h=this.parseVertexIndex(e,c),u=this.parseVertexIndex(t,c),d=this.parseVertexIndex(n,c);if(this.addVertex(h,u,d),this.addColor(h,u,d),void 0!==o&&""!==o){const e=this.normals.length;h=this.parseNormalIndex(o,e),u=this.parseNormalIndex(a,e),d=this.parseNormalIndex(l,e),this.addNormal(h,u,d)}else this.addFaceNormal(h,u,d);if(void 0!==r&&""!==r){const e=this.uvs.length;h=this.parseUVIndex(r,e),u=this.parseUVIndex(i,e),d=this.parseUVIndex(s,e),this.addUV(h,u,d),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";const t=this.vertices.length;for(let n=0,r=e.length;n<r;n++){const r=this.parseVertexIndex(e[n],t);this.addVertexPoint(r),this.addColor(r)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";const n=this.vertices.length,r=this.uvs.length;for(let t=0,r=e.length;t<r;t++)this.addVertexLine(this.parseVertexIndex(e[t],n));for(let e=0,n=t.length;e<n;e++)this.addUVLine(this.parseUVIndex(t[e],r))}};return e.startObject("",!1),e}class tc extends ua{constructor(e){super(e),this.materials=null}load(e,t,n,r){const i=this,s=new fa(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,(function(n){try{t(i.parse(n))}catch(t){r?r(t):console.error(t),i.manager.itemError(e)}}),n,r)}setMaterials(e){return this.materials=e,this}parse(e){const t=new ec;-1!==e.indexOf("\r\n")&&(e=e.replace(/\r\n/g,"\n")),-1!==e.indexOf("\\\n")&&(e=e.replace(/\\\n/g,""));const n=e.split("\n");let r=[];for(let e=0,i=n.length;e<i;e++){const i=n[e].trimStart();if(0===i.length)continue;const s=i.charAt(0);if("#"!==s)if("v"===s){const e=i.split(Xl);switch(e[0]){case"v":t.vertices.push(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3])),e.length>=7?(Ql.setRGB(parseFloat(e[4]),parseFloat(e[5]),parseFloat(e[6])).convertSRGBToLinear(),t.colors.push(Ql.r,Ql.g,Ql.b)):t.colors.push(void 0,void 0,void 0);break;case"vn":t.normals.push(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3]));break;case"vt":t.uvs.push(parseFloat(e[1]),parseFloat(e[2]))}}else if("f"===s){const e=i.slice(1).trim().split(Xl),n=[];for(let t=0,r=e.length;t<r;t++){const r=e[t];if(r.length>0){const e=r.split("/");n.push(e)}}const r=n[0];for(let e=1,i=n.length-1;e<i;e++){const i=n[e],s=n[e+1];t.addFace(r[0],i[0],s[0],r[1],i[1],s[1],r[2],i[2],s[2])}}else if("l"===s){const e=i.substring(1).trim().split(" ");let n=[];const r=[];if(-1===i.indexOf("/"))n=e;else for(let t=0,i=e.length;t<i;t++){const i=e[t].split("/");""!==i[0]&&n.push(i[0]),""!==i[1]&&r.push(i[1])}t.addLineGeometry(n,r)}else if("p"===s){const e=i.slice(1).trim().split(" ");t.addPointGeometry(e)}else if(null!==(r=Gl.exec(i))){const e=(" "+r[0].slice(1).trim()).slice(1);t.startObject(e)}else if(jl.test(i))t.object.startMaterial(i.substring(7).trim(),t.materialLibraries);else if(Hl.test(i))t.materialLibraries.push(i.substring(7).trim());else if(Wl.test(i))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===s){if(r=i.split(" "),r.length>1){const e=r[1].trim().toLowerCase();t.object.smooth="0"!==e&&"off"!==e}else t.object.smooth=!0;const e=t.object.currentMaterial();e&&(e.smooth=t.object.smooth)}else{if("\0"===i)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+i+'"')}}t.finalize();const i=new Eo;if(i.materialLibraries=[].concat(t.materialLibraries),!0==!(1===t.objects.length&&0===t.objects[0].geometry.vertices.length))for(let e=0,n=t.objects.length;e<n;e++){const n=t.objects[e],r=n.geometry,s=n.materials,o="Line"===r.type,a="Points"===r.type;let l=!1;if(0===r.vertices.length)continue;const c=new rr;c.setAttribute("position",new qn(r.vertices,3)),r.normals.length>0&&c.setAttribute("normal",new qn(r.normals,3)),r.colors.length>0&&(l=!0,c.setAttribute("color",new qn(r.colors,3))),!0===r.hasUVIndices&&c.setAttribute("uv",new qn(r.uvs,2));const h=[];for(let e=0,n=s.length;e<n;e++){const n=s[e],r=n.name+"_"+n.smooth+"_"+l;let i=t.materials[r];if(null!==this.materials)if(i=this.materials.create(n.name),!o||!i||i instanceof Io){if(a&&i&&!(i instanceof Go)){const e=new Go({size:10,sizeAttenuation:!1});$n.prototype.copy.call(e,i),e.color.copy(i.color),e.map=i.map,i=e}}else{const e=new Io;$n.prototype.copy.call(e,i),e.color.copy(i.color),i=e}void 0===i&&(i=o?new Io:a?new Go({size:1,sizeAttenuation:!1}):new Ko,i.name=n.name,i.flatShading=!n.smooth,i.vertexColors=l,t.materials[r]=i),h.push(i)}let u;if(h.length>1){for(let e=0,t=s.length;e<t;e++){const t=s[e];c.addGroup(t.groupStart,t.groupCount,e)}u=o?new $o(c,h):a?new Yo(c,h):new yr(c,h)}else u=o?new $o(c,h[0]):a?new Yo(c,h[0]):new yr(c,h[0]);u.name=n.name,i.add(u)}else if(t.vertices.length>0){const e=new Go({size:1,sizeAttenuation:!1}),n=new rr;n.setAttribute("position",new qn(t.vertices,3)),t.colors.length>0&&void 0!==t.colors[0]&&(n.setAttribute("color",new qn(t.colors,3)),e.vertexColors=!0);const r=new Yo(n,e);i.add(r)}return i}}n(98618),n(38257);var nc=n(80715);let{scene:rc,camera:ic,renderer:sc,animate:oc}=(()=>{let e=new Lo;e.background=new zn(16777215);let t=new Ir(75,window.innerWidth/window.innerHeight,.1,1e4);t.position.set(10,10,10),t.lookAt(0,0,0);let n=new Do({antialias:!0});n.setPixelRatio(window.devicePixelRatio),n.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(n.domElement),new Ga(t,n.domElement).mouseButtons.LEFT=null;const r=new ll(t,e),i=new cl(n,"selectBox");window.shiftDown=!1,document.addEventListener("keydown",(function(e){e.shiftKey&&(window.shiftDown=!0)})),document.addEventListener("keyup",(function(e){e.shiftKey||(window.shiftDown=!1)})),document.addEventListener("pointerdown",(function(e){0!==e.button?i.enabled=!1:i.enabled=!0,r.startPoint.set(e.clientX/window.innerWidth*2-1,-e.clientY/window.innerHeight*2+1,.5)})),document.addEventListener("pointermove",(function(e){if(i.enabled&&i.isDown){model.unHoverAll(),r.endPoint.set(e.clientX/window.innerWidth*2-1,-e.clientY/window.innerHeight*2+1,.5);const t=r.select();for(let e=0;e<t.length;e++)if(void 0!==t[e].module){let n=t[e].module;model.select(n)}}})),document.addEventListener("pointerup",(function(e){}));let s=new Ea(16777215,1);e.add(s);let o=new ya(16777215,3);o.position.set(30,50,80),e.add(o);const a=new Ua(100);e.add(a);const l=new Oa(500,50);e.add(l);let c=()=>{requestAnimationFrame(c),n.render(e,t)};return{scene:e,camera:t,renderer:n,animate:c}})(),ac=new class{constructor(e,t,n,r,i,s,o){this.scene=null,this.nRows=n,this.nCols=r,this.nRowsMax=e,this.nColsMax=t,this.orientation=!0,this.gapX=s,this.gapY=o,this.gui=null,this.xOffset=10,this.yOffset=10,this.mouseDown=!1,this.mouseDownPos=[0,0],this.selections=[],this.hoverings=[],this.modules=[];for(let i=0;i<t;i++){console.log(i/this.nCols);let t=[];this.modules.push(t);for(let a=0;a<e;a++){let e=this.xOffset+i*s,l=null;l=this.orientation?this.yOffset+a*s:this.yOffset+a*o;let c=new Tl(e,l,a,i,a<n&&i<r,this);t.push(c)}}this.pipes=[]}addToScene(e){this.modules.forEach((t=>{t.forEach((t=>{t.addToScene(e)}))}))}bindEvents(e,t,n){this.bindHoverEvent(e,t,n),this.bindClickEvent(e,t,n)}bindHoverEvent(e,t,n){n.domElement.addEventListener("mousemove",(e=>{if(this.mouseDown)return;this.unHoverAll();const n=new Da,r=new We(e.clientX/window.innerWidth*2-1,-e.clientY/window.innerHeight*2+1);n.setFromCamera(r,t);let i=this.modules.flat(),s=n.intersectObjects(i.map((e=>e.mesh)));if(s.length>0)for(let e=0;e<s.length;e++){let t=s[e].object.module;this.hover(t)}}))}bindClickEvent(e,t,n){n.domElement.addEventListener("mousedown",(e=>{window.shiftDown||model.unSelectAll(),this.mouseDown=!0,this.mouseDownPos=[e.clientX,e.clientY]})),n.domElement.addEventListener("mouseup",(e=>{if(this.mouseDown=!1,e.clientX===this.mouseDownPos[0]&&e.clientY===this.mouseDownPos[1])if(0===this.hoverings.length)this.gui.onUnSelect();else{for(let e=0;e<this.hoverings.length;e++)this.select(this.hoverings[e]);this.gui.onSelect()}}))}bindGUI(e){this.gui=e}firstSelectedModule(){return this.selections[0]}unSelectAll(){for(let e=0;e<this.selections.length;e++)this.selections[e].unSelect();this.selections=[]}select(e){this.selections.includes(e)||(e.select(),this.selections.push(e)),window.selected=this.selections[0]}hover(e){e.hover(),this.hoverings.push(e)}unHoverAll(){for(let e=0;e<this.hoverings.length;e++)this.hoverings[e].unHover();this.hoverings=[]}updateVisibility(e,t){this.modules.forEach(((n,r)=>{n.forEach(((n,i)=>{r<t&&i<e?n.exist():n.unExist()}))}))}updateModules(){this.modules.forEach((e=>{e.forEach((e=>{e.orientation=this.orientation,e.updateGeometry()}))}));for(let e=0;e<this.nColsMax;e++){let t=[];this.modules.push(t);for(let t=0;t<this.nRowsMax;t++){let n=this.xOffset+e*this.gapX,r=null;r=this.orientation?this.yOffset+t*this.gapX:this.yOffset+t*this.gapY,this.modules[t][e].mesh.position.set(n,0,r),this.modules[t][e].bottomMesh.position.set(n,0,r),this.modules[t][e].sheetMesh.position.set(n,0,r)}}}addModules(){for(let e=0;e<this.selections.length;e++)this.selections[e].exist();this.unSelectAll()}removeModules(){for(let e=0;e<this.selections.length;e++)this.selections[e].unExist();this.unSelectAll()}downloadAllObjFiles(){this.modules.forEach((e=>{e.forEach((e=>{e.existing&&e.downloadObjFile()}))})),this.downloadBottom()}downloadBottom(){let e=[];this.modules.forEach((t=>{t.forEach((t=>{t.existing&&(e.push(t.bottomMesh),e.push(t.sheetMesh))}))}));const t=this.exportToObj(e),n=new Blob([t],{type:"text/plain"}),r=document.createElement("a");r.href=URL.createObjectURL(n),r.download="bottom.obj",r.click()}exportToObj(e){let t="",n=0;return e.forEach((e=>{let r=e;const i=(e=e.geometry).getAttribute("position"),s=e.getAttribute("normal"),o=e.getAttribute("uv"),a=e.getIndex();for(let e=0;e<i.count;e++){const n=i.getX(e)+r.position.x,s=i.getY(e)+r.position.y,o=i.getZ(e)+r.position.z;t+=`v ${n} ${s} ${o}\n`}if(void 0!==s)for(let e=0;e<s.count;e++){const n=s.getX(e),r=s.getY(e),i=s.getZ(e);t+=`vn ${n} ${r} ${i}\n`}if(void 0!==o)for(let e=0;e<o.count;e++){const n=o.getX(e),r=o.getY(e);t+=`vt ${n} ${r}\n`}if(null!==a)for(let e=0;e<a.count;e+=3){const r=a.getX(e)+1+n,i=a.getX(e+1)+1+n,s=a.getX(e+2)+1+n;t+=`f ${r} ${i} ${s}\n`}else for(let e=0;e<i.count;e+=3)t+=`f ${e+1+n} ${e+2+n} ${e+3+n}\n`;n+=i.count})),t}setGroup(e,t){e.group=t,e.updateAppearance()}setSelectedToGroup(e){for(let t=0;t<this.selections.length;t++)this.setGroup(this.selections[t],e)}getUnitPipePoints(e,t){let n=1.5;1===t?n=1.5:2===t&&(n=-1.5);let r=4.6,i=1.3,s=0;s=1===t?-.15:.15;let o=-.5;return{p0:[e.x,o+s,e.z-r],p1:[e.x,o+s,e.z-r+i],p2:[e.x,7.5+s,e.z-r+i],p3:[e.x,7.5+s,e.z+r-i],p4:[e.x,o+s,e.z+r-i],p5:[e.x,o+s,e.z+r]}}getUnitPipePointsBack(e,t){let n=4.6,r=-1;return r=1===t?-.15:.15,{p0:[e.x-2,1.5+r,e.z-n],p1:[e.x-2,1.5+r,e.z-n+1.3],p2:[e.x+1,1.5+r,e.z-1],p3:[e.x+1,2.5+r,e.z-1],p4:[e.x+1,2.5+r,e.z+1],p5:[e.x+1,1.5+r,e.z+1],p6:[e.x-2,1.5+r,e.z+n-1.3],p7:[e.x-2,1.5+r,e.z+n]}}createPipes(){let e=.15;this.removePipes(),this.setModulesTransparency(!0);let t=null,n=null;this.modules.forEach(((r,i)=>{r.forEach(((i,s)=>{if(!i.existing)return;let o=this.getUnitPipePoints(i,1);if(0===s&&(t=o.p0),1===i.group?(this.pipes.push(wl.createStraightPipe(o.p0,o.p1,e,1)),this.pipes.push(wl.createStraightPipe(o.p1,o.p2,e,1)),this.pipes.push(wl.createStraightPipe(o.p2,o.p3,e,1)),this.pipes.push(wl.createStraightPipe(o.p3,o.p4,e,1)),this.pipes.push(wl.createStraightPipe(o.p4,o.p5,e,1))):2===i.group&&this.pipes.push(wl.createStraightPipe(o.p0,o.p5,e,1)),s<r.length-1&&r[s+1].existing){const t=this.getUnitPipePoints(r[s+1],1);this.pipes.push(wl.createStraightPipe(o.p5,t.p0,e,1))}if(o=this.getUnitPipePointsBack(i,1),0===s&&(n=o.p0),this.pipes.push(wl.createStraightPipe(o.p0,o.p1,e,1)),this.pipes.push(wl.createStraightPipe(o.p1,o.p2,e,1)),this.pipes.push(wl.createStraightPipe(o.p2,o.p3,e,1)),this.pipes.push(wl.createStraightPipe(o.p3,o.p4,e,1)),this.pipes.push(wl.createStraightPipe(o.p4,o.p5,e,1)),this.pipes.push(wl.createStraightPipe(o.p5,o.p6,e,1)),this.pipes.push(wl.createStraightPipe(o.p6,o.p7,e,1)),s<r.length-1&&r[s+1].existing){const t=this.getUnitPipePointsBack(r[s+1]);this.pipes.push(wl.createStraightPipe(o.p7,t.p0,e,1))}0===s&&this.pipes.push(wl.createStraightPipe(t,n,e,1))}))})),this.modules.forEach(((r,i)=>{r.forEach(((i,s)=>{if(!i.existing)return;let o=this.getUnitPipePoints(i,2);if(0===s&&(t=o.p0),2===i.group?(this.pipes.push(wl.createStraightPipe(o.p0,o.p1,e,2)),this.pipes.push(wl.createStraightPipe(o.p1,o.p2,e,2)),this.pipes.push(wl.createStraightPipe(o.p2,o.p3,e,2)),this.pipes.push(wl.createStraightPipe(o.p3,o.p4,e,2)),this.pipes.push(wl.createStraightPipe(o.p4,o.p5,e,2))):1===i.group&&this.pipes.push(wl.createStraightPipe(o.p0,o.p5,e,2)),s<r.length-1&&r[s+1].existing){const t=this.getUnitPipePoints(r[s+1],2);this.pipes.push(wl.createStraightPipe(o.p5,t.p0,e,2))}if(o=this.getUnitPipePointsBack(i,2),0===s&&(n=o.p0),this.pipes.push(wl.createStraightPipe(o.p0,o.p1,e,2)),this.pipes.push(wl.createStraightPipe(o.p1,o.p2,e,2)),this.pipes.push(wl.createStraightPipe(o.p2,o.p3,e,2)),this.pipes.push(wl.createStraightPipe(o.p3,o.p4,e,2)),this.pipes.push(wl.createStraightPipe(o.p4,o.p5,e,2)),this.pipes.push(wl.createStraightPipe(o.p5,o.p6,e,2)),this.pipes.push(wl.createStraightPipe(o.p6,o.p7,e,2)),s<r.length-1&&r[s+1].existing){const t=this.getUnitPipePointsBack(r[s+1]);this.pipes.push(wl.createStraightPipe(o.p7,t.p0,e,2))}0===s&&this.pipes.push(wl.createStraightPipe(t,n,e,2))}))})),this.pipes.forEach((e=>{e&&this.scene.add(e)}))}removePipes(){this.pipes.forEach((e=>{e&&(this.scene.remove(e),e.geometry.dispose(),e.material.dispose())})),this.pipes=[],this.setModulesTransparency(!1)}updateVisibility(e,t){this.modules.forEach(((n,r)=>{n.forEach(((n,i)=>{r<t&&i<e?n.exist():n.unExist()}))}))}setModulesTransparency(e){const t=e?.3:1;this.modules.forEach((e=>{e.forEach((e=>{e.setTransparency(t)}))}))}}(5,5,2,2,!0,10,12.5);ac.addToScene(rc),ac.scene=rc,ac.bindEvents(rc,ic,sc),window.model=ac;let lc=new class{constructor(e){this.model=e,this.gui=new $l,this.globalFolder=this.gui.addFolder("Global"),this.createGlobalFolder(),this.globalFolder.open(),this.moduleFolder=this.gui.addFolder("Selected Module"),this.moduleFolder.open()}getModuleValues(){let e=[];for(let t of this.moduleFolder.controllers)if(t._hasSlider){let n=t.getValue();e.push(n)}return e}onSelect(){this.onUnSelect(),this.createModuleFolder(this.model.firstSelectedModule())}onUnSelect(){this.destroyModuleFolder()}createModuleFolder(e){const t=e.params,n=e.paramsRange,r=e.paramsName;for(let i=0;i<Object.keys(t).length;i++){const s=Object.keys(t)[i];"number"==typeof n[s][0]?this.moduleFolder[r[s]]=this.moduleFolder.add(e.params,s,n[s][0],n[s][1]).name(r[s]):"boolean"==typeof n[s][0]?this.moduleFolder[r[s]]=this.moduleFolder.add(e.params,s).name(r[s]):"string"==typeof n[s][0]&&(this.moduleFolder[r[s]]=this.moduleFolder.add(e.params,s,n[s]).name(r[s]))}for(let e of this.moduleFolder.controllers)e.onChange((t=>{const n=e.property;for(let e=0;e<this.model.selections.length;e++){let r=this.model.selections[e];r.params[n]=t,r.updateGeometry()}}));this.moduleFolder.uploadEndEffector=this.moduleFolder.add(e,"uploadEndEffector").name("Upload End Effector")}destroyModuleFolder(){try{for(;this.moduleFolder.controllers.length>0;)this.moduleFolder.controllers[0].destroy()}catch(e){}}createGlobalFolder(){this.globalFolder.nRows=this.globalFolder.add(model,"nRows",1,50).name("# of Rows"),this.globalFolder.nCols=this.globalFolder.add(model,"nCols",1,50).name("# of Columns"),this.globalFolder.nRows.onChange((e=>{this.model.updateVisibility(this.globalFolder.nRows.getValue(),this.globalFolder.nCols.getValue())})),this.globalFolder.nCols.onChange((e=>{this.model.updateVisibility(this.globalFolder.nRows.getValue(),this.globalFolder.nCols.getValue())})),this.globalFolder.orientation=this.globalFolder.add(model,"orientation").name("Upwards"),this.globalFolder.orientation.onChange((e=>{this.model.updateModules()})),this.globalFolder.Add=this.globalFolder.add(model,"addModules").name("Add Modules"),this.globalFolder.Remove=this.globalFolder.add(model,"removeModules").name("Remove Modules"),this.globalFolder.downloadObjFiles=this.globalFolder.add(model,"downloadAllObjFiles").name("Download All OBJ Files"),this.globalFolder.setGroup1=this.globalFolder.add(model,"setSelectedToGroup").name("Set to Group 1"),this.globalFolder.setGroup2=this.globalFolder.add(model,"setSelectedToGroup").name("Set to Group 2"),this.globalFolder.setGroup1.onChange((()=>{model.setSelectedToGroup(1)})),this.globalFolder.setGroup2.onChange((()=>{model.setSelectedToGroup(2)})),this.globalFolder.showPipes=this.globalFolder.add(model,"createPipes").name("Show Pipes"),this.globalFolder.hidePipes=this.globalFolder.add(model,"removePipes").name("Hide Pipes")}}(ac);ac.bindGUI(lc),window.gui=lc,document.getElementById("topFileInput").addEventListener("change",(function(e){const t=e.target.files[0],n=new FileReader;n.onload=function(e){var t;t=e.target.result,(new tc).parse(t).traverse((function(e){if(e instanceof yr){let t=e.geometry;function n(e){const t=e.attributes.position.array,n=e.index.array,r=[];for(let e=0;e<n.length;e+=3){const i=n[e],s=n[e+1],o=n[e+2],a=[t[3*i],t[3*i+1],t[3*i+2]],l=[t[3*s],t[3*s+1],t[3*s+2]],c=[t[3*o],t[3*o+1],t[3*o+2]];r.push([a,l,c])}return nc.geometries.geom3.fromPoints(r)}t=function(e,t=1e-4){t=Math.max(t,Number.EPSILON);const n={},r=e.getIndex(),i=e.getAttribute("position"),s=r?r.count:i.count;let o=0;const a=Object.keys(e.attributes),l={},c={},h=[],u=["getX","getY","getZ","getW"],d=["setX","setY","setZ","setW"];for(let t=0,n=a.length;t<n;t++){const n=a[t],r=e.attributes[n];l[n]=new Wn(new r.array.constructor(r.count*r.itemSize),r.itemSize,r.normalized);const i=e.morphAttributes[n];i&&(c[n]=new Wn(new i.array.constructor(i.count*i.itemSize),i.itemSize,i.normalized))}const p=.5*t,f=Math.log10(1/t),m=Math.pow(10,f),g=p*m;for(let t=0;t<s;t++){const i=r?r.getX(t):t;let s="";for(let t=0,n=a.length;t<n;t++){const n=a[t],r=e.getAttribute(n),o=r.itemSize;for(let e=0;e<o;e++)s+=~~(r[u[e]](i)*m+g)+","}if(s in n)h.push(n[s]);else{for(let t=0,n=a.length;t<n;t++){const n=a[t],r=e.getAttribute(n),s=e.morphAttributes[n],h=r.itemSize,p=l[n],f=c[n];for(let e=0;e<h;e++){const t=u[e],n=d[e];if(p[n](o,r[t](i)),s)for(let e=0,r=s.length;e<r;e++)f[e][n](o,s[e][t](i))}}n[s]=o,h.push(o),o++}}const v=e.clone();for(const t in e.attributes){const e=l[t];if(v.setAttribute(t,new Wn(e.array.slice(0,o*e.itemSize),e.itemSize,e.normalized)),t in c)for(let e=0;e<c[t].length;e++){const n=c[t][e];v.morphAttributes[t][e]=new Wn(n.array.slice(0,o*n.itemSize),n.itemSize,n.normalized)}}return v.setIndex(h),v}(t);const r=n(t);ac.modules.forEach(((e,t)=>{e.forEach(((e,t)=>{e.selected&&(e.topCSG=r)}))}))}}))},n.readAsText(t)})),oc()})()})();
//# sourceMappingURL=bundle.d349cd4edf2f5156322b.js.map